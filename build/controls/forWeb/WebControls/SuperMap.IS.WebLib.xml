<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SuperMap.IS.WebLib</name>
    </assembly>
    <members>
        <member name="T:SuperMap.IS.Web.TcpLinker">
            <summary>
            Tcp协议后台应用的连接器。
            </summary>
        </member>
        <member name="T:SuperMap.IS.Web.Linker">
            <summary>
            后台应用的连接器，使用静态方法创建相应的Linker。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.Linker._url">
            <summary>
            远程服务池对象的URL地址。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.Linker._mapNames">
            <summary>
            当前连接的MapServer所发布的所有地图集合。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.Linker.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.Linker.#ctor(System.String)">
            <summary>
            构造函数。
            </summary>
            <param name="url">URL地址</param>
        </member>
        <member name="M:SuperMap.IS.Web.Linker.Ping">
            <summary>
            测试后台服务的连接信息。
            </summary>
            <returns>连接成功返回true，不成功返回 false 。</returns>
        </member>
        <member name="P:SuperMap.IS.Web.Linker.MapNames">
            <summary>
            地图名数组。
            </summary>
        </member>
        <member name="P:SuperMap.IS.Web.Linker.RequestUrl">
            <summary>
            请求URL地址。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.TcpLinker.servicePool">
            <summary>
            远程对象池。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.TcpLinker.serverBroker">
            <summary>
            远程空间服务器对象。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.TcpLinker.#ctor(System.String,System.String,System.Int32)">
            <summary>
            构造函数。
            </summary>
            <param name="url">URL地址</param>
            <param name="address">服务地址</param>
            <param name="port">服务端口</param>
        </member>
        <member name="M:SuperMap.IS.Web.TcpLinker.Create(System.String,System.String,System.Int32)">
            <summary>
            创建Tcp协议后台应用的连接器。
            </summary>
            <param name="url">URL地址</param>
            <param name="address">服务地址</param>
            <param name="port">服务端口</param>
            <returns>后台应用的连接器</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpLinker.GetService``1(System.String)">
            <summary>
            获取远程服务对象。
            </summary>
            <typeparam name="T">远程服务对象所实现的接口类型</typeparam>
            <param name="serviceName">远程服务名</param>
            <returns>远程服务对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpLinker.Ping">
            <summary>
            测试后台服务的连接信息。
            </summary>
            <returns>连接成功返回true，否则返回false。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpLinker.Equals(System.Object)">
            <summary>
            用于判断一个指定的 <seealso cref="T:System.Object"/> 是否与当前对象相等。
            </summary>
            <param name="obj">指定对象</param>
            <returns>如果相等返回true，否则返回false</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpLinker.Equals(SuperMap.IS.Web.TcpLinker)">
            <summary>
            用于判断一个指定的 <seealso cref="T:SuperMap.IS.Web.TcpLinker"/> 是否与当前对象相等。
            </summary>
            <param name="linker">指定 TcpLinker 对象</param>
            <returns>如果相等返回true，否则返回false</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpLinker.GetHashCode">
            <summary>
            返回该实例的哈希代码。
            </summary>
            <returns>该实例的哈希代码。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpLinker.ToString">
            <summary>
            返回表示当前 <see cref="T:SuperMap.IS.Web.TcpLinker"/> 对象的 <see cref="T:System.String"/>。
            </summary>
            <returns>当前 <see cref="T:SuperMap.IS.Web.TcpLinker"/> 对象的 <see cref="T:System.String"/></returns>
        </member>
        <member name="P:SuperMap.IS.Web.TcpLinker.ServerAddress">
            <summary>
            远程服务器地址。
            </summary>
        </member>
        <member name="P:SuperMap.IS.Web.TcpLinker.ServerPort">
            <summary>
            远程服务器端口。
            </summary>
        </member>
        <member name="P:SuperMap.IS.Web.TcpLinker.ServicePool">
            <summary>
            远程对象池。
            </summary>
        </member>
        <member name="P:SuperMap.IS.Web.TcpLinker.MapNames">
            <summary>
            地图名数组。
            </summary>
        </member>
        <member name="T:SuperMap.IS.Web.ConnectorWrapper.QueryLayerWrapper">
            <summary>
            
            </summary>
        </member>
        <member name="T:SuperMap.IS.Web.ICache">
            <summary>
            缓存接口。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.ICache.Add(System.String,System.Object)">
            <summary>
            添加项。
            </summary>
            <param name="key">要添加的元素的键。</param>
            <param name="data">要添加的元素的值。</param>
        </member>
        <member name="M:SuperMap.IS.Web.ICache.Add(System.String,System.Object,System.TimeSpan)">
            <summary>
            添加项，指定缓存时间。
            </summary>
            <param name="key">要添加的元素的键。</param>
            <param name="data">要添加的元素的值。</param>
            <param name="timeSpan">缓存时间</param>
        </member>
        <member name="M:SuperMap.IS.Web.ICache.Update(System.String,System.Object)">
            <summary>
            更新项。
            </summary>
            <param name="key">要更新的元素的键。</param>
            <param name="data">要更新的元素的值。</param>
        </member>
        <member name="M:SuperMap.IS.Web.ICache.Exists(System.String)">
            <summary>
            项是否存在于缓存中。
            </summary>
            <param name="key">要检查的元素的键。</param>
            <returns>存在返回true，否则返回false。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.ICache.GetData(System.String)">
            <summary>
            获取项。
            </summary>
            <param name="key">要获取的元素的键。</param>
            <returns>获取的元素</returns>
        </member>
        <member name="M:SuperMap.IS.Web.ICache.Remove(System.String)">
            <summary>
            删除项。
            </summary>
            <param name="key">要删除的元素的键。</param>
        </member>
        <member name="M:SuperMap.IS.Web.ICache.Clear">
            <summary>
            清除所有缓存项。
            </summary>
        </member>
        <member name="T:SuperMap.IS.Web.HttpContextCache">
            <summary>
            HttpContext 缓存。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.HttpContextCache.#ctor(System.Web.HttpContext)">
            <summary>
            构造函数。从 HttpContext 中获取 Cache 对象。
            </summary>
            <param name="context">Http的特定信息。</param>
            <remarks>
            同一个 HttpContext 实例应当只创建一个 HttpContextCache 实例。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.HttpContextCache.Add(System.String,System.Object)">
            <summary>
            添加项。
            </summary>
            <param name="key">用于引用该对象的缓存键</param>
            <param name="data">要加入缓存中的对象</param>
        </member>
        <member name="M:SuperMap.IS.Web.HttpContextCache.Add(System.String,System.Object,System.TimeSpan)">
            <summary>
            添加项，指定缓存时间。
            </summary>
            <param name="key">用于引用该对象的缓存键</param>
            <param name="data">要加入缓存中的对象</param>
            <param name="timeSpan">缓存时间</param>
        </member>
        <member name="M:SuperMap.IS.Web.HttpContextCache.Update(System.String,System.Object)">
            <summary>
            更新项。
            </summary>
            <param name="key">用于引用该对象的缓存键</param>
            <param name="data">更新后的对象</param>
        </member>
        <member name="M:SuperMap.IS.Web.HttpContextCache.Exists(System.String)">
            <summary>
            项是否存在于缓存中。
            </summary>
            <param name="key">用于引用该对象的缓存键</param>
            <returns>如果存在返回true，不存在返回false</returns>
        </member>
        <member name="M:SuperMap.IS.Web.HttpContextCache.GetData(System.String)">
            <summary>
            获取项。
            </summary>
            <param name="key">用于引用该对象的缓存键</param>
            <returns>获取到的对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.HttpContextCache.Remove(System.String)">
            <summary>
            删除项。
            </summary>
            <param name="key">用于引用该对象的缓存键</param>
        </member>
        <member name="M:SuperMap.IS.Web.HttpContextCache.Clear">
            <summary>
            清除所有缓存项。
            </summary>
        </member>
        <member name="T:SuperMap.IS.Web.DictionaryCache">
            <summary>
            用于将 IDictionary 对象转换为 ICache 对象的帮助类。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.DictionaryCache.#ctor(System.Collections.IDictionary)">
            <summary>
            构造函数。
            </summary>
            <param name="dict">IDictionary 对象</param>
        </member>
        <member name="M:SuperMap.IS.Web.DictionaryCache.Add(System.String,System.Object)">
            <summary>
            添加缓存数据。
            </summary>
            <param name="key">用作要添加的元素的键</param>
            <param name="data">用作要添加的元素的值</param>
        </member>
        <member name="M:SuperMap.IS.Web.DictionaryCache.Add(System.String,System.Object,System.TimeSpan)">
            <summary>
            添加缓存数据。
            </summary>
            <param name="key">用作要添加的元素的键</param>
            <param name="data">用作要添加的元素的值</param>
            <param name="timeSpan">缓存时间</param>
        </member>
        <member name="M:SuperMap.IS.Web.DictionaryCache.Update(System.String,System.Object)">
            <summary>
            更新指点key的缓存数据。
            </summary>
            <param name="key">用作要更新的元素的键</param>
            <param name="data">用作要更新的元素的值</param>
        </member>
        <member name="M:SuperMap.IS.Web.DictionaryCache.Exists(System.String)">
            <summary>
            判断指定key的缓存数据是否存在。
            </summary>
            <param name="key">定位的键</param>
            <returns>存在返回true，否则返回false</returns>
        </member>
        <member name="M:SuperMap.IS.Web.DictionaryCache.GetData(System.String)">
            <summary>
            重新获取指定的key的缓存数据。
            </summary>
            <param name="key">指定的键值</param>
            <returns>获取到的对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.DictionaryCache.Remove(System.String)">
            <summary>
            移除指定key的缓存。
            </summary>
            <param name="key">指定的键值</param>
        </member>
        <member name="M:SuperMap.IS.Web.DictionaryCache.Clear">
            <summary>
            清除所有的缓存。
            </summary>
        </member>
        <member name="T:SuperMap.IS.Web.MMFCache">
            <summary>
            内存映射文件缓存。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.MMFCache.#ctor(System.String)">
            <summary>
            构造函数。
            </summary>
            <param name="cacheName">缓存的名称。</param>
        </member>
        <member name="M:SuperMap.IS.Web.MMFCache.Add(System.String,System.Object)">
            <summary>
            添加缓存数据。
            </summary>
            <param name="key">用作要添加的元素的键</param>
            <param name="data">用作要添加的元素的值</param>
        </member>
        <member name="M:SuperMap.IS.Web.MMFCache.Add(System.String,System.Object,System.TimeSpan)">
            <summary>
            添加缓存数据。
            </summary>
            <param name="key">用作要添加的元素的键</param>
            <param name="data">用作要添加的元素的值</param>
            <param name="timeSpan">缓存时间</param>
        </member>
        <member name="M:SuperMap.IS.Web.MMFCache.Update(System.String,System.Object)">
            <summary>
            更新指定key的缓存数据。
            </summary>
            <param name="key">用作要更新的元素的键</param>
            <param name="data">用作要更新的元素的值</param>
        </member>
        <member name="M:SuperMap.IS.Web.MMFCache.Exists(System.String)">
            <summary>
            判断指定key的缓存数据是否存在。
            </summary>
            <param name="key">定位的键</param>
            <returns>存在返回true，否则返回false</returns>
        </member>
        <member name="M:SuperMap.IS.Web.MMFCache.GetData(System.String)">
            <summary>
            重新获取指定key的缓存数据。
            </summary>
            <param name="key">指定的键值</param>
            <returns>获取到的对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.MMFCache.Remove(System.String)">
            <summary>
            移除指定key的缓存。
            </summary>
            <param name="key">指定的键值</param>
        </member>
        <member name="M:SuperMap.IS.Web.MMFCache.Clear">
            <summary>
            清除缓存。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.MMFCache.Dispose">
            <summary>
            释放资源。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.MMFCache.Dispose(System.Boolean)">
            <summary>
            释放资源。
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:SuperMap.IS.Web.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SuperMap.IS.Web.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SuperMap.IS.Web.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SuperMap.IS.Web.Resources.ClientAppBalancer_Des_ArguNullEx">
            <summary>
              Looks up a localized string similar to AppServer LoadBalancingMachine or AppServer Machine.
            </summary>
        </member>
        <member name="P:SuperMap.IS.Web.Resources.FailedConnectingService">
            <summary>
              Looks up a localized string similar to Exception occured when connecting IS service({0}), please check the status of SuperMap IS Server on server side and ensure the request map({1}) is published by that server. Inner exception message: {2}.
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.MapCacheTower.RectifyMapParam(SuperMap.IS.Utility.MapParam)">
            <summary>
            根据当前比例尺修正视窗范围。
            </summary>
            <param name="mapParam">地图参数对象</param>
        </member>
        <member name="M:SuperMap.IS.Web.MapCachePlane.GetByBoundsAndCachedStatus(SuperMap.IS.Utility.MapRect,SuperMap.IS.ServiceInterface.IMapService,System.Double,System.String@,System.Double@)">
            <summary>
            按照范围以及期望缓存命中率阈值进行取得缓存地图和当前缓存命中率。
            </summary>
            <param name="viewBounds">指定范围</param>
            <param name="mapService">地图服务远程对象</param>
            <param name="threshold">期望缓存命中率阈值，如果当前缓存命中率小于该值，就不会从服务器上取图。此时返回的 mapUrls 为空。</param>
            <param name="mapUrls">地图Url</param>
            <param name="cachedRatio">当前缓存命中率</param>
        </member>
        <member name="M:SuperMap.IS.Web.MapCachePlane.GetCachedStatus(SuperMap.IS.Utility.MapRect)">
            <summary>
            计算某一范围的缓存率。
            </summary>
            <param name="viewBounds">地图范围。</param>
            <returns>返回缓存率，double类型。</returns>
        </member>
        <member name="T:SuperMap.IS.Web.IMap">
            <summary>
            Map 接口。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.SaveStatusToHistory">
            <summary>
            把当前 MapImage 状态保存到历史记录中。
            </summary>
            <remarks>
            只有当 AutoSaveHistory 为 false 时，才需要调用本方法。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetMapNames">
            <summary>
            获取地图列表。
            </summary>
            <returns>返回地图列表。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetCurrentMapParam">
            <summary>
            获取当前的 MapParam。
            </summary>
            <returns>地图参数</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetCurrentMapImage">
            <summary>
            获取当前的 MapImage。
            </summary>
            <returns>地图以及相关地图信息的描述。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.SetCurrentMapParam(SuperMap.IS.Utility.MapParam)">
            <summary>
            设置当前的 MapParam。
            </summary>
            <param name="mapParam">地图参数。</param>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetLastMapParam(System.String)">
            <summary>
            获取与指定地图名对应的一个最近的 MapParam。
            </summary>
            <remarks>
            每次对地图进行操作之后，地图参数MapParam都会被缓存起来，获取最近的一个MapParam就是获取对该地图最近一次操作之后的MapParam。
            </remarks>
            <param name="mapName">地图名称</param>
            <returns>返回地图参数</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.AddEntity(System.String,System.String,SuperMap.IS.Utility.Entity[],System.String)">
            <summary>
            在一个图层上增加一组同类型的实体。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="layerName">图层名称</param>
            <param name="targetEntities">要添加的实体数组。</param>
            <param name="userID">编辑用户唯一标识。进行地图编辑的时候，首先需要通过<see cref="M:SuperMap.IS.Web.IMap.LockLayer(System.String,System.String,System.String)"/>来锁定要编辑的图层，此时会获得一个
            地图编辑的唯一标识。在使用AddEntity方法添加实体的时候需要输入该地图编辑的唯一标识，否则地图服务不会执行该操作。</param>
            <returns>编辑结果的信息，其中包含新增实体ID数组信息，添加实体的操作是否成功的信息，此次添加实体所影响到的地图范围。</returns>
            <remarks>
            要求在图层中添加相同类型的实体，例如在点图层中必须添加一组点类型的实体。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.BufferQuery(SuperMap.IS.Utility.BufferParam,SuperMap.IS.Utility.QueryParam)">
            <summary>
            缓冲查询分析方法。
            </summary>
            <remarks>
            <para>
            缓冲查询分析是在点、线和多边形实体周围按照缓冲的距离条件自动建立缓冲区域，并且将该缓冲区域与待查询的图层按照一定
            空间关系和属性条件进行叠置分析，得到符合条件的几何对象（记录）。缓冲查询分析方法经常会应用在工程应用中，
            例如，在环境治理工程中，常在污染的河流周围划出一定宽度的范围表示受到污染的区域，通过该方法查询到的在该污染区内的
            居民就需要搬迁；又如在飞机场，常根据健康需要在周围划分出一定范围的区域作为非居住区，那么如果在该区域内查询出有居民区，
            那么这些居民区的住户就需要拆迁，等等。
            </para>
            <para>
            要进行缓冲区查询分析，首先需要通过 SuperMap.IS.Utility.BufferParam 对象设置与缓冲区相关的参数，例如指定要做缓冲区的几何对象，
            设置缓冲区的半径，设置制作出的缓冲区在地图上的显示风格，关于 BufferParam 对象的说明请参见<see cref="T:SuperMap.IS.Utility.BufferParam"/>。
            </para>
            <para>
            设置与缓冲区相关的信息后，还需要通过 SuperMap.IS.Utility.QueryParam 对象设置查询相关的参数，例如设置要查询哪个图层的记录，
            设置查询条件，设置查询结果在地图上的显示风格，关于 QueryParam 对象的说明请参见<see cref="T:SuperMap.IS.Utility.QueryParam"/>。
            </para>
            </remarks>
            <example>
            详见TcpMap的<see cref="M:SuperMap.IS.Web.TcpMap.BufferQuery(SuperMap.IS.Utility.BufferParam,SuperMap.IS.Utility.QueryParam)"/>方法的示例。
            </example>
            <param name="bufferParam">必选，<see cref="T:SuperMap.IS.Utility.BufferParam"/>类型。通过该参数对象设置与缓冲区相关的信息，例如指定要做
            缓冲区的几何对象，设置缓冲区的半径，设置制作出的缓冲区在地图上的显示风格。</param>
            <param name="queryParam">必选，<see cref="T:SuperMap.IS.Utility.QueryParam"/>类型。通过该参数对象设置查询相关的参数，例如设置要查询哪个图层的记录，
            设置查询条件，设置查询结果在地图上的显示风格。</param>
            <returns>缓冲查询的结果。</returns>
            <seealso cref="T:SuperMap.IS.Utility.BufferParam"/>
            <seealso cref="T:SuperMap.IS.Utility.QueryParam"/>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.BufferQuery(SuperMap.IS.Utility.BufferParam,SuperMap.IS.Utility.QueryParam,SuperMap.IS.Utility.Highlight)">
            <summary>
            缓冲查询分析方法。
            </summary>
            <remarks>
            <para>
            缓冲查询分析是在点、线和多边形实体周围按照缓冲的距离条件自动建立缓冲区域，并且将该缓冲区域与待查询的图层按照一定
            空间关系和属性条件进行叠置分析，得到符合条件的几何对象（记录）。缓冲查询分析方法经常会应用在工程应用中，
            例如，在环境治理工程中，常在污染的河流周围划出一定宽度的范围表示受到污染的区域，通过该方法查询到的在该污染区内的
            居民就需要搬迁；又如在飞机场，常根据健康需要在周围划分出一定范围的区域作为非居住区，那么如果在该区域内查询出有居民区，
            那么这些居民区的住户就需要拆迁，等等。
            </para>
            <para>
            要进行缓冲区查询分析，首先需要通过 SuperMap.IS.Utility.BufferParam 对象设置与缓冲区相关的参数，例如指定要做缓冲区的几何对象，
            设置缓冲区的半径，设置制作出的缓冲区在地图上的显示风格，关于 BufferParam 对象的说明请参见<see cref="T:SuperMap.IS.Utility.BufferParam"/>。
            </para>
            <para>
            设置与缓冲区相关的信息后，还需要通过 SuperMap.IS.Utility.QueryParam 对象设置查询相关的参数，例如设置要查询哪个图层的记录，
            设置查询条件，设置查询结果在地图上的显示风格，关于 QueryParam 对象的说明请参见<see cref="T:SuperMap.IS.Utility.QueryParam"/>。
            </para>
            </remarks>
            <example>
            详见TcpMap的<see cref="M:SuperMap.IS.Web.TcpMap.BufferQuery(SuperMap.IS.Utility.BufferParam,SuperMap.IS.Utility.QueryParam)"/>方法的示例。
            </example>
            <param name="bufferParam">必选，<see cref="T:SuperMap.IS.Utility.BufferParam"/>类型。通过该参数对象设置与缓冲区相关的信息，例如指定要做
            缓冲区的几何对象，设置缓冲区的半径，设置制作出的缓冲区在地图上的显示风格。</param>
            <param name="queryParam">必选，<see cref="T:SuperMap.IS.Utility.QueryParam"/>类型。通过该参数对象设置查询相关的参数，例如设置要查询哪个图层的记录，
            设置查询条件，设置查询结果在地图上的显示风格。</param>
            <param name="bufferSourceHighlight">缓冲源对象高亮参数。</param>
            <returns>缓冲查询的结果。</returns>
            <seealso cref="T:SuperMap.IS.Utility.BufferParam"/>
            <seealso cref="T:SuperMap.IS.Utility.QueryParam"/>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.BufferQuery(SuperMap.IS.Utility.Geometry[],SuperMap.IS.Utility.BufferQueryParam)">
            <summary>
            根据几何对象进行缓冲查询分析的方法。
            </summary>
            <param name="geometries">缓冲几何对象。</param>
            <param name="bufferQueryParam">必选，<see cref="T:SuperMap.IS.Utility.BufferQueryParam"/>类型。通过该参数对象设置与缓冲查询分析相关的参数。</param>
            <returns>缓冲分析查询结果。</returns>
            <remarks>
            <para>
            缓冲查询分析是在点、线和多边形实体周围按照缓冲的距离条件自动建立缓冲区域，并且将该缓冲区域与待查询的图层按照一定
            空间关系和属性条件进行叠置分析，得到符合条件的几何对象（记录）。缓冲查询分析方法经常会应用在工程应用中，
            例如，在环境治理工程中，常在污染的河流周围划出一定宽度的范围表示受到污染的区域，通过该方法查询到的在该污染区内的
            居民就需要搬迁；又如在飞机场，常根据健康需要在周围划分出一定范围的区域作为非居住区，那么如果在该区域内查询出有居民区，
            那么这些居民区的住户就需要拆迁，等等。
            </para>
            <para>
            要进行缓冲区查询分析，需要通过 SuperMap.IS.Utility.BufferQueryParam 对象设置与缓冲区相关的参数和与查询相关的参数。
            其中，与缓冲区相关的参数包括设置缓冲区的半径、缓冲源对象在地图上的显示风格、空间几何对象间的查询模式等；
            与查询相关的参数需通过 SuperMap.IS.Utility.BufferQueryParam.QueryParam 对象设置，包括设置要查询哪个图层的记录、设置查询条件、
            设置查询结果在地图上的显示风格等。关于 BufferQueryParam 对象的说明请参见<see cref="T:SuperMap.IS.Utility.BufferQueryParam"/>。
            </para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.BufferQuery(SuperMap.IS.Utility.QueryLayer,SuperMap.IS.Utility.BufferQueryParam)">
            <summary>
            根据图层进行缓冲分析的方法。
            </summary>
            <param name="layer">必选，<see cref="T:SuperMap.IS.Utility.QueryLayer"/>缓冲图层。</param>
            <param name="bufferQueryParam">必选，<see cref="T:SuperMap.IS.Utility.BufferQueryParam"/>类型。通过该参数对象设置与缓冲查询分析相关的参数。</param>
            <returns>缓冲分析查询结果。</returns>
            <remarks>
            <para>
            缓冲查询分析是在点、线和多边形实体周围按照缓冲的距离条件自动建立缓冲区域，并且将该缓冲区域与待查询的图层按照一定
            空间关系和属性条件进行叠置分析，得到符合条件的几何对象（记录）。缓冲查询分析方法经常会应用在工程应用中，
            例如，在环境治理工程中，常在污染的河流周围划出一定宽度的范围表示受到污染的区域，通过该方法查询到的在该污染区内的
            居民就需要搬迁；又如在飞机场，常根据健康需要在周围划分出一定范围的区域作为非居住区，那么如果在该区域内查询出有居民区，
            那么这些居民区的住户就需要拆迁，等等。
            </para>
            <para>
            要进行缓冲区查询分析，需要通过 SuperMap.IS.Utility.BufferQueryParam 对象设置与缓冲区相关的参数和与查询相关的参数。
            其中，与缓冲区相关的参数包括设置缓冲区的半径、缓冲源对象在地图上的显示风格、空间几何对象间的查询模式等；
            与查询相关的参数需通过 SuperMap.IS.Utility.BufferQueryParam.QueryParam 对象设置，包括设置要查询哪个图层的记录、设置查询条件、
            设置查询结果在地图上的显示风格等。关于 BufferQueryParam 对象的说明请参见<see cref="T:SuperMap.IS.Utility.BufferQueryParam"/>。
            </para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ClearCache">
            <summary>
            是否清除缓存。
            </summary>
            <returns>True，清除缓存；false，不清除缓存。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ClearCache(System.String)">
            <summary>
            是否清除指定的地图的缓存。
            </summary>
            <param name="mapName">地图名称</param>
            <returns>True，表示清除缓存；false，不清除缓存。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ClearCache(System.String,SuperMap.IS.Utility.MapRect)">
            <summary>
            是否清除指定地图的某一个范围的缓存。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="clearBounds">地图的范围</param>
            <returns>True，表示清除缓存；false，不清除缓存。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ClearHighlight">
            <summary>
            清除高亮显示。
            </summary>
            <returns>返回清除高亮后的地图对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ClosestFacility(SuperMap.IS.Utility.MapCoord,SuperMap.IS.Utility.ProximityParam)">
            <summary>
            最近设施分析。
            </summary>
            <remarks>
            <para>
            最近设施分析是查找某一类地物中哪个（或哪些）地物对象与某一指定事件点之间具有最优行走路线的一种空间分析方法。这里指的最优路线是指网络图层中的
            道路路线，并且是根据<see cref="F:SuperMap.IS.Utility.ProximityParam.NetworkParams">
            ProximityParam.NetworkParams</see>设置网络分析的参数，包括设置路线通行的阻力（如距离、时间等）等。
            例如查找距离天安门（事件点）最近的银行的位置，这种需求就可以通过最近设施分析进行查找。
            </para>
            <para>
            需要注意的是，进行最近设施分析的空间数据中必须有网络图层。
            </para>
            <para>
            进行最近设施分析需要利用<see cref="T:SuperMap.IS.Utility.ProximityParam">SuperMap.IS.Utility.ProximityParam类</see>设置分析条件。
            包括设置网络分析参数<see cref="F:SuperMap.IS.Utility.ProximityParam.NetworkParams"/>、
            待查询的设施图层<see cref="F:SuperMap.IS.Utility.ProximityParam.FacilityLayer"/>等。
            </para>
            <para>
            最近设施分析的结果通过<see cref="T:SuperMap.IS.Utility.ProximityResult">SuperMap.IS.Utility.ProximityResult</see>来获取，最近设施分析的结果主要分为两个部分，
            首先就是最近路线的地图描述
            <see cref="F:SuperMap.IS.Utility.ProximityResult.MapResult">SuperMap.IS.Utility.ProximityResult.MapResult</see>，
            第二部分就是查找出的最近设施点的记录集<see cref="F:SuperMap.IS.Utility.ProximityResult.ReturnRecordset">SuperMap.IS.Utility.ProximityResult.ReturnRecordset</see>。
            </para>
            </remarks>
            <param name="eventPoint">事件点，比如要查找距离天安门最近的银行的位置，那么天安门就是事件点。</param>
            <param name="proximityParam">最近设施分析参数，包括要查找的设施点的点数、查询范围对应的最大半径、是否高亮显示分析效果图等。</param>
            <returns>返回的最近设施分析的结果，包括查询到的最近设施点的记录等。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.CustomInvoke(SuperMap.IS.Utility.MapParam,System.Boolean,System.Boolean)">
            <summary>
            用户自定义功能的预留接口。
            </summary>
            <param name="mapParam">自定义的地图参数信息。</param>
            <param name="addToHistory">是否加入到历史纪录，布尔值。</param>
            <param name="saveMapStatus">是否保存地图当前状态，布尔值。</param>
            <returns>返回地图以及该地图的相关信息描述。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.CustomInvoke(SuperMap.IS.Utility.CustomParam,System.Boolean,System.Boolean)">
            <summary>
            用户自定义功能的预留接口。
            </summary>
            <param name="customParam">自定义操作参数</param>
            <param name="addToHistory">是否添加到历史纪录中。</param>
            <param name="saveMapStatus">是否保存地图当前状态。</param>
            <returns>自定义操作结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.DeleteEntity(System.String,System.String,System.Int32[],System.String)">
            <summary>
            根据SmID删除一组实体。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="layerName">图层名称</param>
            <param name="IDs">实体的SmID数组</param>
            <param name="userID">编辑用户唯一标识。在使用DeleteEntity方法删除实体的时候需要输入该地图编辑的唯一标识，否则地图服务不会执行该操作。</param>
            <returns>编辑结果的信息，其中包含删除的实体ID数组信息，删除实体的操作是否成功的信息，此次删除实体后影响到的地图范围。</returns>
            <remarks>目前该操作只支持点、线、面图层。</remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.Find(SuperMap.IS.Utility.QueryParam)">
            <summary>
            在全图范围内查找所有几何对象的所有属性字段中与输入字符串完全匹配的记录。
            </summary>
            <remarks>
            该方法是不能指定被查属性字段的。它查找的范围是查询图层中所有字段中的值。
            其中在查询参数中的 WhereClause 字段直接赋予要查询的匹配的文本值,例如,要查询某一图层所有字段中值为 "China" 的记录,则
            将对应 QueryLayer 的 WhereClause 字段值设置为 "China"。
            <para>
            尤其要注意的是，本查询是字符串完全匹配查询。要进行模糊查询及通配符查询，请使用 Query 相关接口。
            </para>
            </remarks>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.FindNearest(SuperMap.IS.Utility.MapCoord,System.Double,SuperMap.IS.Utility.QueryParam)">
            <summary>
            在一定的范围内查找距离一个指定点最近的对象。
            </summary>
            <remarks>
            <para>
            在进行查找之前，首先要设置查找参数<see cref="T:SuperMap.IS.Utility.QueryParam">QueryParam</see>.
            返回的结果通过<see cref="T:SuperMap.IS.Utility.ResultSet">ResultSet</see>来获得。
            </para>
            <para>
            在线图层或面图层中,这里的距离指的从指定事件点到目标对象边线的最短长度。
            </para>
            <para>
            FindNearest 与 FindNearestWithBounds 的区别：FindNearest 是以事件点为圆心，以tolerance为半径的圆的范围内进行地物的查找。而 FindNearestWithBounds 以事件点为中心，以2倍的tolerance为边长的矩形范围内进行地物的查找。
            </para>
            </remarks>
            <param name="mapCoord">指定事件点坐标（地理坐标）</param>
            <param name="maxDistance">查找范围的最大半径</param>
            <param name="queryParam">查询参数</param>
            <returns>返回查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.FindNearestWithBounds(SuperMap.IS.Utility.MapCoord,System.Double,SuperMap.IS.Utility.QueryParam)">
            <summary>
            在一定的范围内查找距离一个指定点最近的对象。
            </summary>
            <remarks>
            <para>
            在进行查找之前，首先要设置查找参数<see cref="T:SuperMap.IS.Utility.QueryParam">QueryParam</see>.
            返回的结果通过<see cref="T:SuperMap.IS.Utility.ResultSet">ResultSet</see>来获得。
            </para>
            <para>
            在线图层或面图层中,这里的距离指的从指定事件点到目标对象边线的最短长度。
            </para>
            <para>
            FindNearest 与 FindNearestWithBounds 的区别：FindNearest 是以事件点为圆心，以tolerance为半径的圆的范围内进行地物的查找。而 FindNearestWithBounds 以事件点为中心，以2倍的tolerance为边长的矩形范围内进行地物的查找。
            </para>
            </remarks>
            <param name="mapCoord">指定事件点坐标（地理坐标）</param>
            <param name="maxDistance">查找范围的最大半径</param>
            <param name="queryParam">查询参数</param>
            <returns>返回查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.FindNearest(SuperMap.IS.Utility.PixelCoord,System.Double,SuperMap.IS.Utility.QueryParam)">
            <summary>
            在一定的范围内查找距离一个指定点最近的对象，以像素坐标为单位。
            </summary>
            <remarks>
            <para>
            在进行查找之前，首先要设置查找参数<see cref="T:SuperMap.IS.Utility.QueryParam">QueryParam</see>.
            返回的结果通过<see cref="T:SuperMap.IS.Utility.ResultSet">ResultSet</see>来获得。
            </para>
            <para>
            在线图层或面图层中,这里的距离指的从指定事件点到目标对象边线的最短长度。
            </para>
            <para>
            FindNearest 与 FindNearestWithBounds 的区别：FindNearest 是以事件点为圆心，以tolerance为半径的圆的范围内进行地物的查找。而 FindNearestWithBounds 以事件点为中心，以2倍的tolerance为边长的矩形范围内进行地物的查找。
            </para>
            </remarks>
            <param name="pixelCoord">指定事件点（像素坐标）</param>
            <param name="tolerance">查找范围的最大距离容限值</param>
            <param name="queryParam">查询参数</param>
            <returns>返回查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.FindNearest(SuperMap.IS.Utility.PixelCoord,System.Int32,SuperMap.IS.Utility.QueryParam)">
            <summary>
            在一定的范围内查找距离一个指定点最近的对象，以像素坐标为单位。
            </summary>
            <remarks>
            <para>
            在进行查找之前，首先要设置查找参数<see cref="T:SuperMap.IS.Utility.QueryParam">QueryParam</see>.
            返回的结果通过<see cref="T:SuperMap.IS.Utility.ResultSet">ResultSet</see>来获得。
            </para>
            <para>
            在线图层或面图层中,这里的距离指的从指定事件点到目标对象边线的最短长度。
            </para>
             <para>
            FindNearest 与 FindNearestWithBounds 的区别：FindNearest 是以事件点为圆心，以tolerance为半径的圆的范围内进行地物的查找。而 FindNearestWithBounds 以事件点为中心，以2倍的tolerance为边长的矩形范围内进行地物的查找。
            </para>
            </remarks>
            <param name="pixelCoord">指定事件点（像素坐标）</param>
            <param name="pixelTolerance">查找范围的最大距离容限值(像素坐标)</param>
            <param name="queryParam">查询参数</param>
            <returns>返回查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.FindNearestWithBounds(SuperMap.IS.Utility.PixelCoord,System.Int32,SuperMap.IS.Utility.QueryParam)">
            <summary>
            在一定的范围内查找距离一个指定点最近的对象，以像素坐标为单位。
            </summary>
            <remarks>
            <para>
            在进行查找之前，首先要设置查找参数<see cref="T:SuperMap.IS.Utility.QueryParam">QueryParam</see>.
            返回的结果通过<see cref="T:SuperMap.IS.Utility.ResultSet">ResultSet</see>来获得。
            </para>
            <para>
            在线图层或面图层中,这里的距离指的从指定事件点到目标对象边线的最短长度。
            </para>
            <para>
            FindNearest 与 FindNearestWithBounds 的区别：FindNearest 是以事件点为圆心，以tolerance为半径的圆的范围内进行地物的查找。而 FindNearestWithBounds 以事件点为中心，以2倍的tolerance为边长的矩形范围内进行地物的查找。
            </para>
            </remarks>
            <param name="pixelCoord">指定事件点（像素坐标）</param>
            <param name="pixelTolerance">查找范围的最大距离容限值(像素坐标)</param>
            <param name="queryParam">查询参数</param>
            <returns>返回查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.FindPath(SuperMap.IS.Utility.MapCoord[],SuperMap.IS.Utility.RouteParam)">
            <summary>
            根据关键点坐标进行最佳路径分析。
            </summary>
            <remarks>
            <para>
            在进行路径之前，首先要设置查找参数<see cref="T:SuperMap.IS.Utility.RouteParam">RouteParam</see>.
            返回的结果通过<see cref="T:SuperMap.IS.Utility.RouteResult">RouteResult</see>来获得。
            </para>
            <para>
            路径分析的返回结果中包括两个部分，一部分是计算的总距离
            <see cref="F:SuperMap.IS.Utility.RouteResult.TotalLength"/>；另一部分就是返回的高亮的最佳路径图
            <see cref="F:SuperMap.IS.Utility.RouteResult.MapResult"/>。
            </para>
            </remarks> 
            <param name="keyPoints">关键点坐标数组（地理坐标）</param>
            <param name="routeParam">路径分析的参数设置对象，包括进行分析的网络分析图层名称，节点容限，是否返回高亮效果图等</param>
            <returns>分析结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.FindPath(SuperMap.IS.Utility.PixelCoord[],SuperMap.IS.Utility.RouteParam)">
            <summary>
            根据关键点坐标进行最佳路径分析。
            </summary>
            <remarks>
            <para>
            在进行路径之前，首先要设置查找参数<see cref="T:SuperMap.IS.Utility.RouteParam">RouteParam</see>.
            返回的结果通过<see cref="T:SuperMap.IS.Utility.RouteResult">RouteResult</see>来获得。
            </para>
            <para>
            路径分析的返回结果中包括两个部分，一部分是计算的总距离
            <see cref="F:SuperMap.IS.Utility.RouteResult.TotalLength"/>；另一部分就是返回的高亮的最佳路径图
            <see cref="F:SuperMap.IS.Utility.RouteResult.MapResult"/>。
            </para>
            </remarks> 
            <param name="keyPoints">关键点坐标数组（像素坐标）</param>
            <param name="routeParam">路径分析的参数设置对象，包括进行分析的网络分析图层名称，节点容限，是否返回高亮效果图等</param>
            <returns>分析结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.FindPath(System.Int32[],SuperMap.IS.Utility.RouteParam)">
            <summary>
            根据指定的网络数据集中节点的ID进行最优路径分析。
            </summary>
            <remarks>
            <para>
            在进行路径之前，首先要设置查找参数<see cref="T:SuperMap.IS.Utility.RouteParam">RouteParam</see>.
            返回的结果通过<see cref="T:SuperMap.IS.Utility.RouteResult">RouteResult</see>来获得。
            </para>
            <para>
            路径分析的返回结果中包括两个部分，一部分是计算的总距离
            <see cref="F:SuperMap.IS.Utility.RouteResult.TotalLength"/>；另一部分就是返回的高亮的最佳路径图
            <see cref="F:SuperMap.IS.Utility.RouteResult.MapResult"/>。
            </para>
            </remarks> 
            <param name="keyIDs">网络数据集中节点的SMID值</param>
            <param name="routeParam">路径分析的参数设置对象，包括进行分析的网络分析图层名称，节点容限，是否返回高亮效果图等</param>
            <returns>路径分析结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.FuzzyFindBusLine(System.String)">
            <summary>
            根据线路的名称模糊查询公交线路集合。
            </summary>
            <param name="fuzzyBusLineName">线路的模糊名，可以为空字符串。</param>
            <returns>线路集合</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.FuzzyFindStop(System.String)">
            <summary>
            根据站名模糊查询站点集合。
            </summary>
            <param name="fuzzyStopName">站点的模糊名，可以为空字符串。</param>
            <returns>站点集合</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetBusLinesByStopID(System.Int32)">
            <summary>
            查询经过指定的某个公交站点的所有公交线路的集合。
            </summary>
            <param name="interchangeID">公交站点数据集中待查站点的SmUserID的值。</param>
            <returns>返回经过指定的公交站点的所有公交线路的集合。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetBusLinesByStopName(System.String)">
            <summary>
            查询经过指定站名的线路集合,站点名称精确匹配。
            </summary>
            <param name="stopName">站点的名称</param>
            <returns>返回经过该站点的所有的线路集合。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetBusSolution(System.Int32[],SuperMap.IS.Utility.BusSolutionParam)">
            <summary>
            根据站点的SmUserID数组查询公交换乘方案。
            </summary>
            <param name="ids">站点的换乘点ID数组，即站点的SmUserId数组。其长度必须大于等于2。</param>
            <param name="busSolutionParam">公交换乘参数</param>
            <returns>
            <para>返回<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>数组。</para>
            </returns>
            <remarks>
            <para>
            1、公交换乘分析需要使用已经进行公交建模处理的空间数据。在进行公交建模处理时会将公交站点的SmUserId值作为换乘分析关键值。
            对其进行相应的赋值，如在一个十字交叉路口的四个方向都有相同站点名的公交站点，而且相距很近，进行公交建模后，这四个公交站点
            的SmUserId值都将会被赋予相同的数值，如SmUserID = 5，这表明进行公交换乘分析时这四个站点可以最为一个公交站点处理，可以进行转车。因此使用该
            方法进行公交换乘分析需要明确起始站和终点站的SmUserId的值。
            </para>
            <para>
            2、公交换乘分析会对站点数组中每两个相邻的站点进行换乘分析，最终将所有相邻站点的换乘方案集合<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>组成数组返回。例如要获取从A站途径B站最终到达C
            站的公交换乘方案集合，那么通过该方法最终会得到A、B两个站点的换乘方案集合和B、C两个站点的换乘方案集合。
            </para>
            <para>
            3、对于返回的每一个换乘方案集合对象<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>来说，如果有符合条件的换乘方案，可以通过<see cref="F:SuperMap.IS.Utility.BusSolutionItem.RoutingItems"/>
            获取所有公交换乘方案；如果没有符合条件的换乘方案，那么<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>值为null。
            </para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetBusSolution(System.String[],SuperMap.IS.Utility.BusSolutionParam)">
            <summary>
            根据站点名称数组查询公交换乘方案。
            </summary>
            <param name="names">站点的站点名称数组,其数组的长度必须大于等于2。</param>
            <param name="busSolutionParam">公交换乘参数</param>
            <returns>
            返回一组公交换乘方案集合对象-<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>的数组。
            </returns>
            <remarks>
            <para>
            1、公交换乘分析会对站点数组中每两个相邻的站点进行换乘分析，最终将所有相邻站点的换乘方案集合<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>组成数组返回。例如要获取从A站途径B站最终到达C
            站的公交换乘方案集合，那么通过该方法最终会得到A、B两个站点的换乘方案集合和B、C两个站点的换乘方案集合。
            </para>
            <para>2、对于每一个返回的换乘方案集合对象-<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>都可能有三种返回结果，第一种结果就是地图服务返回符合条件的换乘方案，
            并通过<see cref="F:SuperMap.IS.Utility.BusSolutionItem.RoutingItems"/>获取方案；
            当起始站点和终点站点名称不唯一的时候，地图服务会返回第二种结果返回包含起始站点名称的所有车站对象和包含终点站名
            的所有车站对象，可以通过<see cref="F:SuperMap.IS.Utility.BusSolutionItem.StartStops"/>和<see cref="F:SuperMap.IS.Utility.BusSolutionItem.EndStops"/>分别获取包含起始站或者终点站名
            的所有公交站点对象，以供其选择一个唯一的起始和终点站进行第二次换乘方案的查询；第三种结果是没有符合条件的换乘方案，即返回的<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>为null。
            </para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetBusSolution(SuperMap.IS.Utility.MapCoord[],System.Double,SuperMap.IS.Utility.BusSolutionParam)">
            <summary>
            根据地理坐标数组查询公交换乘方案。
            </summary>
            <param name="points">地理坐标点数组，其数组长度必须大于等于2。</param>
            <param name="tolerance">距离容限。单位与地图单位一致。地图服务会查找地理坐标点数组（即points参数值）中的每一个坐标点附近的公交站点，即以坐标点
            为圆心，以该容限为半径，设置一个查询的圆形范围。在该范围内的公交站点即为待分析的站点。</param>
            <param name="busSolutionParam">公交换乘参数</param>
            <returns>返回一组公交方案集合-<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>的数组</returns>
            <remarks>
            <para>
            1、通过该方法获取公交换乘解决方案需要设置一个距离容限，地图服务根据这个容限首先查询地理坐标点数组（即points参数值）中的每一个坐标点附近的公交站点集合，
            这些站点集合分别作为起始站点集合、途径点站点集合和终止站点集合。然后分别分析并获取起始站点与途径站点之间的公交换乘方案集合（对所有可能的换乘解决方案进行排序，
            按照顺序返回指定个数的换乘方案。），相邻途径站点之间的公交换乘方案集合（对所有可能的换乘解决方案进行排序，
            按照顺序返回指定个数的换乘方案。），以及
            途径站点与终点之间的公交换乘方案集合（对所有可能的换乘解决方案进行排序，
            按照顺序返回指定个数的换乘方案。）。
            </para>
            <para>
            2、在设置距离容限时需要谨慎。如果距离容限过大，可能会导致分析时间延长，从而使系统性能下降。
            </para> 
            <para>3、对于返回的每一个换乘方案集合对象<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>来说，如果有符合条件的换乘方案，可以通过<see cref="F:SuperMap.IS.Utility.BusSolutionItem.RoutingItems"/>
            获取所有公交换乘方案；如果没有符合条件的换乘方案，那么<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>值为null。
            </para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetDefaultMapImage">
            <summary>
            取得默认地图。
            </summary>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetDefaultMapImage(System.String,System.Int32,System.Int32)">
            <summary>
            根据地图名称、地图宽度和高度获取默认地图。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="mapWidth">地图宽度</param>
            <param name="mapHeight">地图高度</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetEntity(System.String,System.String,System.Int32)">
            <summary>
            根据地图名称、图层名称和对象的ID获取对象的坐标信息和属性信息。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="layerName">图层名称</param>
            <param name="id">对象的ID</param>
            <returns>对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetEntities(System.String,System.String,System.Int32[])">
            <summary>
            根据对象的ID数组获取多个对象的坐标信息和属性信息。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="layerName">图层名称</param>
            <param name="ids">多个对象的ID数组</param>
            <returns>对象数组</returns>
            <remarks>
            一次只能获取同一地图同一图层中的多个对象。
            如果要获取不同地图、不同图层中的多个对象，请重复调用本方法或者 GetEntity 方法。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetEntities(System.String,System.String,System.String)">
            <summary>
            根据多个对象的SQL筛选条件获取多个对象的坐标信息和属性信息。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="layerName">图层名称</param>
            <param name="condition">要获取的多个对象的SQL筛选条件</param>
            <returns>对象数组</returns>
            <remarks>
            一次只能获取同一地图同一图层中的多个对象。
            如果要获取不同地图、不同图层中的多个对象，请重复调用本方法或者 GetEntity 方法。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetFollowingStops(System.Int32,System.Boolean)">
            <summary>
            查询指定公交线路的所有站点集合。
            </summary>
            <param name="buslineID">公交线路的SmUserId。</param>
            <param name="bForward">设置一个值,该值表示是否该线路为上行/内环/小环线路。
            对于往返线路相同的公交来说，该参数设置为true或者false都可以。
            </param>
            <returns>返回指定的公交线路的所有的站点集合。</returns>
            <remarks>
            使用该方法可以获取某条公交线路途径的所有站点。由于有些公交线路往返路线不相同，因此公交线路的数据中有
            一个专门的字段用来描述线路的特性的，如上行/下行，内环/外环，大环/小环。通常规定上行/内环/小环线路为forward
            方向。下行/外环/大环为backward方向。因此使用该方法时需要指明查询的公交线路的方向是否是forward方向，即
            使用该方法的第二个参数进行设置。对于往返线路相同的公交来说，该方法的第二个参数设置为true或者false都可以。
            </remarks> 
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetLegend(SuperMap.IS.Utility.MapParam,System.Boolean,System.Int32,System.Int32)">
            <summary>
            获取图例。
            </summary>
            <param name="mapParam">地图参数</param>
            <param name="isNeedTitle">是否显示标题</param>
            <param name="bgColorValue">背景颜色值</param>
            <param name="foreColorValue">前景颜色值</param>
            <returns>图例图片的 URL 地址</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetLegend(SuperMap.IS.Utility.MapParam,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取图例。
            </summary>
            <param name="mapParam">地图参数</param>
            <param name="isNeedTitle">是否显示标题</param>
            <param name="bgColorValue">背景颜色值</param>
            <param name="foreColorValue">前景颜色值</param>
            <param name="picWidth">图例宽度</param>
            <returns>图例图片的 URL 地址</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetMapImage(SuperMap.IS.Utility.MapParam)">
            <summary>
            根据地图参数的描述获取地图。
            </summary>
            <param name="mapParam">地图参数</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetMapImage(SuperMap.IS.Utility.MapParam,System.Int32)">
            <summary>
            根据地图参数的描述获取指定DPI的地图。
            </summary>
            <param name="mapParam">地图参数</param>
            <param name="imageDpi">图像的DPI（每英寸点数）分辨率，默认为200dpi，建议在72－600dpi之间。</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetCachedMapImage(SuperMap.IS.Utility.MapParam)">
            <summary>
            根据地图参数的描述获取缓存过的地图。
            </summary>
            <param name="mapParam">地图参数</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.CheckCachedMapImage(SuperMap.IS.Utility.MapParam)">
            <summary>
            检查MapParam中描述的地图是否已经在地图服务中进行了缓存。
            </summary>
            <param name="mapParam">通过该参数设置要检验的地图的相关参数，如地图的中心点，比例尺以及显示范围等。</param>
            <returns>true表示待检查的地图已经进行了缓存。false表示没有缓存。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetOverview(SuperMap.IS.Utility.Overview)">
            <summary>
            获取鹰眼。
            </summary>
            <param name="overview">鹰眼参数</param>
            <returns>鹰眼对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.LatLongCoordToMapCoord(SuperMap.IS.Utility.LatLong[],SuperMap.IS.Utility.PJCoordSysType)">
            <summary>
            坐标对变换,从经纬度坐标变换成地图坐标。
            </summary>
            <param name="latLongs">经纬度坐标数组</param>
            <param name="pjCoordSysType">地图投影类型</param>
            <returns>地图坐标数组</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.LockLayer(System.String,System.String,System.String)">
            <summary>
            锁定图层。
            </summary>
            <remarks>
            <para>
            执行地图编辑需要通过三个步骤来实现，首先就是通过该属性锁定待编辑的图层，以便其他用户不能同时对该图层数据进行修改，保障数据编辑操作的可靠性。
            其次通过地图编辑方法（如AddEntity，AddLine等方法）对空间数据进行编辑，编辑完毕后通过UnlockLayer方法解除编辑图层的锁定，以便其他用户可以
            执行编辑的操作。
            </para>
            <para>
            使用该方法锁定地图图层的时候需要通过参数clientID指定要执行编辑操作的用户的客户端唯一标识（一个唯一的字符串），
            地图服务会为该用户返回一个地图编辑的唯一标识，在后续的编辑方法（比如 AddEntity)中
            需要用到这个地图编辑标识。编辑完毕之后， 使用UnlockLayer方法解锁图层的时候也需要传递这个地图编辑标识。
            </para>
            <para>
            使用该方法对地图图层锁定后，请在地图编辑结束后及时使用UnlockLayer方法对该地图图层进行解锁，否则其他用户将无法对该图层进行后续的编辑操作。
            </para>
            </remarks>
            <param name="mapName">地图名称</param>
            <param name="layerName">图层名称</param>
            <param name="clientID">客户端的唯一标识，一个唯一的字符串，以表明用户的唯一性。</param>
            <returns>返回地图编辑唯一标识。通过该标识可以执行后续的地图编辑和解除图层的操作。</returns>
            <seealso cref="M:SuperMap.IS.Web.IMap.UnlockLayer(System.String,System.String,System.String)"/>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.MapCoordToLatLongCoord(SuperMap.IS.Utility.MapCoord[],SuperMap.IS.Utility.PJCoordSysType)">
            <summary>
            坐标对变换,从地图坐标变换成经纬度坐标。
            </summary>
            <param name="mapCoords">地图坐标数组</param>
            <param name="pjCoordSysType">地图投影类型</param>
            <returns>经纬度坐标数组</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.MeasureArea(SuperMap.IS.Utility.MapCoord[])">
            <summary>
            面积量算。
            </summary>
            <param name="mapCoords">组成量算区域的地理坐标点数组</param>
            <returns>返回量算的结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.MeasureArea(SuperMap.IS.Utility.PixelCoord[])">
            <summary>
            面积量算。
            </summary>
            <param name="pixelCoords">组成量算区域的像素坐标点数组</param>
            <returns>返回量算的结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.MeasureArea(SuperMap.IS.Utility.MapCoord[],System.Boolean)">
            <summary>
            面积量算。
            </summary>
            <param name="mapCoords">组成量算区域的地理坐标点数组</param>
            <param name="isHighlight">是否高亮显示量算区域</param>
            <returns>返回量算的结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.MeasureArea(SuperMap.IS.Utility.MapCoord[],SuperMap.IS.Utility.Highlight)">
            <summary>
            面积量算。
            </summary>
            <param name="mapCoords">组成量算区域的地理坐标点数组</param>
            <param name="highlight">是否高亮显示量算区域，以及高亮风格设置</param>
            <returns>返回量算的结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.MeasureArea(SuperMap.IS.Utility.PixelCoord[],System.Boolean)">
            <summary>
            面积量算。
            </summary>
            <param name="pixelCoords">组成量算区域的地理坐标点数组</param>
            <param name="isHighlight">是否高亮显示量算区域</param>
            <returns>返回量算的结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.MeasureArea(SuperMap.IS.Utility.PixelCoord[],SuperMap.IS.Utility.Highlight)">
            <summary>
            面积量算。
            </summary>
            <param name="pixelCoords">组成量算区域的地理坐标点数组</param>
            <param name="highlight">是否高亮显示量算区域，以及高亮风格设置</param>
            <returns>返回量算的结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.MeasureDistance(SuperMap.IS.Utility.MapCoord[])">
            <summary>
            沿线距离量算。
            </summary>
            <param name="mapCoords">组成沿线的地理坐标数组</param>
            <returns>返回量算的结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.MeasureDistance(SuperMap.IS.Utility.PixelCoord[])">
            <summary>
            沿线距离量算。
            </summary>
            <param name="pixelCoords">组成沿线的像素坐标数组</param>
            <returns>返回量算的结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.MeasureDistance(SuperMap.IS.Utility.MapCoord[],System.Boolean)">
            <summary>
            沿线距离量算。
            </summary>
            <param name="mapCoords">组成沿线的地理坐标数组</param>
            <param name="isHighlight">是否高亮显示量算路线</param>
            <returns>返回量算的结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.MeasureDistance(SuperMap.IS.Utility.MapCoord[],SuperMap.IS.Utility.Highlight)">
            <summary>
            沿线距离量算。
            </summary>
            <param name="mapCoords">组成沿线的地理坐标数组</param>
            <param name="highlight">是否高亮显示量算路线，以及高亮风格设置</param>
            <returns>返回量算的结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.MeasureDistance(SuperMap.IS.Utility.PixelCoord[],System.Boolean)">
            <summary>
            沿线距离量算。
            </summary>
            <param name="pixelCoords">组成沿线的像素坐标数组</param>
            <param name="isHighlight">是否高亮显示量算路线</param>
            <returns>返回量算的结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.MeasureDistance(SuperMap.IS.Utility.PixelCoord[],SuperMap.IS.Utility.Highlight)">
            <summary>
            沿线距离量算。
            </summary>
            <param name="pixelCoords">组成沿线的像素坐标数组</param>
            <param name="highlight">是否高亮显示量算路线，以及高亮风格设置</param>
            <returns>返回量算的结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.Pan(System.Double,System.Double)">
            <summary>
            地图平移。
            </summary>
            <param name="offsetX">在横坐标方向的地理坐标偏移量</param>
            <param name="offsetY">在纵坐标方向的地理坐标偏移量</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.PanByPixel(System.Int32,System.Int32)">
            <summary>
            平移当前地图。
            </summary>
            <param name="offsetX">x方向的像素坐标偏移量</param>
            <param name="offsetY">y方向的像素坐标偏移量</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.QueryByDistance(SuperMap.IS.Utility.MapCoord,System.Double,SuperMap.IS.Utility.QueryParam)">
            <summary>
            查询距离指定点一定范围内的对象。 
            </summary>
            <param name="queryPoint">指定点</param>
            <param name="mapDistance">查询范围，单位与数据集的坐标单位一致。</param>
            <param name="queryParam">查询参数</param>
            <returns>返回的查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.QueryByDistance(SuperMap.IS.Utility.PixelCoord,System.Int32,SuperMap.IS.Utility.QueryParam)">
            <summary>
            查找一定距离内（圆内）所有的对象，以像素坐标为单位。
            </summary>
            <param name="queryPoint">像素坐标中心点</param>
            <param name="pixelDistance">像素坐标距离容限</param>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.QueryByLine(SuperMap.IS.Utility.MapCoord[],SuperMap.IS.Utility.QueryParam,SuperMap.IS.Utility.SpatialQueryMode)">
            <summary>
            沿线查询。
            </summary>
            <remarks>
            <para>
            沿线查询是沿着一条指定的线路对该线路附近的对象进行查询，并返回满足查询条件的记录。
            </para>
            <para>
            在进行沿线查询之前，首先需要对查询参数<see cref="T:SuperMap.IS.Utility.QueryParam">QueryParam类</see>进行
            设置。返回的查询结果通过<see cref="T:SuperMap.IS.Utility.ResultSet">ResultSet</see>来获取。
            </para>
            </remarks>
            <param name="mapCoords">组成线的地理坐标点数组</param>
            <param name="queryParam">查询参数</param>
            <param name="mode">空间查询模式</param>
            <returns>返回的查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.QueryByPoint(SuperMap.IS.Utility.MapCoord,System.Double,SuperMap.IS.Utility.QueryParam)">
            <summary>
            点选查询。
            </summary>
            <param name="mapCoord">地理坐标中心点</param>
            <param name="tolerance">地理坐标距离容限。不能小于0，建议取一个适中的值，比如5。</param>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.QueryByPolygon(SuperMap.IS.Utility.MapCoord[],SuperMap.IS.Utility.QueryParam,SuperMap.IS.Utility.SpatialQueryMode)">
            <summary>
            多边形查询。
            </summary>
            <param name="mapCoords">地理坐标点集</param>
            <param name="queryParam">查询参数</param>
            <param name="mode">空间查询模式</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.QueryByRect(SuperMap.IS.Utility.MapRect,SuperMap.IS.Utility.QueryParam)">
            <summary>
            查询一个矩形范围内的对象(包含相交)。  
            </summary>
            <param name="mapRect">地理坐标范围</param>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.QueryByRect(SuperMap.IS.Utility.MapRect,SuperMap.IS.Utility.QueryParam,SuperMap.IS.Utility.SpatialQueryMode)">
            <summary>
            矩形查询。  
            </summary>
            <param name="mapRect">地理坐标范围</param>
            <param name="queryParam">查询参数</param>
            <param name="mode">空间查询模式</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.QueryByGeometry(SuperMap.IS.Utility.Geometry,SuperMap.IS.Utility.QueryParam,SuperMap.IS.Utility.SpatialQueryMode)">
             <summary>
             空间几何对象查询。  
             </summary>
             <param name="geometry">空间对象</param>
             <param name="queryParam">查询参数</param>
             <param name="mode">空间查询模式</param>
             <returns>查询结果对象</returns>
             <remarks> 
             目前支持对点、线、多边形、文本、圆、位图等几何对象的空间查询。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.QueryBySql(SuperMap.IS.Utility.QueryParam)">
            <summary>
            SQL查询。
            </summary>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ShowBusLine(System.Int32,SuperMap.IS.Utility.Style)">
            <summary>
            在地图上高亮显示一条公交线路。 
            </summary>
            <param name="lineSmID">公交线路的SmID</param>
            <param name="lineStyle">高亮的风格</param>
            <returns>
            <para>
            返回地图结果对象<see cref="T:SuperMap.IS.Utility.MapImage">SuperMap.IS.Utility.MapImage</see>。
            </para>
            <para>
            通过<see cref="T:SuperMap.IS.Utility.MapImage">MapImage</see>能够获得地图以及相关地图信息的描述。
            通过<see cref="F:SuperMap.IS.Utility.MapImage.ReturnMapParam">MapImage.ReturnMapParam</see>可以得到当前地图的信息描述，例如地图的名称、
            地图的范围、中心点坐标等等。通过<see cref="F:SuperMap.IS.Utility.MapImage.MapUrl">MapImage.MapUrl</see>可以获取地图的显示图片。     
            </para>
            </returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ShowBusStop(System.Int32,SuperMap.IS.Utility.Style)">
            <summary>
            在地图上高亮显示一个公交站点。
            </summary>
            <param name="stopSmID">公交站点的SmID</param>
            <param name="stopStyle">高亮风格</param>
            <returns>
            <para>
            返回地图结果对象<see cref="T:SuperMap.IS.Utility.MapImage">SuperMap.IS.Utility.MapImage</see>。
            </para>
            <para>
            通过<see cref="T:SuperMap.IS.Utility.MapImage">SuperMap.IS.Utility.MapImage</see>能够获得地图以及相关地图信息的描述。
            通过<see cref="F:SuperMap.IS.Utility.MapImage.ReturnMapParam">SuperMap.IS.Utility.MapImage.ReturnMapParam</see>可以得到当前地图的信息描述，例如地图的名称、
            地图的范围、中心点坐标等等。通过<see cref="F:SuperMap.IS.Utility.MapImage.MapUrl">SuperMap.IS.Utility.MapImage.MapUrl</see>可以获取地图的显示图片。     
            </para>
            </returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ShowRouting(SuperMap.IS.Utility.BusRoutingItem,SuperMap.IS.Utility.Style,SuperMap.IS.Utility.Style)">
            <summary>
            在地图上高亮显示一套公交换乘方案的线路。
            </summary>
            <param name="routing">指定要高亮的某套公交换乘方案的线路。</param>
            <param name="stopStyle">站点的高亮风格</param>
            <param name="lineStyle">公交的线路高亮风格</param>
            <returns>
            <para>
            返回地图结果对象<see cref="T:SuperMap.IS.Utility.MapImage">SuperMap.IS.Utility.MapImage</see>。
            </para>
            <para>
            通过<see cref="T:SuperMap.IS.Utility.MapImage">SuperMap.IS.Utility.MapImage</see>能够获得地图以及相关地图信息的描述。
            通过<see cref="F:SuperMap.IS.Utility.MapImage.ReturnMapParam">SuperMap.IS.Utility.MapImage.ReturnMapParam</see>可以得到当前地图的信息描述，例如地图的名称、
            地图的范围、中心点坐标等等。通过<see cref="F:SuperMap.IS.Utility.MapImage.MapUrl">SuperMap.IS.Utility.MapImage.MapUrl</see>可以获取地图的显示图片。     
            </para>
            </returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.UpdateBusLinePriority(System.Int32,System.Int32)">
             <summary>
             动态修改某条线路的优先级。
             </summary>
             <param name="buslineSmID">线路SmID</param>
             <param name="priority">线路优先级，默认值为0。</param>
             <returns>是否修改成功</returns>
             <remarks>
             <para>
             优先级值越大，优先级越高，其值越小，优先级越低。对于地铁，轻轨等线路可以设置较高的优先级（比如设为1），这样在公交换乘时的换乘结果会优先选择这些线路；
             对于某些比较涌挤的路线，可以设置较低的优先级（比如设-1），这样在公交换乘时的换乘结果将不会优先选择这些线路。
             </para>
            <para>
             优先级的修改也可以在BusNetwork Manager里进行设置，具体位置为：【公交网络】-> 【动态修改优先级】。
             </para>
             </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.UpdateBusLinesPriority(System.Int32[],System.Int32)">
             <summary>
             批量动态修改线路的优先级。
             </summary>
             <param name="buslineSmIDs">线路SmID数组</param>
             <param name="priority">线路优先级</param>
             <returns>是否修改成功</returns>
             <remarks>
             <para>
             优先级值越大，优先级越高，其值越小，优先级越低。对于地铁，轻轨等线路可以设置较高的优先级（比如设为1），这样在公交换乘时的换乘结果会优先选择这些线路；
             对于某些比较涌挤的路线，可以设置较低的优先级（比如设-1），这样在公交换乘时的换乘结果将不会优先选择这些线路。
             </para>
            <para>
             优先级的修改也可以在BusNetwork Manager里进行设置，具体位置为：【公交网络】-> 【动态修改优先级】。
             </para>
             </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.UnlockLayer(System.String,System.String,System.String)">
            <summary>
            解除对图层的锁定。 
            </summary>
            <param name="mapName">地图名称</param>
            <param name="layerName">图层名称</param>
            <param name="userID">地图编辑唯一标识。这个标识是从LockLayer方法中获取到的。</param>
            <returns>返回解除地图图层的锁定的操作是否成功的标示</returns>
            <remarks>
            <para>
            执行地图编辑需要通过三个步骤来实现，首先就是通过该属性锁定待编辑的图层，以便其他用户不能同时对该图层数据进行修改，保障数据编辑操作的可靠性。
            其次通过地图编辑方法（如AddEntity，AddLine等方法）对空间数据进行编辑，编辑完毕后通过UnlockLayer方法解除编辑图层的锁定，以便其他用户可以
            执行编辑的操作。
            </para>
            <para>
            通过UnlockLayer方法解除对图层的锁定的时候需要输入一个地图编辑的唯一标识，这个标识是从LockLayer方法中获取到的。
            </para>
            </remarks>
            <seealso cref="M:SuperMap.IS.Web.IMap.LockLayer(System.String,System.String,System.String)"/>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.UpdateEntity(System.String,System.String,SuperMap.IS.Utility.Entity[],System.String)">
            <summary>
            更新一组实体。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="layerName">图层名称</param>
            <param name="targetEntities">目标实体</param>
            <param name="userID">编辑用户唯一标识。进行地图编辑的时候，首先需要通过<see cref="M:SuperMap.IS.Web.IMap.LockLayer(System.String,System.String,System.String)"/>来锁定要编辑的图层，此时会获得一个
            地图编辑的唯一标识。在使用AddEntity方法添加实体的时候需要输入该地图编辑的唯一标识，否则地图服务不会执行该操作。</param>
            <returns>编辑结果的信息，其中包含更新的实体ID数组信息，更新实体的操作是否成功的信息，此次更新的实体所影响到的地图范围。</returns>
            <remarks>目前该操作只支持点、线、面图层。</remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ViewByBounds(SuperMap.IS.Utility.MapRect)">
            <summary>
            按照指定地理坐标范围获取地图。
            </summary>
            <param name="mapRect">指定的地理坐标范围</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ViewByBounds(SuperMap.IS.Utility.PixelRect)">
            <summary>
            按照指定的像素坐标范围获取地图。
            </summary>
            <param name="pixelRect">指定的像素坐标范围</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ViewByScale(SuperMap.IS.Utility.MapCoord,System.Double)">
            <summary>
            按照指定中心点和比例尺获取地图。 
            </summary>
            <param name="center">中心点</param>
            <param name="scale">比例尺</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ViewEntire(System.String)">
            <summary>
            根据指定的图层进行全幅显示。
            </summary>
            <param name="layerName">指定的图层</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ViewEntire(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            根据指定的地图名、图层和控件大小进行全幅显示。 
            </summary>
            <param name="mapName">地图名称</param>
            <param name="layerName">图层的名称</param>
            <param name="mapWidth">控件的宽度</param>
            <param name="mapHeight">控件的高度</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ViewNext">
            <summary>
            转到下一视图。
            </summary>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ViewPrevious">
            <summary>
            回到前一视图。 
            </summary>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.Zoom(System.Double)">
            <summary>
            按照一定的比例进行地图缩放，中心点保持不变。 
            </summary>
            <param name="ratio">缩放比例，必须是大于0的数.</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.Zoom(SuperMap.IS.Utility.MapCoord,System.Double)">
            <summary>
            根据中心点和缩放比例进行地图缩放。
            </summary>
            <param name="center">中心点坐标</param>
            <param name="ratio">缩放比例，必须是大于0的数。</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.Zoom(SuperMap.IS.Utility.PixelCoord,System.Double)">
            <summary>
            根据中心点和缩放比例进行地图缩放。
            </summary>
            <param name="center">中心点像素坐标</param>
            <param name="ratio">缩放比例，必须是大于0的数。</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ZoomIn(SuperMap.IS.Utility.MapRect)">
            <summary>
            根据客户端提交的地理坐标范围进行放大。
            </summary>
            <param name="mapRect">客户端提交的地理坐标范围</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ZoomIn(SuperMap.IS.Utility.PixelRect)">
            <summary>
            根据客户端提交的像素坐标范围进行放大。
            </summary>
            <param name="pixelRect">客户端提交的像素坐标范围</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ZoomOut(SuperMap.IS.Utility.MapRect)">
            <summary>
            根据客户端提交的地理坐标矩形范围进行缩小。
            </summary>
            <param name="mapRect">客户端提交的地理坐标范围</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ZoomOut(SuperMap.IS.Utility.PixelRect)">
            <summary>
            根据客户端提交的像素坐标矩形范围进行缩小。
            </summary>
            <param name="pixelRect">客户端提交的像素坐标矩形范围</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.UpdateNodeWeight(System.String,SuperMap.IS.Utility.NetworkParams,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            更新网络结点权值。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="networkParams">网络分析参数设置</param>
            <param name="nodeID">结点ID</param>
            <param name="fromEdgeID">起始弧段ID</param>
            <param name="toEdgeID">终止弧段ID</param>
            <param name="weight">转弯权值</param>
            <returns>更新成功返回更新前的权值，失败返回一个负值-1000,原来不通的更新后返回-1。</returns>
            <remarks>
            <para>
            在内存转向表中更新一个结点的转向权值<see cref="F:SuperMap.IS.Utility.TurnTableSetting.TRNWeightField"/>，进行路径分析时，需要将弧段权值和节点权值相加，然后比较各个不同结果的
            值来获取最佳路径。起始弧段ID、终止弧段ID必须和弧段权值表中的“弧段ID”一致；转弯权值单位必须和弧段权值表中的正、逆向权值单位一致。
            </para>
            <para>
            该方法主要用于动态修改内存中转向表的一个结点的转向权值，方向从ID为fromEdgeID的弧段到ID为toEdgeID的弧段，权值为dWeight。
            </para>
            <para>
            需要说明的是，使用该方法动态设置网络结点的权值后，一旦地图服务重新启动，该权值将失效，重启后后网络分析依据的转向
            阻力值将来源于转向表。
            </para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.UpdateNodeWeight(System.String,SuperMap.IS.Utility.NetworkParams,System.Int32[],System.Int32[],System.Int32[],System.Double[])">
            <summary>
            批量更新网络结点权值。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="networkParams">网络分析参数设置</param>
            <param name="nodeIDs">结点ID</param>
            <param name="fromEdgeIDs">起始弧段ID</param>
            <param name="toEdgeIDs">终止弧段ID</param>
            <param name="weights">转弯权值</param>
            <returns>更新成功返回更新前的权值，失败返回一个负值-1000,原来不通的更新后返回-1。</returns>
            <remarks>
            <para>
            在内存转向表中更新一个结点的转向权值<see cref="F:SuperMap.IS.Utility.TurnTableSetting.TRNWeightField"/>，进行路径分析时，需要将弧段权值和节点权值相加，然后比较各个不同结果的
            值来获取最佳路径。起始弧段ID、终止弧段ID必须和弧段权值表中的“弧段ID”一致；转弯权值单位必须和弧段权值表中的正、逆向权值单位一致。
            </para>
            <para>
            该方法主要用于动态修改内存中转向表的一个结点的转向权值，方向从ID为fromEdgeID的弧段到ID为toEdgeID的弧段，权值为dWeight。
            </para>
            <para>
            需要说明的是，使用该方法动态设置网络结点的权值后，一旦地图服务重新启动，该权值将失效，重启后后网络分析依据的转向
            阻力值将来源于转向表。
            </para>
            <para>
            使用该方法时需注意，结点ID，起始弧段ID，终止弧段ID，转弯权值参数长度必须完全一致。
            </para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.UpdateEdgeWeight(System.String,SuperMap.IS.Utility.NetworkParams,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            更新网络弧段权值。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="networkParams">网络分析参数设置</param>
            <param name="edgeID">弧段ID</param>
            <param name="fromNodeID">起始结点ID</param>
            <param name="toNodeID">终止结点ID</param>
            <param name="weight">通行权值</param>
            <returns>更新成功返回更新前的权值，失败返回一个负值-1000,原来不通的边更新后返回-1。</returns>
            <remarks>
            <para>
            通常进行网络分析的时候，各个网络弧段的阻力值来源于空间数据的某个属性字段，也就是说这些阻力值是固定的。但是在一些特殊的
            应用里，一些弧段的阻力值可能是不断的变化的，这时可以使用该方法动态修改网络弧段的权值（阻力值）。
            </para>
            <para>
            需要说明的是，使用该方法动态设置网络弧段的权值后，一旦地图服务重新启动，该权值将失效，重启后后网络分析依据的各个网络弧段的
            阻力值将来源于空间数据的某个属性字段。
            </para>
            <para>
            弧段是有方向的，如果要设置弧段正向的权值（正阻力值），将该弧段的起始结点ID值赋予该方法的fromNodeID参数。
            如果要设置弧段反向的权值（反阻力值），将该弧段的终止结点ID值赋予该方法的fromNodeID参数。
            </para>
            <para>所有不通的弧段处理成权值-1。
            </para>
            <para>使用该方法时需注意，如果本来该弧段就是障碍边，则不能设置权值。
            </para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.UpdateEdgeWeight(System.String,SuperMap.IS.Utility.NetworkParams,System.Int32[],System.Int32[],System.Int32[],System.Double[])">
            <summary>
            批量更新网络弧段权值。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="networkParams">网络分析参数设置</param>
            <param name="edgeIDs">弧段ID</param>
            <param name="fromNodeIDs">起始结点ID</param>
            <param name="toNodeIDs">终止结点ID</param>
            <param name="weights">通行权值</param>
            <returns>更新成功返回更新前的权值，失败返回一个负值-1000,原来不通的边更新后返回-1。</returns>
            <remarks>
            <para>
            通常进行网络分析的时候，各个网络弧段的阻力值来源于空间数据的某个属性字段，也就是说这些阻力值是固定的。但是在一些特殊的
            应用里，一些弧段的阻力值可能是不断的变化的，这时可以使用该方法动态修改网络弧段的权值（阻力值）。
            </para>
            <para>
            需要说明的是，使用该方法动态设置网络弧段的权值后，一旦地图服务重新启动，该权值将失效，重启后后网络分析依据的各个网络弧段的
            阻力值将来源于空间数据的某个属性字段。
            </para>
            <para>
            弧段是有方向的，如果要设置弧段正向的权值（正阻力值），将该弧段的起始结点ID值赋予该方法的fromNodeID参数。
            如果要设置弧段反向的权值（反阻力值），将该弧段的终止结点ID值赋予该方法的fromNodeID参数。
            </para>
            <para>
            所有不通的弧段处理成权值-1。
            </para>
            <para>使用该方法时需注意，如果本来该弧段就是障碍边，则不能设置权值。
            </para>
            <para>使用该方法时需注意，弧段ID，起始结点ID，终止结点ID，通行权值参数长度必须完全一致。
            </para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.SpatialOperate(SuperMap.IS.Utility.Geometry,SuperMap.IS.Utility.Geometry,SuperMap.IS.Utility.SpatialOperationType)">
            <summary>
            使用几何对象param对几何对象source进行空间运算，如相交、相并、相减、对称差、裁减等运算。
            </summary>
            <remarks>
            <para>
            几何对象的空间运算是指对几何对象source进行相交、合并等操作。</para>
            <para>相交、合并、裁减等操作被称为运算因子（空间操作类型）。</para>
            <para>几何对象source称作被操作对象，几何对象param称作操作对象。</para>
            <para>用操作对象去对被操作对象进行空间运算，从而得到一个新的几何对象，这个新的几何对象
            就是对被操作对象的运算结果。</para>
            <para>
            具体空间运算的含义参见<see cref="T:SuperMap.IS.Utility.SpatialOperationType"/>中的各个枚举值的说明。
            </para>
            </remarks>
            <param name="source">进行空间运算的被操作的几何对象。</param>
            <param name="param">进行空间运算的操作的几何对象。</param>
            <param name="operation">空间运算因子，即要进行了空间操作类型，如裁减Clip，求并Union，等</param>
            <returns>返回对被操作对象进行空间运算后生成的运算结果，该结果是一个几何对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.OverlayAnalyst(SuperMap.IS.Utility.OverlayParam)">
            <summary>
            叠加分析。
            </summary>
            <param name="param">叠加分析参数</param>
            <returns>叠加分析结果</returns>
            <remarks>
            <para>
            叠加分析是指在两个数据集之间进行的一系列集合运算，是GIS中的一项非常重要的空间分析功能。</para>
            <para>比如，我们需要了解某一个行政区内的土壤分布情况，我们就根据全国的土地利用图和行政区规划图这两个数据集进行叠加分析，
            然后得到我们需要的结果，从而进行各种分析评价。 </para>
            <para>叠加分析涉及到两个数据集，其中一个数据集为操作数据集，必须为面数据集，另一个数据集为被操作数据集，
            除合并运算和对称差运算必须是面数据集外，其他运算可以是点、线、面或者复合数据集。可以进行点与面的叠加、
            线与面的叠加、多边形与面的叠加。
            </para>
            <para>
            进行叠加分析之前，根据<see cref="T:SuperMap.IS.Utility.OverlayParam">OverlayParam</see>设置进行叠加分析的条件，
            包括操作图层的名称<see cref="F:SuperMap.IS.Utility.OverlayParam.OperateLayer"/>、叠加分析的类型<see cref="F:SuperMap.IS.Utility.OverlayParam.Operation"/>等。
            </para>
            <para>
            叠加分析的结果通过<see cref="T:SuperMap.IS.Utility.OverlayResult"/>获取，包括叠加分析结果数据集所对应的图层名称<see cref="F:SuperMap.IS.Utility.OverlayResult.ResultDataset"/>
            和叠加分析操作是否成功<see cref="F:SuperMap.IS.Utility.OverlayResult.Succeed"/>。
            </para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetBusLine(System.Int32)">
            <summary>
            根据线路SMID查找线路。
            </summary>
            <param name="busLineID">待查公交线路的SMID的值。</param>
            <returns>返回SmID为指定值的公交线路对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetBusStop(System.Int32)">
            <summary>
            根据站点SMID查找站点。
            </summary>
            <param name="busStopID">待查公交站点的SMID的值。</param>
            <returns>返回SmID为指定值的公交站点对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetResource(System.String,SuperMap.IS.Utility.ResourceParam)">
            <summary>
            获取资源图片
            </summary>
            <param name="mapName">地图名称</param>
            <param name="resourceParam">资源参数</param>
            <returns>图片地址</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetTrackingLayerImage">
            <summary>
            根据地图参数获取TrackingLayer的图片。
            </summary>
            <returns>图片的url。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.Interpolate(SuperMap.IS.Utility.InterpolateParam)">
            <summary>
            使用内插方法估算单元格的值，生成Grid数据集。
            </summary>
            <param name="param">内插表面参数。</param>
            <returns>内插表面结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.Aggregate(SuperMap.IS.Utility.AggregateParam)">
            <summary>
            栅格聚合操作。
            </summary>
            <param name="param">设置栅格聚合操作需要的参数。</param>
            <returns>返回栅格聚合操作结果。</returns>
            <remarks>
            栅格聚合操作是以整数倍缩小栅格分辩率，生成一个新的栅格的过程，每个栅格的值由其包含的原栅格的值共同决定，可以取包含栅格的和、最大值、最小值、平均值、中数。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.Reclass(SuperMap.IS.Utility.ReclassParam)">
            <summary>
            栅格重分级操作。
            </summary>
            <param name="param">设置栅格重分级操作需要的参数。</param>
            <returns>栅格重分级操作结果。</returns>
            <remarks>
            栅格重分级操作就是重新定义栅格数据集中每个格网的数值。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.Replace(SuperMap.IS.Utility.ReplaceParam)">
            <summary>
            栅格数据查找替换操作。
            </summary>
            <param name="param">设置栅格数据查找替换操作参数。</param>
            <returns>返回栅格数据查找与替换操作的结果。</returns>
            <remarks>
            该方法主要通过一个属性表数据集来设置要查找的栅格数据，以及要替换的数据。使用该方法可以实现查找并替换原栅格数据集中栅格数据的目标。
            </remarks>  
        </member>
        <member name="M:SuperMap.IS.Web.IMap.Resample(SuperMap.IS.Utility.ResampleParam)">
            <summary>
            栅格重采样操作。
            </summary>
            <param name="param">栅格重采样操作参数。</param>
            <returns>栅格重采样操作结果。</returns>
            <remarks>
            <para>栅格数据进行配准或纠正、投影等几何变换后，栅格的每个格子中心位置通常会发生变化，其在输入栅格中的位置不一定是整数的行列号，因此需要根据输出栅格上每个格子在输入栅格中的位置，对输入栅格按一定规则进行重采样，进行栅格值的插值计算，建立新的栅格矩阵。</para>
            <para>重采样方法同样会应用在不同分辩率的栅格数据之间进行代数运算时，需要将栅格大小统一到一个指定的分辩率上，此时就需要对栅格进行重采样。</para>
            <para>栅格重采样的方法通常有三种：最邻近法、双线性内插法和三次卷积内插法；关于此三种方法的差异和适用范围，请参阅<see cref="T:SuperMap.IS.Utility.ResampleType"/>。</para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.IsoLine(System.String,SuperMap.IS.Utility.IsoLineParam)">
            <summary>
            根据栅格数据集进行提取等值线操作。
            </summary>
            <param name="gridDataset">要进行提取等值线操作的栅格数据集标识，可以是 Grid 或 DEM 数据集。</param>
            <param name="param"> 提取等值线操作参数。</param>
            <returns>提取等值线操作结果。</returns>
            <remarks>由栅格数据提取等值线的计算结果和栅格数据本身的特性密切相关。
            不能期望从一个低精度的栅格数据得出一个高精度的等值线模型。</remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.IsoLine(System.String,System.String,SuperMap.IS.Utility.InterpolateType,System.Double,SuperMap.IS.Utility.IsoLineParam)">
            <summary>
            根据离散点数据集进行提取等值线操作。
            </summary>
            <param name="pointDataset">离散点数据集标识，形如“point@changchun”。该数据集的属性表中存储了要生成等值线的值字段。</param>
            <param name="pointValueField">离散点数据集中的值字段名称。 </param>
            <param name="interpolateType">使用的插值方法。可以选择 TIN，IDW，Krig 或样条等方法进行插值。使用 Krig 方法插值时，点数据集中的采样点至少应大于8个。 </param>
            <param name="gridResolution">使用IDW、Krig 或样条曲面的方法进行插值时，中间结果 DEM 的分辩率，通常为 20。</param>
            <param name="param"> 提取等值线操作参数。</param>
            <returns>提取等值线操作结果。</returns>
            <seealso cref="T:SuperMap.IS.Utility.InterpolateType"/>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.IsoLine(SuperMap.IS.Utility.MapCoord[],System.Double[],SuperMap.IS.Utility.InterpolateType,System.Double,SuperMap.IS.Utility.IsoLineParam)">
            <summary>
            根据离散点对象数组进行提取等值线操作。
            </summary>
            <param name="pointPositions">离散点坐标数组。</param>
            <param name="pointValues">离散点的值数组。</param>
            <param name="interpolateType">使用的插值方法。可以选择 TIN，IDW，Krig 或样条等方法进行插值。使用 Krig 方法插值时，离散点至少应大于8个。</param>
            <param name="gridResolution">使用IDW、Krig 或样条曲面的方法进行插值时，中间结果 DEM 的分辩率，通常为20。</param>
            <param name="param">提取等值线操作参数。</param>
            <returns>提取等值线操作结果。</returns>
            <seealso cref="T:SuperMap.IS.Utility.InterpolateType"/>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GridClip(SuperMap.IS.Utility.GridClipParam)">
            <summary>
            栅格裁剪操作。
            </summary>
            <param name="param"> 栅格裁剪操作参数。</param>
            <returns>栅格裁剪操作结果。</returns>
            <remarks>栅格区域裁剪对Image、Grid/DEM 数据集进行真正裁剪，而对打开的 ECW 以及 MrSID 影像进行显示裁剪，并不裁剪原数据。此方法不支持裁剪 SIT 和影像插件 数据。</remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.IsoRegion(SuperMap.IS.Utility.IsoRegionParam)">
            <summary>
            根据Grid或者DEM提取等值面。
            </summary>
            <param name="param"> 提取等值面操作参数。</param>
            <returns>提取等值面操作结果。</returns>
            <remarks>由栅格数据提取等值面的计算结果和栅格数据本身的特性密切相关。
            不能期望从一个低精度的栅格数据得出一个高精度的等值面模型。</remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.IsoRegion(System.String,System.String,SuperMap.IS.Utility.InterpolateParam,SuperMap.IS.Utility.IsoRegionParam)">
            <summary>
            根据离散点数据集进行提取等值面操作。
            </summary>
            <param name="pointDataset">离散点数据集标识，形如“point@changchun”。该数据集的属性表中存储了要生成等值面的值字段。</param>
            <param name="pointValueField">离散点数据集中的值字段名称。 </param>
            <param name="interpolateParam">离散点数据集进行插值操作参数</param>
            <param name="param">提取等值面操作参数。</param>
            <returns>提取等值面操作结果。</returns>
            <remarks>
            在使用离散点数据集进行提取等值面的方法中，方法中存在一个内插值参数interpolateParam，内插值参数的中间结果Dataset、FieldName、OverwriteIfExists、ResultDataset、Bounds由内部决定，
            方法中参数interpolateParam不必对其进行任何设置。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.IsoRegion(SuperMap.IS.Utility.MapCoord[],System.Double[],SuperMap.IS.Utility.InterpolateParam,SuperMap.IS.Utility.IsoRegionParam)">
            <summary>
            根据离散点对象数组进行提取等值面操作。
            </summary>
            <param name="pointPositions">离散点坐标数组。</param>
            <param name="pointValues">离散点的值数组。</param>
            <param name="interpolateParam">离散点进行插值操作参数</param>
            <param name="param">提取等值面操作参数。</param>
            <returns></returns>
            <remarks>
            在使用离散点进行提取等值面的方法中，方法中存在一个内插值参数interpolateParam，内插值参数的中间结果Dataset、FieldName、OverwriteIfExists、ResultDataset、Bounds由内部决定，
            方法中参数interpolateParam不必对其进行任何设置。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetGeometryImage(System.String,SuperMap.IS.Utility.GeometryParam)">
            <summary>
            根据几何对象参数获取几何对象图片
            </summary>
            <param name="mapName">地图名称</param>
            <param name="geometryParam">几何对象参数</param>
            <returns>几何对象图片</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetWorkspaceInfo">
            <summary>
            获取工作空间的相关信息。如地图、数据源、数据集等，但不包括具体的图幅信息。
            </summary>
            <returns>工作空间的相关信息。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetDatasetInfo(SuperMap.IS.Utility.Datasource,SuperMap.IS.Utility.Dataset)">
            <summary>
            获取数据集及其图幅信息。
            </summary>
            <param name="datasource">数据源信息。如 ID 或名字。</param>
            <param name="dataset">数据集信息。如 ID 或名字。</param>
            <returns>数据集及其相关信息。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.Flood(SuperMap.IS.Utility.FloodParam)">
            <summary>
            根据三维地形和水位高度，计算淹没的区域。
            </summary>
            <param name="floodParam">淹没范围分析参数。
            <para>通过该对象设置淹没分析所需要的参数，如淹没高度（<see cref="F:SuperMap.IS.Utility.FloodParam.Height"/>），要计算的三维地形的数据集标识（<see cref="F:SuperMap.IS.Utility.FloodParam.Dataset"/>），形如 数据集名@数据源名 。</para>
            <para>如果只需要计算三维地形某个区域内的淹没范围，可以通过<see cref="F:SuperMap.IS.Utility.FloodParam.Region"/>指定。</para>
            </param>
            <returns>淹没范围分析结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.CutFill(SuperMap.IS.Utility.CutFillParam)">
            <summary>
            填方和挖方计算。
            </summary>
            <param name="cutFillParam">填方和挖方计算参数。</param>
            <returns>填方和挖方计算结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.CalculateViewShed(SuperMap.IS.Utility.CalculateViewShedParam)">
            <summary>
            计算可视域。
            </summary>
            <param name="calculateViewShedParam">视域分析参数。</param>
            <returns>视域分析结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.Aspect(SuperMap.IS.Utility.AspectParam)">
            <summary>
            坡向计算。
            </summary>
            <param name="aspectParam">坡向计算参数。</param>
            <returns>坡向计算结果。如果坡向计算成功，将返回生成的坡向图的数据集名称。</returns>
            <remarks>
            坡向是指坡面的朝向，它表示地形表面某处最陡的下坡方向。坡向以度为单位，按顺时针方向从0度（正北方向）到360度来度量。通常被计算坡度的
            栅格，用周围的邻域单元的栅格值来参与运算。水平的坡没有方向，被赋值为-1。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.Slope(SuperMap.IS.Utility.SlopeParam)">
            <summary>
            坡度计算。
            </summary>
            <param name="slopeParam">坡度计算参数。</param>
            <returns>坡度计算结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.SurfaceArea(SuperMap.IS.Utility.SurfaceAreaParam)">
            <summary>
            计算指定区域在 DEM 上的表面积。 
            </summary>
            <param name="surfaceAreaParam">栅格表面积计算参数。</param>
            <returns>栅格表面积。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.SurfaceLength(SuperMap.IS.Utility.SurfaceLengthParam)">
            <summary>
            计算指定二维线在 DEM 上的表面长度。 
            </summary>
            <param name="surfaceLengthParam">栅格表面长度计算参数。</param>
            <returns>栅格表面长度。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GridCompare(SuperMap.IS.Utility.GridCompareParam)">
            <summary>
            栅格比较。该方法用于对一个栅格数据集逐行逐列与另一栅格数据集或者一个常数比较，判断他们是否满足一定的关系，如相等，大于，小于等。
            </summary>
            <param name="gridCompareParam">栅格比较参数。通过该参数设置用于比较的栅格数据集，常数，以及对比的关系（大于、等于、小于等）。</param>
            <returns>栅格比较结果。返回栅格比较操作是否成功，生成的结果数据集的名称等。</returns>
            <remarks>
            进行比较的两个栅格数据集或者栅格数据集与常量，如果两者符合对比关系（相等，大于、小于等），则结果栅格数据集中相应像元值为1，不符合对比关系则为0。
            当指定了源栅格数据集时会使用源栅格数据集和目标栅格数据集进行栅格比较,只有在没有指定源栅格数据集的情况下才会使用常数和目标栅格数据集进行比较。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.NeighbourStatistics(SuperMap.IS.Utility.NeighbourStatisticsParam)">
            <summary>
            邻域统计分析。
            </summary>
            <param name="neighbourStatisticsParam">邻域统计分析参数。</param>
            <returns>邻域统计分析较结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.OverlayStatistics(SuperMap.IS.Utility.OverlayStatisticsParam)">
            <summary>
            栅格分带统计分析。
            </summary>
            <param name="overlayStatisticsParam">分带统计分析参数。</param>
            <returns>分带统计分析结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GridExecute(SuperMap.IS.Utility.GridExecuteParam)">
            <summary>
            栅格表达式运算。
            </summary>
            <param name="gridExecuteParam">栅格表达式运算参数。</param>
            <returns>栅格表达式运算结果。</returns>
            <remarks><para>（1）数学表达式应为一个形如下式的字符串：</para>
            <para>[DatasourceAlias1.Raster1] + [DatasourceAlias2.Raster2] </para>
            <para>使用“ [数据源别名.数据集名] ”来指定参加运算的栅格数据集；注意要使用方括号把名字括起来。如果栅格计算中有小于零的负值，注意要加小括号，如：</para>
            <para>[DatasourceAlias1.Raster1] - ([DatasourceAlias2.Raster2])</para>
            <para>（2）SuperMap中的栅格代数计算支持四则运算符（"+" 、"-" 、"*" 、"/" ）、条件运算符（"&gt;" 、"&gt;=" 、"&lt;" 、"&gt;=" 、"&lt;&gt;" 、"==" ）、逻辑运算符（"|" 、"&amp;" 、"Not()" 、"^" ）
            和一些常用数学函数（"abs()" 、"acos()" 、"asin()" 、"atan()" 、"acot()" 、"cos()" 、"cosh()" 、"cot()" 、"exp()" 、"floor()" 、"mod(,)" 、"ln()" 、"log()" 、"pow(,)" 、
            "sin()" 、"sinh()" 、"sqrt()" 、"tan()" 、"tanh()" 、"Isnull()" 、"Con(,,)" ）。</para>
            <para>（3）代数运算的表达式各个函数之间可以嵌套使用，直接用条件运算符计算的栅格结果都为二值（如大于、小于等），即满足条件的用1代替，不满足的用0代替，
            若想使用其他值来表示满足条件和不满足条件的取值，可以使用条件提取函数Con(,,)。
            例如："Con(IsNull([SURFACE_ANALYST.Dem3] ) ,100,Con([SURFACE_ANALYST.Dem3] > 100,[SURFACE_ANALYST.Dem3] ,-9999) ) " ，
            该表达式的含义是：栅格数据集 Dem3 在别名为 SURFACE_ANALYST 的数据源中，将其中无值栅格变为 100，剩余栅格中，大于100 的，值保持不变，小于等于 100 的，值改成 -9999。</para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.StatisticsQuery(SuperMap.IS.Utility.StatisticsQueryParam)">
            <summary>
            统计分析。对指定的查询参数，如图层名、字段名、统计方法（求最大值、求最小值、求平均值等）等，进行参数值统计。
            </summary>
            <param name="statisticsQueryParam">统计分析参数。</param>
            <returns>查询结果集对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetGridPixelValue(System.String,System.String,SuperMap.IS.Utility.MapCoord)">
            <summary>
            获取栅格图层的某一指定地理位置的像素值。
            </summary>
            <param name="mapName">栅格图层所在的地图名称。</param>
            <param name="layerName">栅格图层的名称。</param>
            <param name="position">指定地理位置。</param>
            <returns>该指定地理位置的像素值。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.SetGridPixelValue(System.String,System.String,SuperMap.IS.Utility.MapCoord,System.Int32)">
            <summary>
            设置栅格图层的某一指定地理位置的像素值。
            </summary>
            <param name="mapName">栅格图层所在的地图名称。</param>
            <param name="layerName">栅格图层的名称。</param>
            <param name="position">指定地理位置。</param>
            <param name="value">要设置的像素值。</param>
            <returns>设置的像素值。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ConnectDatasources">
            <summary>
            连接工作空间中的所有数据源。
            </summary>
            <returns>返回是否连接成功，布尔值。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetGridValue(System.String,System.String,SuperMap.IS.Utility.MapCoord)">
            <summary>
            获取栅格图层的某一指定地理位置的栅格值。
            </summary>
            <param name="mapName">栅格图层所在的地图名称。</param>
            <param name="layerName">栅格图层的名称。</param>
            <param name="position">指定地理位置的坐标值。</param>
            <returns>返回该地理位置的栅格值。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.SetGridValue(System.String,System.String,SuperMap.IS.Utility.MapCoord,System.Double)">
            <summary>
            设置栅格图层的某一指定地理位置的栅格值。
            </summary>
            <param name="mapName">栅格图层所在的地图名称。</param>
            <param name="layerName">栅格图层的名称。</param>
            <param name="position">指定地理位置的坐标值。</param>
            <param name="value">设置该地理位置的坐标值。</param>
            <returns>栅格值。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.IsVisible(SuperMap.IS.Utility.IsVisibleParam)">
            <summary>
            判断 DEM 上两点之间的通视性。返回true，表示两点通视；否则表示两点不通视。
            </summary>
            <remarks>该方法可以同时判断多个点之间的通视情况。设置方法如下：
            <para>1、通过<see cref="F:SuperMap.IS.Utility.IsVisibleParam.Points"/>设置要分析的点对象，如point1，point2，point3。</para>
            <para>2、设置DEM数据集名称-<see cref="F:SuperMap.IS.Utility.IsVisibleParam.Dataset"/>。</para>
            <para>通过该方法获取的结果为<see cref="T:SuperMap.IS.Utility.IsVisibleResult"/>对象，两点间的通视性可以通过<see cref="F:SuperMap.IS.Utility.IsVisibleResult.Succeeds"/>获取。</para>
            <para>如：<see cref="F:SuperMap.IS.Utility.IsVisibleResult.Succeeds"/>[0] 代表 point1和point2之间的通视性。</para>
            <para>    <see cref="F:SuperMap.IS.Utility.IsVisibleResult.Succeeds"/>[1] 代表 point2和point3之间的通视性。</para>
            <para>    <see cref="F:SuperMap.IS.Utility.IsVisibleResult.Succeeds"/>[2] 代表 point1和point3之间的通视性。</para>
            </remarks>
            <param name="isVisibleParam">通视分析参数。</param>
            <returns>通视分析结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.SurfaceProfile(SuperMap.IS.Utility.SurfaceProfileParam)">
            <summary>
            栅格表面剖面线计算。
            </summary>
            <param name="surfaceProfileParam">栅格表面剖面线计算参数。</param>
            <returns>栅格表面剖面线计算结果。</returns>
            <remarks>
            剖面线：平面上的折线在地形表面上的投影线，即剖面图表达的是给定线要素上每一点距起点的距离（作为横坐标）及其高程（作为纵坐标）构成的
            剖面线。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.Basin(SuperMap.IS.Utility.BasinParam)">
            <summary>
            划分流域盆地计算。输入栅格的每个像素都会被分配一个唯一的盆地。结果保存在数据集中。
            </summary>
            <param name="basinParam">划分流域盆地计算参数。</param>
            <returns>划分流域盆地计算结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.WaterShed(SuperMap.IS.Utility.WaterShedParam)">
            <summary>
            按照指定条件计算流域汇水盆地。
            </summary>
            <param name="waterShedParam">按照指定条件计算流域汇水盆地参数。</param>
            <returns>按照指定条件计算流域汇水盆地结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.FillSink(SuperMap.IS.Utility.FillSinkParam)">
            <summary>
            填充伪洼地。
            </summary>
            <param name="fillSinkParam">填充伪洼地计算参数。</param>
            <returns>填充伪洼地计算结果。</returns>
            <remarks>1.洼地区域是水流方向不合理的地方，可以通过流向来判断洼地，并进行填充。一般，洼地分为两种情况，一种是地表真实形态的反映，
            如冰川或喀斯特地貌，另外一种是数据处理造成的误差。在填充之前计算洼地，有助于了解哪些区域将被填充。
            <para>2.填充洼地通常是进行合理流向计算的前提，如果地形数据中存在一些类似“深沟”的像元，周围的高程值都高于该像元的值，那么它的流向将不易被确定。</para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.FlowDirection(SuperMap.IS.Utility.FlowDirectionParam)">
            <summary>
            流向分析。
            </summary>
            <param name="flowDirectionParam">流向分析计算参数。</param>
            <returns>流向分析计算结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.FlowAccumulation(SuperMap.IS.Utility.FlowAccumulationParam)">
            <summary>
            累积汇水量。
            </summary>
            <param name="flowAccumulationParam">累积汇水量计算参数。</param>
            <returns>累积汇水量计算结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.RasterToVector(SuperMap.IS.Utility.RasterToVectorParam)">
            <summary>
            栅格数据集转换成矢量数据集。
            </summary>
            <param name="rasterToVectorParam">栅格数据集转换成矢量数据集操作参数。</param>
            <returns>栅格数据集转换成矢量数据集操作结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ServiceArea(SuperMap.IS.Utility.MapCoord[],System.Double[],System.Boolean,System.Boolean,System.String,System.String,SuperMap.IS.Utility.NetworkParams)">
            <summary>
            根据坐标进行服务区分析。
            </summary>
            <param name="centerPoints">分析区域的中心点坐标。</param>
            <param name="serviceRanges">服务区半径，单位与路线上的耗费有关，即与网络分析设置的正向、方向阻力字段的单位一致。</param>
            <param name="isFromSite">是否从中心开始查找。</param>
            <param name="notOverlap">是否不叠加。</param>
            <param name="resultRouteName">结果集名称。</param>
            <param name="serviceAreaName">服务区名称。</param>
            <param name="networkParams">网络分析参数。</param>
            <returns>返回布尔值表示是否分析成功。</returns>
            <remarks>
            <para>
            服务区是以指定点为中心，在一定阻力范围内，包含所有可通达边的一个区域。服务区分析为网络上指定的位置点计算服务范围。
            </para>
            <para>
            分析成功之后，通过参数返回两个数据集，一个表示各个服务中心点的服务路径，另一个表示各个服务中心点的服务区域。在服务区域数据集中，有该服务区的总耗费和总距离。
            </para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.ServiceArea(System.Int32[],System.Double[],System.Boolean,System.Boolean,System.String,System.String,SuperMap.IS.Utility.NetworkParams)">
            <summary>
            根据节点ID进行服务区分析。
            </summary>
            <param name="centerIDs">分析区域的中心点数组。</param>
            <param name="serviceRanges">服务区半径，单位与路线上的耗费有关，即与网络分析设置的正向、方向阻力字段的单位一致。</param>
            <param name="isFromSite">是否从中心开始查找。</param>
            <param name="notOverlap">是否不叠加。</param>
            <param name="resultRouteName">结果集名称。</param>
            <param name="serviceAreaName">服务区名称。</param>
            <param name="networkParams">网络分析参数。</param>
            <returns>返回布尔值表示是否分析成功。</returns>
            <remarks>
            <para>
            服务区是以指定点为中心，在一定阻力范围内，包含所有可通达边的一个区域。服务区分析为网络上指定的位置点计算服务范围。
            </para>
            <para>
            分析成功之后，通过参数返回两个数据集，一个表示各个服务中心点的服务路径，另一个表示各个服务中心点的服务区域。在服务区域数据集中，有该服务区的总耗费和总距离。
            </para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.UpStream(SuperMap.IS.Utility.StreamParam)">
            <summary>
            上游追踪。
            </summary>
            <param name="streamParam">追踪参数，包括分析起点、流向字段、网络参数、返回结果设置等。</param>
            <returns>追踪结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.DownStream(SuperMap.IS.Utility.StreamParam)">
            <summary>
            下游追踪。
            </summary>
            <param name="streamParam">追踪参数，包括分析起点、流向字段、网络参数、返回结果设置等。</param>
            <returns>追踪结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GenerateGeometryByEventTable(SuperMap.IS.Utility.GenerateGeometryByEventTableParam)">
            <summary>
            通过事件表生成空间数据集。成功则返回定位后的点或者线数据集的标识（形如"数据集名称@数据源别名"，例如：Country@World。），如果是线事件表，生成的是路由数据集的标识（形如"数据集名称@数据源别名"，例如：Country@World。）。
            </summary>
            <returns>生成的空间数据集的标识（形如"数据集名称@数据源别名"，例如：Country@World。）。</returns>
            <remarks><para>
            （1）事件表：事件表是用属性表的方式记录点或者线事件发生所在的道路、刻度、点事件的信息（如交通事故发生地的天气状况、驾驶者的酒精含量、当时的车速等）、
            道路的路况（路面宽度、铺设材料等）属性，根据已有的路由数据，事件表可以被定位到空间上，生成相应的点或者线图层。</para>
            <para>（2）点事件表参考道路数据可以生成点数据；线事件表参考道路数据可以生成线数据（路由数据集）。</para>
            <para>（3）并非所有的事件都可以成功生成空间数据，在生成空间数据时，通常有几种未能成功定位的错误类型，该信息在事件表生成空间数据之后，会被写到事件表数据集中。
            点事件的错误信息字段有三类描述：定位成功、无对应路由、无对应刻度；线事件的错误信息字段有五类描述：定位成功、无对应路由、部分匹配、完全不匹配、首尾刻度相同。</para>
            </remarks>
            <param name="param">事件表生成空间数据集的参数设置对象。</param>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.Allocate(SuperMap.IS.Utility.AllocateParam)">
            <summary>
            资源分配。
            </summary>
            <param name="allocateParam">资源分配参数。</param>
            <returns>资源分配结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.OpenDatasource(SuperMap.IS.Utility.DatasourceParam)">
            <summary>
            打开数据源
            </summary>
            <param name="datasourceParam">数据源参数</param>
            <returns>打开数据源是否成功</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.CloseDatasource(System.String)">
            <summary>
            关闭数据源
            </summary>
            <param name="alias">数据源别名</param>
            <returns>关闭数据源是否成功</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.RefreshDatasource">
            <summary>
            刷新数据源
            </summary>
            <returns>刷新数据源是否成功</returns>
            <remarks>
            对数据源进行了一些操作，比如删除、增加了一个数据集后，需要对该数据源进行刷新。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.LocationsAllocate(SuperMap.IS.Utility.LocationsAllocateParam)">
            <summary>
            选址分区。
            </summary>
            <param name="locationsAllocateParam">选址分区参数。</param>
            <returns>选址分区结果。</returns>
            <remarks>
            为一个或多个待建的设施选定最佳或最优的地址以使需求方以一种最高效的方式获取服务或者商品。这个模型
            不仅要决定设施的分布状况，还要将需求点的需求分配到相应的设施中去，因而称之为选址分区。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.CoordTransformate(SuperMap.IS.Utility.MapCoord[],SuperMap.IS.Utility.PJCoordSys,SuperMap.IS.Utility.PJCoordSys)">
            <summary>
            坐标转换。
            </summary>
            <param name="coords">要进行转换的坐标数组。</param>
            <param name="sourceCoordSys">源坐标系。</param>
            <param name="targetCoordSys">目标坐标系。</param>
            <returns>转换后的坐标数组。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.CopyDataset(SuperMap.IS.Utility.CopyDatasetParam,System.String)">
            <summary>
            复制数据集。
            </summary>
            <param name="copyDatasetParam">数据集复制参数。</param>
            <param name="userID">编辑用户唯一标识。</param>
            <returns>数据集复制结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.CopyDataset(SuperMap.IS.Utility.CopyDatasetParam,SuperMap.IS.Utility.ResultDatasetCopyParam,System.String)">
            <summary>
            复制数据集。将源数据集复制成指定参数的结果数据集。
            </summary>
            <param name="copyDatasetParam">设置要复制的源数据集信息以及结果数据集信息。包括数据存储格式类型，如果结果数据集已存在，是否覆盖该数据集，结果数据集标识等。</param>
            <param name="resultDatasetCopyParam">设置复制数据集需要的相关参数。例如结果数据集的编码方式，矢量数据集复制时是否复制原有的字段索引等。</param>
            <param name="userID">编辑用户唯一标识。</param>
            <returns>数据集复制结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.CreateDataset(SuperMap.IS.Utility.CreateDatasetParam,System.String)">
            <summary>
            创建数据集。
            </summary>
            <param name="createDatasetParam">数据集创建参数。</param>
            <param name="userID">编辑用户唯一标识。</param>
            <returns>数据集创建结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.DeleteDataset(System.String,System.String)">
            <summary>
            删除数据集。
            </summary>
            <param name="dataset">要删除的数据集标识，形如"数据集名称@数据源别名"，例如：Country@World。</param>
            <param name="userID">编辑用户唯一标识。</param>
            <returns>数据集删除结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.CopyField(System.String,System.String,System.String,System.String)">
            <summary>
            复制字段。
            </summary>
            <param name="dataset">要复制字段的源数据集标识，形如"数据集名称@数据源别名"，例如：Country@World。</param>
            <param name="sourceFieldName">源字段名称。</param>
            <param name="targetFieldName">目标字段名称。</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>字段操作结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.CreateField(System.String,SuperMap.IS.Utility.Field,System.Boolean,System.String)">
            <summary>
            创建字段。
            </summary>
            <param name="dataset">要创建字段的源数据集标识，形如"数据集名称@数据源别名"，例如：Country@World。</param>
            <param name="field">要创建的字段信息对象</param>
            <param name="overwriteIfExists">是覆盖已存在的字段</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>字段操作结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.DeleteField(System.String,System.String,System.String)">
            <summary>
            删除字段。
            </summary>
            <param name="dataset">要删除字段的源数据集标识，形如"数据集名称@数据源别名"，例如：Country@World。</param>
            <param name="fieldName">要删除的字段名称</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>字段操作结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.SetField(System.String,System.String,SuperMap.IS.Utility.Field,System.String)">
            <summary>
            设置字段。对指定数据源里的某字段进行修改，支持字段类型和精度等的修改。
            </summary>
            <param name="dataset">要设置字段的源数据集标识，形如"数据集名称@数据源别名"，例如：Country@World。</param>
            <param name="fieldName">要设置的字段名称</param>
            <param name="field">要设置的字段信息对象</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>字段操作结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.UpdateFieldValues(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            更新字段。对指定数据集中的某字段值进行更新，但系统字段不能被更新。
            </summary>
            <param name="dataset">要更新字段的源数据集标识，形如"数据集名称@数据源别名"，例如：Country@World。</param>
            <param name="fieldName">要更新的字段名称</param>
            <param name="expression">目标字段值，可以传入一个合法的表达式。</param>
            <param name="filter">要更新记录的查询条件，相当于 SQL 语句中的 WHERE 子句，查询结果即为被更新的记录。如果 filter 为空字符串，则更新表中所有的记录。</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>字段操作结果</returns>
            <remarks>
            对 SDX for SQL Server 或 SDX+ for SQL Server 数据源，更新日期型字段时，expression 参数的格式示例："convert(datetime,'2006-01-17 16:50:22',120)"；
            对于SDX+ for Oracle 数据源，更新日期型字段时，expression  参数的格式示例："to_date('2006-01-17 16:45:22','YYYY-MM-DD HH24:MI:SS')"；
            其他引擎的数据源，如 SDX+ for SDBPlus，更新日期型字段，expression 参数的格式示例："#2006-01-17#"。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetFieldInfo(System.String,System.String)">
            <summary>
            获取字段信息。
            </summary>
            <param name="dataset">要获取字段的源数据集标识，形如"数据集名称@数据源别名"，例如：Country@World。</param>
            <param name="fieldName">要获取的字段名称。</param>
            <returns>字段信息获取结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.MakeDefaultDotDensityTheme(System.String,System.String,SuperMap.IS.Utility.ColorGradientType)">
            <summary>
            制作默认点密度专题图
            </summary>
            <param name="layerName">制作专题图图层名</param>
            <param name="expression">专题图表达式</param>
            <param name="colorSet">配色方案</param>
            <returns>点密度专题图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.MakeDefaultGraduatedSymbolTheme(System.String,System.String,SuperMap.IS.Utility.ColorGradientType)">
            <summary>
            制作默认等级符号专题图
            </summary>
            <param name="layerName">制作专题图图层名</param>
            <param name="expression">专题图表达式</param>
            <param name="colorSet">配色方案</param>
            <returns>等级符号专题图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.MakeDefaultGraphTheme(System.String,System.String[],SuperMap.IS.Utility.ColorGradientType)">
            <summary>
            制作默认统计专题图
            </summary>
            <param name="layerName">制作专题图图层名</param>
            <param name="expressions">专题图表达式</param>
            <param name="colorSet">配色方案</param>
            <returns>统计专题图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.MakeDefaultRangeTheme(System.String,System.String,System.Int32,SuperMap.IS.Utility.ColorGradientType)">
            <summary>
            制作默认分段专题图
            </summary>
            <param name="layerName">制作专题图图层名</param>
            <param name="expression">专题图表达式</param>
            <param name="breakCount">分级统计专题图的分段点的总数</param>
            <param name="colorSet">配色方案</param>
            <returns>分段专题图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.MakeDefaultUniqueTheme(System.String,System.String,SuperMap.IS.Utility.ColorGradientType,System.Int32,System.Int32)">
            <summary>
            制作默认单值专题图
            </summary>
            <param name="layerName">图层名</param>
            <param name="expression">字段表达式</param>
            <param name="colorSet">配色方案</param>
            <param name="startSmID">分类类别起始ID</param>
            <param name="expectCount">单值专题图中所包括的分类类别的数目</param>
            <returns>单值专题图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.MakeDefaultGridRangeTheme(System.String,System.Int32,SuperMap.IS.Utility.ColorGradientType)">
            <summary>
            制作默认栅格分段专题图
            </summary>
            <param name="layerName">制作专题图图层名</param>
            <param name="breakCount">分级统计专题图的分段点的总数</param>
            <param name="colorSet">配色方案</param>
            <returns>栅格分段专题图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetCachedReferBounds(System.String,System.Int32,System.Int32)">
            <summary>
            获取地图对应的缓存参考范围。
            </summary>
            <param name="mapName">地图名</param>
            <param name="tileWidth">缓存图片的宽度</param>
            <param name="tileHeight">缓存图片的高度</param>
            <returns>缓存参考范围</returns>
            <remarks>
            策略： 如果存在相应的 .sci 文件，就读取该文件中的范围，否则，
            如果在 SuperMapIS.config 文件中有设置，就读取该设置，否则，
            以当时实际取到的地图范围为准。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetExternalTableFieldInfos(System.String,System.String)">
            <summary>
            获取当前数据源所在的数据库表空间中某外挂表的字段信息。
            </summary>
            <param name="strTableName">外挂表的名称</param>
            <param name="datasourceName">数据源名称</param>
            <returns>获取外挂表字段信息结果对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.GetExternalTableNames(System.String)">
            <summary>
            获取当前数据源中的所有外挂表集合。
            </summary>
            <param name="datasourceName">当前数据源名</param>
            <returns>获取所有外挂表集合的结果对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.AddExternalTable(System.String,System.String,System.String,System.String)">
            <summary>
            打开数据库中非 SDX+ 管理的表（外挂表）。
            </summary>
            <param name="strTableName">数据库中已存在的外挂表名</param>
            <param name="strDTName ">外挂表数据集的名称</param>
            <param name="datasourceName">当前数据源名</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>外挂表操作结果对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.RemoveExternalTable(System.String,System.String,System.String)">
            <summary>
            从当前数据源中移除外挂表数据集。
            </summary>
            <param name="strDTName ">当前数据源中已存在的外挂表数据集的名称</param>
            <param name="datasourceName">当前数据源名</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>外挂表操作结果对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.RegisterExternalTable(System.String,System.String,System.Boolean,System.String)">
            <summary>
            注册外挂表数据集为 SDX+ 管理的 Tabular 数据集。
            </summary>
            <param name="strDTName">当前数据源中已存在的外挂表数据集的名称。</param>
            <param name="datasourceName">当前数据源名</param>
            <param name="bCreateSmID ">是否创建 SmID 字段</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>外挂表操作结果对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.UnRegisterExternalTable(System.String,System.String,System.String)">
            <summary>
            反注册数据源中的 Tabular 数据集，使之成为非 SDX+ 管理的表。
            </summary>
            <param name="strDTName ">纯属性表（Tabular）数据集的名称</param>
            <param name="datasourceName">当前数据源名</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>外挂表操作结果对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.Logistics(System.Int32[],System.Int32[],System.Boolean,SuperMap.IS.Utility.RouteParam)">
            <summary>
            物流配送，根据ID
            </summary>
            <param name="centerIDs">配送中心点SmNodeID数组</param>
            <param name="targetIDs">配送目的地SmNodeID数组</param>
            <param name="totalMinCost">配送模式是否是总和最小</param>
            <param name="routeParam">路径分析参数</param>
            <returns>返回的物流配送的结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.Logistics(SuperMap.IS.Utility.MapCoord[],SuperMap.IS.Utility.MapCoord[],System.Boolean,SuperMap.IS.Utility.RouteParam)">
            <summary>
             物流配送，根据路由节点的坐标数组
            </summary>
            <param name="centerPoints">配送中心点坐标数组</param>
            <param name="targetPoints">配送目的地坐标数组</param>
            <param name="totalMinCost">配送模式是否是总和最小</param>
            <param name="routeParam">路径分析参数</param>
            <returns>返回的物流配送的结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.EPSGToSuperMap(System.Int32)">
            <summary>
            转换 EPSG 坐标系的编码为 SuperMap 对应的编码。如果没有对应的坐标系编码，返回-1000。
            </summary>
            <param name="nEPSGCode">EPSG 坐标系的编码</param>
            <returns>SuperMap 坐标系的编码</returns>
        </member>
        <member name="M:SuperMap.IS.Web.IMap.SuperMapToEPSG(System.Int32)">
            <summary>
            转换 SuperMap 坐标系的编码为 EPSG 对应的编码。如果没有对应的坐标系编码，返回-1000。 
            </summary>
            <param name="nSuperMapCode">SuperMap 坐标系的编码</param>
            <returns>EPSG 坐标系的编码</returns>
        </member>
        <member name="P:SuperMap.IS.Web.IMap.SessionContainer">
            <summary>
            会话状态容器。IMap 使用该属性来保存会话状态相关的信息。
            </summary>
            <remarks>
            IMap 需要通过 <see cref="P:SuperMap.IS.Web.IMap.SessionContainer"/> 以及 <see cref="P:SuperMap.IS.Web.IMap.SessionKey"/> 来唯一确定同一个会话。
            可以给不同的 IMap 提供不同的 <seealso cref="P:SuperMap.IS.Web.IMap.SessionContainer"/>，此时 <see cref="P:SuperMap.IS.Web.IMap.SessionKey"/> 可以相同也可以不同。
            也可以给不同的 IMap 提供同一个 <seealso cref="P:SuperMap.IS.Web.IMap.SessionContainer"/>，只需要设置不同的 <see cref="P:SuperMap.IS.Web.IMap.SessionKey"/> 即可。
            </remarks>
        </member>
        <member name="P:SuperMap.IS.Web.IMap.SessionKey">
            <summary>
            获取或设置 Session 关键字。IMap 使用该属性来进行唯一标识。
            </summary>
            <remarks>
            IMap 需要通过 <see cref="P:SuperMap.IS.Web.IMap.SessionContainer"/> 以及 <see cref="P:SuperMap.IS.Web.IMap.SessionKey"/> 来唯一确定同一个会话。
            可以给不同的 IMap 提供不同的 <seealso cref="P:SuperMap.IS.Web.IMap.SessionContainer"/>，此时 <see cref="P:SuperMap.IS.Web.IMap.SessionKey"/> 可以相同也可以不同。
            也可以给不同的 IMap 提供同一个 <seealso cref="P:SuperMap.IS.Web.IMap.SessionContainer"/>，只需要设置不同的 <see cref="P:SuperMap.IS.Web.IMap.SessionKey"/> 即可。
            </remarks>
        </member>
        <member name="P:SuperMap.IS.Web.IMap.HistoryLength">
            <summary>
            获取或设置地图历史的长度。
            </summary>
            <remarks>
            如果设置为 0，就表示不保存地图历史。
            </remarks>
        </member>
        <member name="P:SuperMap.IS.Web.IMap.AutoSaveHistory">
            <summary>
            是否自动保存历史记录。
            </summary>
            <remarks>
            默认为 true。
            </remarks>
        </member>
        <member name="T:SuperMap.IS.Web.HistoryList">
            <summary>
            地图历史记录列表。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.HistoryList._maxLength">
            <summary>
            最大历史长度。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.HistoryList._list">
            <summary>
            历史列表。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.HistoryList._index">
            <summary>
            索引。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.HistoryList.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.HistoryList.#ctor(System.Int32)">
            <summary>
            构造函数。
            </summary>
            <param name="maxLength">最大历史长度，应当不小于0。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">如果传入的 maxLength 小于0，将会抛出该异常。</exception>
        </member>
        <member name="M:SuperMap.IS.Web.HistoryList.Add(SuperMap.IS.Utility.MapImage)">
            <summary>
            添加到地图历史纪录。
            </summary>
            <param name="mapImage">地图对象</param>
        </member>
        <member name="M:SuperMap.IS.Web.HistoryList.Previous">
            <summary>
            浏览前一历史记录。
            </summary>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.HistoryList.Next">
            <summary>
            浏览后一历史记录。
            </summary>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.HistoryList.GetLastMapParam(System.String)">
            <summary>
            获取指定地图名称的最后一个历史记录。
            </summary>
            <param name="mapName">地图名称</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.HistoryList.Current">
            <summary>
            获取最新的历史列表中的地图对象。
            </summary>
            <returns>返回地图对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.HistoryList.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            解序列化。
            </summary>
            <param name="info">序列化对象</param>
            <param name="context">上下文</param>
        </member>
        <member name="M:SuperMap.IS.Web.HistoryList.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            序列化参数。
            </summary>
            <param name="info">序列化对象</param>
            <param name="context">上下文</param>
        </member>
        <member name="P:SuperMap.IS.Web.HistoryList.MaxLength">
            <summary>
            获取或设置历史记录的最大长度。
            </summary>
        </member>
        <member name="T:SuperMap.IS.Web.ClientAppBalancer">
            <summary>
            客户端应用程序均衡器。
            </summary>
            <remarks>
            客户端应用程序均衡器支持传入多个服务地址数组， 但不支持以逗号分隔的多地址访问。
            <para>多地址参数只支持对多个集群服务的容错处理和简单的随机分配。</para>
            <para>因此设置多地址参数时，应当只传入多个集群服务的地址，默认使用大于等于10000的端口作为集群服务。
            例如，下列代码将不能如所期望的方式运行(C#)：
            <code>
            ClientAppBalancer.Instance.ConnectRemoteService(RemotingProtocol.Tcp, new string[] { "mapServerA", "mapServerB" }, 8800, "World");
            </code>
            而只会等效于如下代码(C#)：
            <code>
            ClientAppBalancer.Instance.ConnectRemoteService(RemotingProtocol.Tcp, "mapServerA", 8800, "World");
            </code>
            如下代码由于端口号大于10000，因此将会执行多集群容错处理而进行重试连接：
            <code>
            ClientAppBalancer.Instance.ConnectRemoteService(RemotingProtocol.Tcp, new string[] { "clusterServerA", "clusterServerB" }, 16000, "World");
            </code>
            首先将随机选择一个集群服务进行连接，如果该集群服务不能连接或者未发布指定的地图，则将自动尝试连接另一集群服务，直至找到满足要求的服务或者所有集群服务已经全部遍历。</para>
            <para>请注意其中由于端口号参数的不同而导致的行为差异。</para>
            </remarks>
        </member>
        <member name="F:SuperMap.IS.Web.ClientAppBalancer.AppBalancer">
            <summary>
            AppBalancer远程对象
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.ClientAppBalancer.RemotedObjectUri">
            <summary>
            远程对象URL地址
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.ClientAppBalancer.BalancerService">
            <summary>
            AppBalancer远程对象名称
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.ClientAppBalancer.ServicePoolService">
            <summary>
            ServicePool远程对象名称
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.ClientAppBalancer.Repository">
            <summary>
            AppLinker缓存
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.ClientAppBalancer.s_instance">
            <summary>
            ClientAppBalancer实例
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.ClientAppBalancer.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.ClientAppBalancer.ConnectRemoteService(SuperMap.IS.Web.RemotingProtocol,System.String,System.Int32,System.String)">
            <summary>
            连接远程服务。
            如果已经连接过，就不需要重新连接了。通过连接远程服务，返回一个连接对象。
            </summary>
            <param name="protocol">协议</param>
            <param name="address">地址</param>
            <param name="port">端口</param>
            <param name="mapName">地图名称</param>
            <returns>后台应用的连接器</returns>
            <remarks>多地址参数只支持对集群服务的容错处理和简单的随机分配，详细信息请参见<see cref="T:SuperMap.IS.Web.ClientAppBalancer"/></remarks>
        </member>
        <member name="M:SuperMap.IS.Web.ClientAppBalancer.ConnectRemoteService(SuperMap.IS.Web.RemotingProtocol,System.String[],System.Int32,System.String)">
            <summary>
            连接远程服务。
            如果已经连接过，就不需要重新连接了。通过连接远程服务，返回一个连接对象。
            </summary>
            <param name="protocol">协议</param>
            <param name="addresses">地址</param>
            <param name="port">端口</param>
            <param name="mapName">地图名称</param>
            <returns>后台应用的连接器</returns>
            <remarks>多地址参数只支持对集群服务的容错处理和简单的随机分配，详细信息请参见<see cref="T:SuperMap.IS.Web.ClientAppBalancer"/></remarks>
        </member>
        <member name="M:SuperMap.IS.Web.ClientAppBalancer.ConnectRemoteServices(SuperMap.IS.Web.RemotingProtocol,System.String,System.Int32,System.String)">
            <summary>
            获取后台应用的连接器列表。
            </summary>
            <param name="protocol">协议</param>
            <param name="address">地址</param>
            <param name="port">端口</param>
            <param name="mapName">地图名</param>
            <returns>后台应用的连接器列表</returns>
            <remarks>多地址参数只支持对集群服务的容错处理和简单的随机分配，详细信息请参见<see cref="T:SuperMap.IS.Web.ClientAppBalancer"/></remarks>
        </member>
        <member name="M:SuperMap.IS.Web.ClientAppBalancer.ConnectRemoteServices(SuperMap.IS.Web.RemotingProtocol,System.String[],System.Int32,System.String)">
            <summary>
            获取后台应用的连接器列表。
            </summary>
            <param name="protocol">协议</param>
            <param name="addresses">地址</param>
            <param name="port">端口</param>
            <param name="mapName">地图名称</param>
            <returns>后台应用的连接器列表</returns>
            <remarks>多地址参数只支持对集群服务的容错处理和简单的随机分配，详细信息请参见<see cref="T:SuperMap.IS.Web.ClientAppBalancer"/></remarks>
        </member>
        <member name="M:SuperMap.IS.Web.ClientAppBalancer.GetRemoteMapList(SuperMap.IS.Web.RemotingProtocol,System.String,System.Int32)">
            <summary>
            获取远程地图列表。
            </summary>
            <param name="protocol">协议</param>
            <param name="address">地址</param>
            <param name="port">端口</param>
            <returns>地图列表</returns>
            <remarks>多地址参数只支持对集群服务的容错处理和简单的随机分配，详细信息请参见<see cref="T:SuperMap.IS.Web.ClientAppBalancer"/></remarks>
        </member>
        <member name="M:SuperMap.IS.Web.ClientAppBalancer.GetRemoteMapList(SuperMap.IS.Web.RemotingProtocol,System.String[],System.Int32)">
            <summary>
            获取远程地图列表。
            </summary>
            <param name="protocol">协议</param>
            <param name="addresses">地址</param>
            <param name="port">群集端口</param>
            <returns>加入群集的所有服务器提供的地图列表</returns>
            <remarks>多地址参数只支持对集群服务的容错处理和简单的随机分配，详细信息请参见<see cref="T:SuperMap.IS.Web.ClientAppBalancer"/></remarks>
        </member>
        <member name="M:SuperMap.IS.Web.ClientAppBalancer.ConnectRemoteService(SuperMap.IS.Web.RemotingProtocol,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            连接远程服务。
            如果已经连接过，就不需要重新连接了。通过连接远程服务，返回一个连接对象。
            </summary>
            <param name="protocol">协议</param>
            <param name="address">地址</param>
            <param name="port">端口</param>
            <param name="mapName">地图名称</param>
            <param name="sendTimeout">群集客户端超时设置,单位秒</param>
            <returns>后台应用的连接器</returns>
            <remarks>
            多地址参数只支持对集群服务的容错处理和简单的随机分配，详细信息请参见<see cref="T:SuperMap.IS.Web.ClientAppBalancer"/>描述。
            <para>超时设置只支持使用集群服务时对超时的控制。</para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.ClientAppBalancer.ConnectRemoteService(SuperMap.IS.Web.RemotingProtocol,System.String[],System.Int32,System.String,System.Int32)">
            <summary>
            连接远程服务。
            如果已经连接过，就不需要重新连接了。通过连接远程服务，返回一个连接对象。
            </summary>
            <param name="protocol">协议</param>
            <param name="addresses">地址</param>
            <param name="port">端口</param>
            <param name="mapName">地图名称</param>
            <param name="sendTimeout">群集客户端超时设置,单位秒</param>
            <returns>后台应用的连接器</returns>
            <remarks>多地址参数只支持对集群服务的容错处理和简单的随机分配，详细信息请参见<see cref="T:SuperMap.IS.Web.ClientAppBalancer"/></remarks>
            <remarks>超时设置只支持使用集群服务时对超时的控制。</remarks>
        </member>
        <member name="M:SuperMap.IS.Web.ClientAppBalancer.ConnectRemoteServices(SuperMap.IS.Web.RemotingProtocol,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            获取集群环境下后台应用的连接器列表。
            </summary>
            <param name="protocol">协议</param>
            <param name="address">地址</param>
            <param name="port">端口</param>
            <param name="mapName">地图名</param>
            <param name="sendTimeout">群集客户端超时设置,单位秒</param>
            <returns>后台应用的连接器列表</returns>
            <remarks>
            <para>本方法将返回指定服务器上所有发布了指定地图的后台服务连接数组，而<see cref="M:SuperMap.IS.Web.ClientAppBalancer.ConnectRemoteService(SuperMap.IS.Web.RemotingProtocol,System.String,System.Int32,System.String)"/>只返回一个后台服务连接。 </para>
            <para>多地址参数只支持对集群服务的容错处理和简单的随机分配，详细信息请参见<see cref="T:SuperMap.IS.Web.ClientAppBalancer"/>描述。</para>
            <para>超时设置只支持使用集群服务时对超时的控制。</para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.ClientAppBalancer.ConnectRemoteServices(SuperMap.IS.Web.RemotingProtocol,System.String[],System.Int32,System.String,System.Int32)">
            <summary>
            获取后台应用的连接器列表。
            </summary>
            <param name="protocol">协议</param>
            <param name="addresses">地址</param>
            <param name="port">端口</param>
            <param name="mapName">地图名</param>
            <param name="sendTimeout">群集客户端超时设置,单位秒</param>
            <returns>后台应用的连接器列表</returns>
            <remarks>多地址参数只支持对集群服务的容错处理和简单的随机分配，详细信息请参见<see cref="T:SuperMap.IS.Web.ClientAppBalancer"/></remarks>
            <remarks>超时设置只支持使用集群服务时对超时的控制。</remarks>
        </member>
        <member name="M:SuperMap.IS.Web.ClientAppBalancer.GetRemoteMapList(SuperMap.IS.Web.RemotingProtocol,System.String,System.Int32,System.Int32)">
            <summary>
            获取远程地图列表。
            </summary>
            <param name="protocol">协议</param>
            <param name="address">地址</param>
            <param name="port">端口</param>
            <param name="sendTimeout">群集客户端超时设置,单位秒</param>
            <returns>地图列表</returns>
            <remarks>多地址参数只支持对集群服务的容错处理和简单的随机分配，详细信息请参见<see cref="T:SuperMap.IS.Web.ClientAppBalancer"/></remarks>
            <remarks>超时设置只支持使用集群服务时对超时的控制。</remarks>
        </member>
        <member name="M:SuperMap.IS.Web.ClientAppBalancer.GetRemoteMapList(SuperMap.IS.Web.RemotingProtocol,System.String[],System.Int32,System.Int32)">
            <summary>
            获取群集服务器信息。
            </summary>
            <param name="protocol">协议</param>
            <param name="addresses">地址</param>
            <param name="port">群集端口</param>
            <param name="sendTimeout">群集客户端超时设置,单位秒</param>
            <returns>加入群集的所有服务器提供的地图列表</returns>
            <remarks>多地址参数只支持对集群服务的容错处理和简单的随机分配，详细信息请参见<see cref="T:SuperMap.IS.Web.ClientAppBalancer"/></remarks>
            <remarks>超时设置只支持使用集群服务时对超时的控制。</remarks>
        </member>
        <member name="P:SuperMap.IS.Web.ClientAppBalancer.Instance">
            <summary>
            ClientAppBalancer实例。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.Utility.GetRandomOrderedNumbers(System.Int32)">
            <summary>
            得到一组随机排序的数。例如参数为 3，一个可能的返回值为 {2, 0, 1}。
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="T:SuperMap.IS.Web.HttpLinker">
            <summary>
            Http协议后台应用的连接器。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.HttpLinker.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.HttpLinker.#ctor(System.String)">
            <summary>
            构造函数。
            </summary>
            <param name="url"> URL 地址</param>
        </member>
        <member name="M:SuperMap.IS.Web.HttpLinker.Create(System.String)">
            <summary>
            创建Http协议后台应用的连接器。
            </summary>
            <param name="url">URL地址</param>
            <returns>后台应用的连接器</returns>
        </member>
        <member name="T:SuperMap.IS.Web.RemotingProtocol">
            <summary>
            远程调用协议。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.RemotingProtocol.Tcp">
            <summary>
            Tcp协议。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.RemotingProtocol.Http">
            <summary>
            Http协议。
            </summary>
        </member>
        <member name="T:SuperMap.IS.Web.TcpMap">
            <summary>
            和地图服务器以 Tcp 的连接方式进行通讯的对象。请通过<see cref="M:SuperMap.IS.Web.TcpMap.Create(System.String,System.Int32)"/>静态系列重载方法进行创建。
            </summary>
            <remarks>
            <para>
            1、TcpMap 支持地图服务器集群，以提供更好的负载均衡能力与容错能力，大部分服务请求均能在集群环境下进行很好的处理，但由于地图服务器端状态的存在
            以及某些服务行为的不等幂性，当使用了集群时，一些操作会按照一定的规则进行处理，例如：
            <list type="bullet">
            <item><description>如果地图参数存在高亮信息，则会首选前次相关的高亮所在的远程地图应用服务器。</description></item>
            <item><description>如果调用的是数据编辑相关操作(包括叠加分析、栅格聚合等可能会对数据进行更新的操作)，则会首选第一个与地图参数匹配的远程地图应用服务器。</description></item>
            <item><description>如果调用的是其它不等幂操作（例如更新网络节点权值、清除地图缓存等），则会对所有发布该地图的远程地图应用服务器进行该操作，以尽量保证各个节点的一致性。</description></item>
            </list>
            数据编辑通常来说不是一个可集群的操作（除非集群节点使用同一数据源），请谨慎使用在集群环境下的数据编辑操作。
            </para>
            <para>2、TcpMap 的地图相关操作均是以当前地图参数为基础，操作返回的地图参数也保存在当前地图参数中。
            因此，在调用这类方法（例如<see cref="M:SuperMap.IS.Web.TcpMap.Zoom(SuperMap.IS.Utility.MapCoord,System.Double)"/>、<see cref="M:SuperMap.IS.Web.TcpMap.Pan(System.Double,System.Double)"/>等）之前，请先设置TcpMap  的当前地图参数。设置当前地图参数的方法如下：</para>
            <para>方法一：可以通过调用<see cref="M:SuperMap.IS.Web.TcpMap.SetCurrentMapParam(SuperMap.IS.Utility.MapParam)"/>来手动设置；</para>
            <para>方法二：可以通过调用地图操作（例如<see cref="M:SuperMap.IS.Web.TcpMap.GetDefaultMapImage"/>、<see cref="M:SuperMap.IS.Web.TcpMap.GetMapImage(SuperMap.IS.Utility.MapParam)"/>等）将返回的地图参数自动保存到当前地图参数中。</para>
            <para>3、由于 TcpMap 保存了状态，因此，不应在多个线程中使用同一个 TcpMap 对象。</para>
            </remarks>
        </member>
        <member name="F:SuperMap.IS.Web.TcpMap.RemoteMapServiceObject">
            <summary>
            地图服务远程对象名称。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.TcpMap.RemoteDataServiceObject">
            <summary>
            数据服务远程对象名称。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.TcpMap.RemoteSpatialAnalystServiceObject">
            <summary>
            空间分析服务远程对象名称。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.TcpMap.RemoteNetworkAnalystServiceObject">
            <summary>
            网络分析服务远程对象名称。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.TcpMap.RemoteCustomServiceObject">
            <summary>
            自定义服务远程对象名称。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.TcpMap.RemoteAppServiceObject">
            <summary>
            应用程序服务远程对象名称。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.TcpMap.RemoteMetadataServiceObject">
            <summary>
            元数据服务远程对象名称。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.TcpMap.RemoteAnalyst3DServiceObject">
            <summary>
            三维分析服务远程对象名称。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.TcpMap.RemoteCoordTransformationServiceObject">
            <summary>
            坐标转换服务远程对象名称。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.TcpMap.RemoteGridAnalystServiceObject">
            <summary>
            栅格分析服务远程对象名称。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.#cctor">
            <summary>
            静态构造函数。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.#ctor(SuperMap.IS.Web.TcpLinker)">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.#ctor(System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="address">服务器地址</param>
            <param name="port">服务端口</param>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.#ctor(System.String,System.Int32,System.Collections.IDictionary)">
            <summary>
            构造函数
            </summary>
            <param name="address">服务器地址</param>
            <param name="port">服务端口</param>
            <param name="sessionContainer">会话容器</param>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.#ctor(System.String[],System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="addresses">服务器地址数组，必须是集群下才能使用该接口</param>
            <param name="port">服务端口</param>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.#ctor(System.String[],System.Int32,System.Collections.IDictionary)">
            <summary>
            构造函数
            </summary>
            <param name="addresses">服务器地址数组，必须是集群下才能使用该接口</param>
            <param name="port">服务端口</param>
            <param name="sessionContainer">会话容器</param>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Create(System.String,System.Int32,System.Collections.IDictionary)">
            <summary>
            创建一个 TcpMap 对象的实例。
            </summary>
            <param name="address">服务器地址，如果启用了群集，则支持以逗号分隔的多地址访问，或者使用重载函数直接传入数组地址</param>
            <param name="port">服务端口</param>
            <param name="sessionContainer">会话状态容器</param>
            <returns>TcpMap 对象。</returns>
            <remarks>多地址参数只支持对集群服务的容错处理和简单的随机分配。</remarks>
            <para>我们默认使用大于等于10000的端口作为集群服务，因此设置多地址参数时，端口号必须大于等于10000。如设置为TcpMap.Create("mapServerA, mapServerB", 8800)则默认使用mapServerA:8800作为地图服务器，正确的设置方法应该为TcpMap.Create("clusterMapServerA, clusterMapServerB", 16000)，或将"clusterMapServerA, clusterMapServerB"作为字符串数组传入</para>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Create(System.String,System.Int32)">
            <summary>
            创建一个 TcpMap 对象的实例。
            </summary>
            <param name="address">服务器地址，如果启用了群集，则支持以逗号分隔的多地址访问，或者使用重载函数直接传入数组地址</param>
            <param name="port">服务端口</param>
            <returns>TcpMap 对象。</returns>
            <remarks>多地址参数只支持对集群服务的容错处理和简单的随机分配。</remarks>
            <para>我们默认使用大于等于10000的端口作为集群服务，因此设置多地址参数时，端口号必须大于等于10000。如设置为TcpMap.Create("mapServerA, mapServerB", 8800)则默认使用mapServerA:8800作为地图服务器，正确的设置方法应该为TcpMap.Create("clusterMapServerA, clusterMapServerB", 16000)，或将"clusterMapServerA, clusterMapServerB"作为字符串数组传入</para>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Create(System.String[],System.Int32,System.Collections.IDictionary)">
            <summary>
            创建一个 TcpMap 对象的实例。
            </summary>
            <param name="addresses">服务器地址</param>
            <param name="port">服务端口</param>
            <param name="sessionContainer">会话状态容器</param>
            <returns>TcpMap 对象。</returns>
            <remarks>多地址参数只支持对集群服务的容错处理和简单的随机分配。</remarks>
            <para>我们默认使用大于等于10000的端口作为集群服务，因此设置多地址参数时，端口号必须大于等于10000。如设置为TcpMap.Create("mapServerA, mapServerB", 8800)则默认使用mapServerA:8800作为地图服务器，正确的设置方法应该为TcpMap.Create("clusterMapServerA, clusterMapServerB", 16000)，或将"clusterMapServerA, clusterMapServerB"作为字符串数组传入</para>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Create(System.String[],System.Int32)">
            <summary>
            创建一个 TcpMap 对象的实例。
            </summary>
            <param name="addresses">服务器地址数组</param>
            <param name="port">服务端口</param>
            <returns>TcpMap 对象。</returns>
            <remarks>多地址参数只支持对集群服务的容错处理和简单的随机分配。</remarks>
            <para>我们默认使用大于等于10000的端口作为集群服务，因此设置多地址参数时，端口号必须大于等于10000。如设置为TcpMap.Create("mapServerA, mapServerB", 8800)则默认使用mapServerA:8800作为地图服务器，正确的设置方法应该为TcpMap.Create("clusterMapServerA, clusterMapServerB", 16000)，或将"clusterMapServerA, clusterMapServerB"作为字符串数组传入</para>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Create(SuperMap.IS.Web.TcpLinker)">
            <summary>
            创建一个 TcpMap 对象的实例。
            </summary>
            <param name="tcpLinker">Tcp 协议后台应用的连接器</param>
            <returns>TcpMap 对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetRemoteServices``1(System.String)">
            <summary>
            获取所有地图服务远程对象.
            </summary>
            <remarks>地图名为空时，取所有地图服务。</remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetRemoteService``1(SuperMap.IS.Utility.MapParam)">
            <summary>
            根据mapParam参数获取远程服务。
            </summary>
            <typeparam name="T">远程服务类型。</typeparam>
            <param name="mapParam">地图参数。</param>
            <returns></returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetRemoteService``1(SuperMap.IS.Utility.MapParam,System.Boolean)">
            <summary>
            根据mapParam参数获取远程服务。
            </summary>
            <typeparam name="T">远程服务类型。</typeparam>
            <param name="mapParam">地图参数。</param>
            <param name="getFirstOnly">是否不进行负载均衡，只取得第一个远程服务。</param>
            <returns></returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetRemoteService``1">
            <summary>
            获取一个当前最小负载的远程服务。
            </summary>
            <typeparam name="T">远程服务类型。</typeparam>
            <returns></returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetRemoteService``1(System.String)">
            <summary>
            根据地图名参数获取当前最小负载的远程服务。如果地图名为空，就只获取第一个远程服务。
            </summary>
            <typeparam name="T">远程服务类型。</typeparam>
            <param name="mapName">地图名。</param>
            <returns></returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetRemoteService``1(System.String,System.Boolean)">
            <summary>
            根据地图名参数和是否只取第一个服务来获取远程服务。
            </summary>
            <typeparam name="T">远程服务类型。</typeparam>
            <param name="mapName">地图名。</param>
            <param name="getFirstOnly">是否不进行负载均衡，只取得第一个远程服务。</param>
            <returns></returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetRemoteService``1(System.String,System.String,System.Boolean)">
            <summary>
            获取远程服务。
            </summary>
            <typeparam name="T">远程服务类型。</typeparam>
            <param name="mapName">地图名。</param>
            <param name="userToken">用户标识。</param>
            <param name="getFirstOnly">是否不进行负载均衡，只取得第一个远程服务。</param>
            <returns></returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetTcpLinker(System.String,System.String,System.Boolean)">
            <summary>
            获取远程服务的连接器。
            </summary>
            <param name="mapName">地图名。</param>
            <param name="userToken">用户标识。</param>
            <param name="getFirstOnly">是否不进行负载均衡，只取得第一个连接器。</param>
            <returns></returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetMapNames">
            <summary>
            获取地图列表。
            </summary>
            <returns>返回地图列表。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.SaveStatusToHistory">
            <summary>
            将当前状态保存至历史中，只有当 AutoSaveHistory 为 false 时才需要调用本方法。
            </summary>
            <remarks>
            只有当 AutoSaveHistory 为 false 时，对本方法的调用才会生效。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.CreateHistoryList">
            <summary>
            创建历史列表 Session。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.AddMapImageToHistory(SuperMap.IS.Utility.MapImage)">
            <summary>
            把 MapImage 地图对象添加到历史中。
            </summary>
            <param name="mapImage">地图对象</param>
            <remarks>
            只有当 mapImage 参数的 ReturnMapParam 属性的 ReturnImage 属性为 true，并且 mapImage 的 MapUrl 属性不为空时，才保存该 MapImage 到历史中。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ViewPrevious">
            <summary>
            回到前一视图。
            </summary>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ViewNext">
            <summary>
            回到后一视图。
            </summary>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetMapImage(SuperMap.IS.Utility.MapParam)">
            <summary>
            根据客户端提交地图参数取得地图图片。
            </summary>
            <param name="mapParam">地图参数</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetMapImage(SuperMap.IS.Utility.MapParam,System.Int32)">
            <summary>
            根据地图参数的描述获取指定DPI的地图。
            </summary>
            <param name="mapParam">地图参数</param>
            <param name="imageDpi">图像的DPI（每英寸点数）分辨率，默认为200dpi，建议在72－600dpi之间。</param>
            <returns>地图对象</returns>
            <remarks>
            对该接口的调用既不影响TcpMap的当前状态，也不会导致TcpMap的地图历史记录的变化。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetCachedMapImage(SuperMap.IS.Utility.MapParam)">
            <summary>
            根据地图参数的描述获取缓存过的地图。
            </summary>
            <param name="mapParam">地图参数</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.CheckCachedMapImage(SuperMap.IS.Utility.MapParam)">
            <summary>
            检查MapParam中描述的地图是否已经在地图服务中进行了缓存。
            </summary>
            <param name="mapParam">通过该参数设置要检验的地图的相关参数，如地图的中心点，比例尺以及显示范围等。</param>
            <returns>true表示待检查的地图已经进行了缓存。false表示没有缓存。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetDefaultMapImage">
            <summary>
            获取默认地图。
            </summary>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetDefaultMapImage(System.String,System.Int32,System.Int32)">
            <summary>
            根据地图名称、地图大小获取地图。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="mapWidth">地图宽度</param>
            <param name="mapHeight">地图高度</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ViewEntire(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            指定地图名，图层，地图大小进行全幅显示。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="layerName">图层名称</param>
            <param name="mapWidth">地图宽度</param>
            <param name="mapHeight">地图高度</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ViewEntire(System.String)">
            <summary>
            全幅显示。
            </summary>
            <param name="layerName">图层名称</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ViewByBounds(SuperMap.IS.Utility.MapRect)">
            <summary>
            根据地理坐标范围显示地图。
            </summary>
            <param name="mapRect">地理坐标范围</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ViewByBounds(SuperMap.IS.Utility.PixelRect)">
            <summary>
            根据像素坐标范围显示。
            </summary>
            <param name="pixelRect">像素坐标范围，以当前视图范围的左上角为坐标系原点。</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ZoomIn(SuperMap.IS.Utility.MapRect)">
            <summary>
            根据地理坐标范围进行放大。
            </summary>
            <param name="mapRect">地理坐标范围。</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ZoomIn(SuperMap.IS.Utility.PixelRect)">
            <summary>
            根据像素坐标范围进行放大。
            </summary>
            <param name="pixelRect">像素坐标范围，以当前视图范围的左上角为坐标系原点。</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ZoomOut(SuperMap.IS.Utility.MapRect)">
            <summary>
            根据地理坐标范围进行缩小。
            </summary>
            <param name="mapRect">地理坐标范围。</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ZoomOut(SuperMap.IS.Utility.PixelRect)">
            <summary>
            根据像素坐标范围进行缩小。
            </summary>
            <param name="pixelRect">像素坐标范围，以当前视图范围的左上角为坐标系原点。</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ViewByScale(SuperMap.IS.Utility.MapCoord,System.Double)">
            <summary>
             指定中心点比例尺显示。
            </summary>
            <param name="center">中心点</param>
            <param name="scale">比例尺</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Zoom(SuperMap.IS.Utility.MapCoord,System.Double)">
            <summary>
            按照指定地理坐标中心点和缩放比例进行地图缩放。 
            </summary>
            <param name="center">地理坐标中心点</param>
            <param name="ratio">缩放比率</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Zoom(System.Double)">
            <summary>
            按照一定的比例进行地图缩放，中心点保持不变。
            </summary>
            <param name="ratio">缩放比率</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Zoom(SuperMap.IS.Utility.PixelCoord,System.Double)">
            <summary>
            根据中心店和缩放比率进行地图缩放。
            </summary>
            <param name="center">像素坐标中心点，以当前视图范围的左上角为坐标系原点。</param>
            <param name="ratio">缩放比率。必须是大于0的数。</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Pan(System.Double,System.Double)">
            <summary>
            平移。
            </summary>
            <param name="offsetX">地理坐标X偏移量</param>
            <param name="offsetY">地理坐标Y偏移量</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.PanByPixel(System.Int32,System.Int32)">
            <summary>
            平移。
            </summary>
            <param name="offsetX">像素坐标X偏移量，向右为正方向。</param>
            <param name="offsetY">像素坐标Y偏移量，向下为正方向。</param>
            <returns>地图对象</returns>
            <remarks>参数中的像素坐标是以当前视图范围的左上角为坐标系原点，向右向下为正方向。</remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.MeasureDistance(SuperMap.IS.Utility.MapCoord[],SuperMap.IS.Utility.Highlight)">
            <summary>
            沿线距离量算。
            </summary>
            <param name="mapCoords">组成沿线的地理坐标数组</param>
            <param name="highlight">是否高亮，以及高亮显示风格设置</param>
            <returns>量算结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.MeasureDistance(SuperMap.IS.Utility.MapCoord[],System.Boolean)">
            <summary>
            距沿线离量算。
            </summary>
            <param name="mapCoords">组成沿线的地理坐标数组</param>
            <param name="isHighlight">是否高亮显示量算路线</param>
            <returns>量算结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.MeasureDistance(SuperMap.IS.Utility.MapCoord[])">
            <summary>
            距离量算。
            </summary>
            <param name="mapCoords">组成沿线的地理坐标数组</param>
            <returns>量算结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.MeasureDistance(SuperMap.IS.Utility.PixelCoord[],SuperMap.IS.Utility.Highlight)">
            <summary>
            距离量算。
            </summary>
            <param name="pixelCoords">组成沿线的像素坐标数组</param>
            <param name="highlight">是否高亮，以及高亮显示风格设置</param>
            <returns>量算结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.MeasureDistance(SuperMap.IS.Utility.PixelCoord[],System.Boolean)">
            <summary>
            沿线距离量算。
            </summary>
            <param name="pixelCoords">组成沿线的像素坐标数组</param>
            <param name="isHighlight">是否高亮显示量算结果</param>
            <returns>量算结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.MeasureDistance(SuperMap.IS.Utility.PixelCoord[])">
            <summary>
            距离量算。
            </summary>
            <param name="pixelCoords">组成沿线的像素坐标数组</param>
            <returns>量算结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.MeasureArea(SuperMap.IS.Utility.MapCoord[],SuperMap.IS.Utility.Highlight)">
            <summary>
            面积量算。
            </summary>
            <param name="mapCoords">组成量算区域的地理坐标数组</param>
            <param name="highlight">是否高亮，以及高亮显示风格设置</param>
            <returns>量算结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.MeasureArea(SuperMap.IS.Utility.MapCoord[],System.Boolean)">
            <summary>
            面积量算。
            </summary>
            <param name="mapCoords">组成量算区域的地理坐标数组</param>
            <param name="isHighlight">是否高亮显示量算结果</param>
            <returns>量算结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.MeasureArea(SuperMap.IS.Utility.MapCoord[])">
            <summary>
            面积量算。
            </summary>
            <param name="mapCoords">组成量算区域的地理坐标数组</param>
            <returns>量算结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.MeasureArea(SuperMap.IS.Utility.PixelCoord[],SuperMap.IS.Utility.Highlight)">
            <summary>
            面积量算。
            </summary>
            <param name="pixelCoords">组成量算区域的像素坐标点数组</param>
            <param name="highlight">是否高亮，以及高亮显示风格设置</param>
            <returns>量算结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.MeasureArea(SuperMap.IS.Utility.PixelCoord[],System.Boolean)">
            <summary>
            面积量算。
            </summary>
            <param name="pixelCoords">组成量算区域的像素坐标点数组</param>
            <param name="isHighlight">是否高亮显示量算结果</param>
            <returns>量算结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.MeasureArea(SuperMap.IS.Utility.PixelCoord[])">
            <summary>
            面积量算。
            </summary>
            <param name="pixelCoords">组成量算区域的像素坐标点数组</param>
            <returns>量算结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetOverview(SuperMap.IS.Utility.Overview)">
            <summary>
            取得鹰眼。
            </summary>
            <param name="overview">鹰眼参数</param>
            <returns>鹰眼对象</returns>
            <example>
            	以下假设已经取得了一个 MapImage 实例 mapImage，一个 MapService 实例 mapService，
             然后从 mapService 去获取对应于该 mapImage 的一个 Overview 对象的实例。
            	<code>
            	Overview overview = new Overview();
            	overview.MapName = mapImage.ReturnMapParam.MapName;
            	overview.Viewer = mapImage.ReturnMapParam.Viewer;
            	overview.ViewBounds = mapImage.ReturnMapParam.ViewBounds;
            	overview = mapService.GetOverview(overview);
            	string mapUrl = overview.Url;
            	</code>
            </example>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetLegend(SuperMap.IS.Utility.MapParam,System.Boolean,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取图例。
            </summary>
            <param name="mapParam">地图参数</param>
            <param name="isNeedTitle">是否需要标题</param>
            <param name="bgColorValue">图片背景色的值。为 R + G*256 + B*256*256。</param>
            <param name="foreColorValue">图片前景色的值。为 R + G*256 + B*256*256。</param>
            <param name="picWidth">图片的期望宽度。实际生成的图片宽度将不小于该值。</param>
            <returns>图例的 URL 地址</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetLegend(SuperMap.IS.Utility.MapParam,System.Boolean,System.Int32,System.Int32)">
            <summary>
            获取图例。
            </summary>
            <param name="mapParam">地图参数</param>
            <param name="isNeedTitle">是否需要标题</param>
            <param name="bgColorValue">图片背景色的值。为 R + G*256 + B*256*256。</param>
            <param name="foreColorValue">图片前景色的值。为 R + G*256 + B*256*256。</param>
            <returns>图例的 URL 地址</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetResource(System.String,SuperMap.IS.Utility.ResourceParam)">
            <summary>
            获取资源图片
            </summary>
            <param name="mapName">地图名</param>
            <param name="resourceParam">资源参数</param>
            <returns>图片地址</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetTrackingLayerImage">
            <summary>
            获取TrackingLayer的图片
            </summary>
            <returns>MapImage</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetGeometryImage(System.String,SuperMap.IS.Utility.GeometryParam)">
            <summary>
            根据几何对象参数获取几何对象图片
            </summary>
            <param name="mapName">地图名</param>
            <param name="geometryParam">几何对象参数</param>
            <returns>几何对象图片</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.QueryBySql(SuperMap.IS.Utility.QueryParam)">
            <summary>
            Sql查询。
            </summary>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Find(SuperMap.IS.Utility.QueryParam)">
            <summary>
            在全图范围内查找所有几何对象的所有属性字段中与输入字符串完全匹配的记录。
            </summary>
            <remarks>
            该方法是不能指定被查属性字段的。它查找的范围是查询图层中所有字段中的值。
            其中在查询参数中的 WhereClause 字段直接赋予要查询的匹配的文本值,例如,要查询某一图层所有字段中值为 "China" 的记录,则
            将对应 QueryLayer 的 WhereClause 字段值设置为 "China"。
            <para>
            尤其要注意的是，本查询是字符串完全匹配查询。要进行模糊查询及通配符查询，请使用 Query 相关接口。
            </para>
            </remarks>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.QueryByDistance(SuperMap.IS.Utility.PixelCoord,System.Int32,SuperMap.IS.Utility.QueryParam)">
            <summary>
            查找一定距离内（圆内）所有的对象，以像素坐标为单位。
            </summary>
            <param name="queryPoint">像素坐标中心点</param>
            <param name="pixelDistance">像素坐标距离容限</param>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.QueryByDistance(SuperMap.IS.Utility.MapCoord,System.Double,SuperMap.IS.Utility.QueryParam)">
            <summary>
            查找一定距离内（圆内）所有的对象，以地理坐标为单位。
            </summary>
            <param name="queryPoint">地理坐标中心点</param>
            <param name="mapDistance">地图范围</param>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.FindNearest(SuperMap.IS.Utility.PixelCoord,System.Double,SuperMap.IS.Utility.QueryParam)">
            <summary>
            查找最近的对象，以像素坐标为单位。
            </summary>
            <remarks>
            <para>
            在进行查找之前，首先要设置查找参数<see cref="T:SuperMap.IS.Utility.QueryParam">QueryParam</see>.
            返回的结果通过<see cref="T:SuperMap.IS.Utility.ResultSet">ResultSet</see>来获得。
            </para>
            <para>
            在线图层或面图层中,这里的距离指的从指定事件点到目标对象边线的最短长度。
            </para>
            <para>
            FindNearest 与 FindNearestWithBounds 的区别：FindNearest 是以事件点为圆心，以tolerance为半径的圆的范围内进行地物的查找。而 FindNearestWithBounds 以事件点为中心，以2倍的tolerance为边长的矩形范围内进行地物的查找。
            </para>
            </remarks>
            <param name="pixelCoord">像素坐标中心点</param>
            <param name="tolerance">查询范围的最大距离容限值</param>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.FindNearest(SuperMap.IS.Utility.PixelCoord,System.Int32,SuperMap.IS.Utility.QueryParam)">
            <summary>
            查找最近的对象，以象素坐标为单位。
            </summary>
            <remarks>
            <para>
            在进行查找之前，首先要设置查找参数<see cref="T:SuperMap.IS.Utility.QueryParam">QueryParam</see>.
            返回的结果通过<see cref="T:SuperMap.IS.Utility.ResultSet">ResultSet</see>来获得。
            </para>
            <para>
            在线图层或面图层中,这里的距离指的从指定事件点到目标对象边线的最短长度。
            </para>
            <para>
            FindNearest 与 FindNearestWithBounds 的区别：FindNearest 是以事件点为圆心，以tolerance为半径的圆的范围内进行地物的查找。而 FindNearestWithBounds 以事件点为中心，以2倍的tolerance为边长的矩形范围内进行地物的查找。
            </para>
            </remarks>
            <param name="pixelCoord">像素坐标中心点</param>
            <param name="pixelTolerance">查询范围的最大距离容限值,像素单位</param>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.FindNearest(SuperMap.IS.Utility.MapCoord,System.Double,SuperMap.IS.Utility.QueryParam)">
            <summary>
            查找最近的对象，以地理坐标为单位。
            </summary>
            <remarks>
            <para>
            在进行查找之前，首先要设置查找参数<see cref="T:SuperMap.IS.Utility.QueryParam">QueryParam</see>.
            返回的结果通过<see cref="T:SuperMap.IS.Utility.ResultSet">ResultSet</see>来获得。
            </para>
            <para>
            在线图层或面图层中,这里的距离指的从指定事件点到目标对象边线的最短长度。
            </para>
            <para>
            FindNearest 与 FindNearestWithBounds 的区别：FindNearest 是以事件点为圆心，以tolerance为半径的圆的范围内进行地物的查找。而 FindNearestWithBounds 以事件点为中心，以2倍的tolerance为边长的矩形范围内进行地物的查找。
            </para>
            </remarks>
            <param name="mapCoord">地理坐标中心点</param>
            <param name="maxDistance">查找范围的最大半径</param>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.FindNearestWithBounds(SuperMap.IS.Utility.PixelCoord,System.Int32,SuperMap.IS.Utility.QueryParam)">
            <summary>
            查找最近的对象，以像素坐标为单位。
            </summary>
            <remarks>
            <para>
            在进行查找之前，首先要设置查找参数<see cref="T:SuperMap.IS.Utility.QueryParam">QueryParam</see>.
            返回的结果通过<see cref="T:SuperMap.IS.Utility.ResultSet">ResultSet</see>来获得。
            </para>
            <para>
            在线图层或面图层中,这里的距离指的从指定事件点到目标对象边线的最短长度。
            </para>
            <para>
            FindNearest 与 FindNearestWithBounds 的区别：FindNearest 是以事件点为圆心，以tolerance为半径的圆的范围内进行地物的查找。而 FindNearestWithBounds 以事件点为中心，以2倍的tolerance为边长的矩形范围内进行地物的查找。
            </para>
            </remarks>
            <param name="pixelCoord">像素坐标中心点</param>
            <param name="pixelTolerance">查询范围的最大距离容限值,像素单位</param>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.FindNearestWithBounds(SuperMap.IS.Utility.MapCoord,System.Double,SuperMap.IS.Utility.QueryParam)">
            <summary>
            查找最近的对象，以地理坐标为单位。
            </summary>
            <remarks>
            <para>
            在进行查找之前，首先要设置查找参数<see cref="T:SuperMap.IS.Utility.QueryParam">QueryParam</see>.
            返回的结果通过<see cref="T:SuperMap.IS.Utility.ResultSet">ResultSet</see>来获得。
            </para>
            <para>
            在线图层或面图层中,这里的距离指的从指定事件点到目标对象边线的最短长度。
            </para>
            <para>
            FindNearest 与 FindNearestWithBounds 的区别：FindNearest 是以事件点为圆心，以tolerance为半径的圆的范围内进行地物的查找。而 FindNearestWithBounds 以事件点为中心，以2倍的tolerance为边长的矩形范围内进行地物的查找。
            </para>
            </remarks>
            <param name="mapCoord">地理坐标中心点</param>
            <param name="maxDistance">查找范围的最大半径</param>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.QueryByPoint(SuperMap.IS.Utility.MapCoord,System.Double,SuperMap.IS.Utility.QueryParam)">
            <summary>
            点选查询，以地理坐标为单位。
            </summary>
            <param name="mapCoord">地理坐标中心点</param>
            <param name="tolerance">地理坐标距离容限。不能小于0，建议取一个适中的值，比如5。</param>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.QueryByLine(SuperMap.IS.Utility.MapCoord[],SuperMap.IS.Utility.QueryParam,SuperMap.IS.Utility.SpatialQueryMode)">
            <summary>
            沿线查询。
            </summary>
            <remarks>
            <para>
            沿线查询是沿着一条指定的线路对该线路附近的对象进行查询，并返回满足查询条件的记录。
            </para>
            <para>
            在进行沿线查询之前，首先需要对查询参数<see cref="T:SuperMap.IS.Utility.QueryParam">SuperMap.IS.Utility.QueryParam类</see>进行
            设置。返回的查询结果通过<see cref="T:SuperMap.IS.Utility.ResultSet">SuperMap.IS.Utility.ResultSet</see>来获取。
            </para>
            </remarks>
            <param name="mapCoords">地理坐标点集</param>
            <param name="queryParam">查询参数</param>
            <param name="mode">查询模式</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.QueryByRect(SuperMap.IS.Utility.MapRect,SuperMap.IS.Utility.QueryParam)">
            <summary>
            矩形查询。
            </summary>
            <param name="mapRect">地理坐标范围</param>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.QueryByRect(SuperMap.IS.Utility.MapRect,SuperMap.IS.Utility.QueryParam,SuperMap.IS.Utility.SpatialQueryMode)">
            <summary>
            矩形查询。
            </summary>
            <param name="mapRect">地理坐标范围</param>
            <param name="queryParam">查询参数</param>
            <param name="mode">空间查询模式</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.QueryByPolygon(SuperMap.IS.Utility.MapCoord[],SuperMap.IS.Utility.QueryParam,SuperMap.IS.Utility.SpatialQueryMode)">
            <summary>
            多边形查询。
            </summary>
            <param name="mapCoords">地理坐标点集</param>
            <param name="queryParam">查询参数</param>
            <param name="mode">查询模式</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.QueryByGeometry(SuperMap.IS.Utility.Geometry,SuperMap.IS.Utility.QueryParam,SuperMap.IS.Utility.SpatialQueryMode)">
             <summary>
             空间几何对象查询。  
             </summary>
             <param name="geometry">空间对象</param>
             <param name="queryParam">查询参数</param>
             <param name="mode">空间查询模式</param>
             <returns>查询结果对象</returns>
             <remarks> 
             目前支持对点、线、多边形、文本、圆、位图等几何对象的空间查询。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetEntity(System.String,System.String,System.Int32)">
            <summary>
            根据对象的ID获取对象的坐标信息和属性信息。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="layerName">图层名称</param>
            <param name="id">对象的ID</param>
            <returns>返回的对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetEntities(System.String,System.String,System.Int32[])">
            <summary>
            根据对象的ID数组获取多个对象的坐标信息和属性信息。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="layerName">图层名称</param>
            <param name="ids">多个对象的ID数组</param>
            <returns>返回的对象数组</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetEntities(System.String,System.String,System.String)">
            <summary>
            根据 SQL 筛选条件获取多个对象的坐标信息和属性信息。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="layerName">图层名称</param>
            <param name="condition">多个对象的 SQL 筛选语句</param>
            <returns>返回的对象数组</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ClosestFacility(SuperMap.IS.Utility.MapCoord,SuperMap.IS.Utility.ProximityParam)">
            <summary>
            最近设施分析。
            </summary>
            <remarks>
            <para>
            最近设施分析是查找某一类地物中哪个（或哪些）地物对象与某一指定事件点之间具有最优行走路线的一种空间分析方法。这里指的最优路线是指网络图层中的
            道路路线，并且是根据<see cref="F:SuperMap.IS.Utility.ProximityParam.NetworkParams">
            ProximityParam.NetworkParams</see>设置网络分析的参数，包括设置路线通行的阻力（如距离、时间等）等。
            例如查找距离天安门（事件点）最近的银行的位置，这种需求就可以通过最近设施分析进行查找。
            </para>
            <para>
            需要注意的是，进行最近设施分析的空间数据中必须有网络图层。
            </para>
            <para>
            进行最近设施分析需要利用<see cref="T:SuperMap.IS.Utility.ProximityParam">SuperMap.IS.Utility.ProximityParam类</see>设置分析条件。
            包括设置网络分析参数<see cref="F:SuperMap.IS.Utility.ProximityParam.NetworkParams"/>、
            待查询的设施图层<see cref="F:SuperMap.IS.Utility.ProximityParam.FacilityLayer"/>等。
            </para>
            <para>
            最近设施分析的结果通过<see cref="T:SuperMap.IS.Utility.ProximityResult">SuperMap.IS.Utility.ProximityResult</see>来获取，最近设施分析的结果主要分为两个部分，
            首先就是最近路线的地图描述
            <see cref="F:SuperMap.IS.Utility.ProximityResult.MapResult">SuperMap.IS.Utility.ProximityResult.MapResult</see>，
            第二部分就是查找出的最近设施点的记录集<see cref="F:SuperMap.IS.Utility.ProximityResult.ReturnRecordset">SuperMap.IS.Utility.ProximityResult.ReturnRecordset</see>。
            </para>
            </remarks>
            <param name="eventPoint">事件点，比如要查找距离天安门最近的银行的位置，那么天安门就是事件点。</param>
            <param name="proximityParam">最近设施分析参数，包括要查找的设施点的点数、查询范围对应的最大半径、是否高亮显示分析效果图等。</param>
            <returns>返回的最近设施分析的结果，包括查询到的最近设施点的记录等。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.FindPath(SuperMap.IS.Utility.MapCoord[],SuperMap.IS.Utility.RouteParam)">
            <summary>
            根据关键点坐标进行最佳路径分析。
            </summary>
            <remarks>
            <para>
            最佳路径分析是指在网络数据集中查找从指定的起点到终点之间可行的线路中最优的行走线路以及距离。
            关键点就是指进行路径分析需要指定的的起点和终点。假如查找从故宫到颐和园怎样走距离最近或者所花的时间最短，就可以根据阻力字段的设置来进行最佳路径分析。
            </para>
            <para>需要注意的是，进行路径分析的空间数据中必须有网络图层。
            </para>
            <para>
            进行最佳路径分析需要根据<see cref="T:SuperMap.IS.Utility.RouteParam">RouteParam</see>来设置分析条件，
            包括设置网络分析参数<see cref="F:SuperMap.IS.Utility.RouteParam.NetworkParams"/>等。
            </para>
            <para>
            路径分析的返回结果中包括两个部分，一部分是计算的总距离
            <see cref="F:SuperMap.IS.Utility.RouteResult.TotalLength"/>；另一部分就是返回的高亮的最佳路径图
            <see cref="F:SuperMap.IS.Utility.RouteResult.MapResult"/>。
            </para>
            </remarks>
            <param name="keyPoints">节点集</param>
            <param name="routeParam">路径分析参数</param>
            <returns>分析结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.FindPath(SuperMap.IS.Utility.PixelCoord[],SuperMap.IS.Utility.RouteParam)">
            <summary>
            根据关键点像素坐标进行最佳路径分析。
            </summary>
            <remarks>
            <para>
            需要注意的是，进行最佳路径分析的空间数据必须有网络图层。
            </para>
            <para>
            进行最佳路径分析需要根据<see cref="T:SuperMap.IS.Utility.RouteParam">RouteParam</see>来设置分析条件，
            包括设置网络分析参数<see cref="F:SuperMap.IS.Utility.RouteParam.NetworkParams">NetWorkParams</see>等。
            </para>
            <para>
            路径分析的返回结果中包括两个部分，一部分是计算的总距离
            <see cref="F:SuperMap.IS.Utility.RouteResult.TotalLength"/>；另一部分就是返回的高亮的最佳路径图
            <see cref="F:SuperMap.IS.Utility.RouteResult.MapResult"/>。
            </para>
            </remarks>
            <param name="keyPoints">关键点像素坐标集</param>
            <param name="routeParam">路径分析参数</param>
            <returns>分析结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.FindPath(System.Int32[],SuperMap.IS.Utility.RouteParam)">
            <summary>
            根据关键点ID进行最优路径分析。
            </summary>
            <remarks>
            <para>
            需要注意的是，进行最优路径分析的空间数据必须有网络图层。
            </para>
            <para>
            在进行路径分析之前，首先需要设置路径分析参数<see cref="T:SuperMap.IS.Utility.RouteParam">RouteParam</see>.
            包括设置网络分析参数<see cref="F:SuperMap.IS.Utility.RouteParam.NetworkParams">NetWorkParams</see>等。
            </para>
            <para>
            路径分析的返回结果中包括两个部分，一部分是计算的总距离
            <see cref="F:SuperMap.IS.Utility.RouteResult.TotalLength"/>；另一部分就是返回的高亮的最佳路径图
            <see cref="F:SuperMap.IS.Utility.RouteResult.MapResult"/>。
            </para>
            </remarks>
            <param name="keyIDs">网络数据集中节点的SMID值</param>
            <param name="routeParam">路径分析参数</param>
            <returns>分析结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.BufferQuery(SuperMap.IS.Utility.BufferParam,SuperMap.IS.Utility.QueryParam)">
             <summary>
             缓冲查询分析方法。
             </summary>
             <remarks>
             <para>
             缓冲查询分析是在点、线和多边形实体周围按照缓冲的距离条件自动建立缓冲区域，并且将该缓冲区域与待查询的图层按照一定
             空间关系和属性条件进行叠置分析，得到符合条件的几何对象（记录）。缓冲查询分析方法经常会应用在工程应用中，
             例如，在环境治理工程中，常在污染的河流周围划出一定宽度的范围表示受到污染的区域，通过该方法查询到的在该污染区内的
             居民就需要搬迁；又如在飞机场，常根据健康需要在周围划分出一定范围的区域作为非居住区，那么如果在该区域内查询出有居民区，
             那么这些居民区的住户就需要拆迁，等等。
             </para>
             <para>
             要进行缓冲区查询分析，首先需要通过<paramref name="bufferParam"/>对象设置与缓冲区相关的参数，例如指定要做缓冲区的几何对象，
             设置缓冲区的半径，设置制作出的缓冲区在地图上的显示风格，关于<paramref name="bufferParam"/>对象的说明请参见<see cref="T:SuperMap.IS.Utility.BufferParam"/>。
             </para>
             <para>
             设置与缓冲区相关的信息后，还需要通过<paramref name="queryParam"/>对象设置查询相关的参数，例如设置要查询哪个图层的记录，
             设置查询条件，设置查询结果在地图上的显示风格，关于<paramref name="queryParam"/>对象的说明请参见<see cref="T:SuperMap.IS.Utility.QueryParam"/>。
             </para>
             </remarks>
             <example>
             <code>
             
             假设当前地图有两个图层，一个是表示工厂的废气排放源的图层 Point@demo（点对象）；另一个是表示居民区的图层 Region@demo（面对象）。
             现在环保局需要测算处于 SMID=3 的废气排放源的一级污染区域内（500米）有哪些居民区，这个需求可以利用缓冲区分析来实现。
             即对 Point@demo  图层的这个SMID=3的点排放源制作缓冲半径为500的缓冲区域，查找与该缓冲区域具有全部包含或者部分包含空间关系
             的居民区（图层Region@demo）的几何对象。
              
             [C#]
            		
            		注：如果需要使用下面的示例代码，请先添加对Utility命名空间的引用：
             
            			 using SuperMap.IS.Utility;
                         using SuperMap.IS.Web;
                         
             
            		缓冲查询分析示例代码如下：
            	
                 IMap m_map = TcpMap.Create("localhost", 8800, new Hashtable());  // 根据地图服务器的地址和端口创建TcpMap的本地连接
             
            		BufferParam BufQuery = new BufferParam();
            		BufQuery.Distance = 50.00; //设置缓冲半径
            		BufQuery.Smoothness = 12;   //设置缓冲平滑度
            		BufQuery.FromCustomGeo = false; //不使用自定义的几何对象作缓冲区域
            		BufQuery.FromLayer = new QueryLayer();
            		BufQuery.FromLayer.Name = "Point@demo"; //设置制作缓冲区的几何对象对应的图层 
            		BufQuery.FromLayer.WhereClause = "SMID = 3";   //设置对SMID为3的几何对象制作缓冲区
            		BufQuery.QueryMode = SpatialQueryMode.AreaIntersect ; //设置空间关系模式——部分包含或者全部包含
            	    QueryParam queryparam = new QueryParam();
            	    queryparam.Layers = new QueryLayer[1];
                 queryparam.Layers[0] = new QueryLayer();
            	    queryparam.Layers[0].Name = "Region@demo"; //设置查询图层（对居民区图层进行查询）
                 queryparam.Layers[0].ReturnFields = new string[2];
                 queryparam.Layers[0].ReturnFields[0] = "SMID";  //设置返回结果字段
            		queryparam.Layers[0].ReturnFields[1] = "Name";  //设置返回结果字段
            		queryparam.Highlight.HighlightResult = true;  //设置对查询的结果在地图上高亮显示
            		ResultSet rs = m_map.BufferQuery (BufQuery,queryparam); //执行缓冲区查询分析，获取结果
            		if(rs != null &amp;&amp; rs.TotalCount &gt; 0)
            		{
             	    DataSet ds;
            			ds = rs.ToDataSet();
            			dgBufferResult.DataSource = ds; //将结果显示在datagrid中
            			dgBufferResult.DataBind();
            		}
            	
             
             
            [VB]
            		
            		注：如果需要使用下面的示例代码，请先添加对Utility命名空间的引用：
             
            				Imports SuperMap.IS.Utility
                         Imports SuperMap.IS.Web
             
                 缓冲查询分析示例代码如下：
            	
            	     Dim m_map As IMap
            	     m_map = TcpMap.Create("localhost", 8800, New Hashtable())
             
            	     Dim bufferParam As New BufferParam
            	     bufferParam.FromCustomGeo = True  ' 缓冲对象以自定义几何对象的方式来设定
            	     ' 以下是自绘几何对象
            	     Dim geoRect As New Geometry
            	     geoRect.Feature = FeatureType.Polygon  ' 设置绘制的几何对象的类型为多边形
            	     geoRect.Parts = New Integer(1) {}       ' 设置几何对象为一个简单的对象并且通过5个简单点来确定形状
            	     geoRect.Parts(0) = 5
            	     geoRect.Points = New MapCoord(5) {}
            	     geoRect.Points(0) = New MapCoord(3700, -4000)
            	     geoRect.Points(1) = New MapCoord(3700, -4300)
            	     geoRect.Points(2) = New MapCoord(4000, -4300)
            	     geoRect.Points(3) = New MapCoord(4000, -4000)
            	     geoRect.Points(4) = New MapCoord(3700, -4000)  ' 首尾相接
            	     bufferParam.Geometries = New Geometry(1) {}
            	     bufferParam.Geometries(0) = geoRect
            	     bufferParam.Distance = 500                 ' 设置缓冲区半径
            	     bufferParam.QueryMode = SpatialQueryMode.Containing    ' 设置待查询的对象与缓冲区之间的空间关系
            	     ' 以下设置查询对象的查询信息
            	     Dim queryParam As New QueryParam
            	     queryParam.Layers = New QueryLayer(1) {}
            	     queryParam.Layers(0) = New QueryLayer()
            	     queryParam.Layers(0).Name = "ResidentialArea@changchun"
            	     queryParam.Highlight.HighlightQueryArea = True
            	     queryParam.Highlight.HighlightResult = True
            	     queryParam.ExpectCount = 10
            	     Dim rs As ResultSet = m_map.BufferQuery(bufferParam, queryParam)    '执行缓冲区查询分析，获取结果
            	     Dim ds As DataSet
            	     If Not rs Is Nothing And rs.TotalCount &gt; 0 Then
            	        ds = rs.ToDataSet()
            	        dgBufferResult.DataSource = ds  '将结果显示在datagrid中
            	        dgBufferResult.Refresh()
                  End If
             </code>
             </example>
             <param name="bufferParam">必选，<see cref="T:SuperMap.IS.Utility.BufferParam"/>类型。通过该参数对象设置与缓冲区相关的信息，例如指定要做
             缓冲区的几何对象，设置缓冲区的半径，设置制作出的缓冲区在地图上的显示风格。</param>
             <param name="queryParam">必选，<see cref="T:SuperMap.IS.Utility.QueryParam"/>类型。通过该参数对象设置查询相关的参数，例如设置要查询哪个图层的记录，
             设置查询条件，设置查询结果在地图上的显示风格。</param>
             <returns>缓冲查询的结果。</returns>
             <seealso cref="T:SuperMap.IS.Utility.BufferParam"/>
             <seealso cref="T:SuperMap.IS.Utility.QueryParam"/>  
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.BufferQuery(SuperMap.IS.Utility.BufferParam,SuperMap.IS.Utility.QueryParam,SuperMap.IS.Utility.Highlight)">
            <summary>
            缓冲查询分析方法。
            </summary>
            <remarks>
            <para>
            缓冲查询分析是在点、线和多边形实体周围按照缓冲的距离条件自动建立缓冲区域，并且将该缓冲区域与待查询的图层按照一定
            空间关系和属性条件进行叠置分析，得到符合条件的几何对象（记录）。缓冲查询分析方法经常会应用在工程应用中，
            例如，在环境治理工程中，常在污染的河流周围划出一定宽度的范围表示受到污染的区域，通过该方法查询到的在该污染区内的
            居民就需要搬迁；又如在飞机场，常根据健康需要在周围划分出一定范围的区域作为非居住区，那么如果在该区域内查询出有居民区，
            那么这些居民区的住户就需要拆迁，等等。
            </para>
            <para>
            要进行缓冲区查询分析，首先需要通过 SuperMap.IS.Utility.BufferParam 对象设置与缓冲区相关的参数，例如指定要做缓冲区的几何对象，
            设置缓冲区的半径，设置制作出的缓冲区在地图上的显示风格，关于 BufferParam 对象的说明请参见<see cref="T:SuperMap.IS.Utility.BufferParam"/>。
            </para>
            <para>
            设置与缓冲区相关的信息后，还需要通过 SuperMap.IS.Utility.QueryParam 对象设置查询相关的参数，例如设置要查询哪个图层的记录，
            设置查询条件，设置查询结果在地图上的显示风格，关于 QueryParam 对象的说明请参见<see cref="T:SuperMap.IS.Utility.QueryParam"/>。
            </para>
            </remarks>
            <param name="bufferParam">必选，<see cref="T:SuperMap.IS.Utility.BufferParam"/>类型。通过该参数对象设置与缓冲区相关的信息，例如指定要做
            缓冲区的几何对象，设置缓冲区的半径，设置制作出的缓冲区在地图上的显示风格。</param>
            <param name="queryParam">必选，<see cref="T:SuperMap.IS.Utility.QueryParam"/>类型。通过该参数对象设置查询相关的参数，例如设置要查询哪个图层的记录，
            设置查询条件，设置查询结果在地图上的显示风格。</param>
            <param name="bufferSourceHighlight">缓冲源对象高亮参数。</param>
            <returns>缓冲查询的结果。</returns>
            <seealso cref="T:SuperMap.IS.Utility.BufferParam"/>
            <seealso cref="T:SuperMap.IS.Utility.QueryParam"/> 
            <seealso cref="T:SuperMap.IS.Utility.Highlight"/>
        </member>
        <!-- 对于成员“M:SuperMap.IS.Web.TcpMap.BufferQuery(SuperMap.IS.Utility.Geometry[],SuperMap.IS.Utility.BufferQueryParam)”忽略有格式错误的 XML 注释 -->
        <member name="M:SuperMap.IS.Web.TcpMap.BufferQuery(SuperMap.IS.Utility.QueryLayer,SuperMap.IS.Utility.BufferQueryParam)">
            <summary>
            根据图层进行缓冲分析的方法。
            </summary>
            <param name="layer">必选，<see cref="T:SuperMap.IS.Utility.QueryLayer"/>缓冲图层。</param>
            <param name="bufferQueryParam">必选，<see cref="T:SuperMap.IS.Utility.BufferQueryParam"/>类型。通过该参数对象设置与缓冲查询分析相关的参数。</param>
            <returns>缓冲分析查询结果。</returns>
            <remarks>
            <para>
            缓冲查询分析是在点、线和多边形实体周围按照缓冲的距离条件自动建立缓冲区域，并且将该缓冲区域与待查询的图层按照一定
            空间关系和属性条件进行叠置分析，得到符合条件的几何对象（记录）。缓冲查询分析方法经常会应用在工程应用中，
            例如，在环境治理工程中，常在污染的河流周围划出一定宽度的范围表示受到污染的区域，通过该方法查询到的在该污染区内的
            居民就需要搬迁；又如在飞机场，常根据健康需要在周围划分出一定范围的区域作为非居住区，那么如果在该区域内查询出有居民区，
            那么这些居民区的住户就需要拆迁，等等。
            </para>
            <para>
            要进行缓冲区查询分析，需要通过 SuperMap.IS.Utility.BufferQueryParam 对象设置与缓冲区相关的参数和与查询相关的参数。
            其中，与缓冲区相关的参数包括设置缓冲区的半径、缓冲源对象在地图上的显示风格、空间几何对象间的查询模式等；
            与查询相关的参数需通过 SuperMap.IS.Utility.BufferQueryParam.QueryParam 对象设置，包括设置要查询哪个图层的记录、设置查询条件、
            设置查询结果在地图上的显示风格等。关于 BufferQueryParam 对象的说明请参见<see cref="T:SuperMap.IS.Utility.BufferQueryParam"/>。
            </para>
            </remarks>
            <example>
            <code>
            假设当前地图有两个图层，一个是表示医院的图层 Hospital@changchun（点对象）；另一个是表示居民区的图层 ResidentialArea@changchun（面对象）。
            现在卫生部需要测算处于 SmID=24 的医院的一级覆盖范围（500米）内包含哪些居民区，这个需求可以利用缓冲区查询分析来实现。
            即对 Hospital@changchun 图层的这个 SmID=24 的医院点制作缓冲半径为 500 的缓冲区域，查找与该缓冲区域具有全部包含或者部分包含空间关系的居民区（图层 ResidentialArea@changchun）的几何对象。
            
            [C#]
            	
            注：如果需要使用下面的示例代码，请先添加对 Utility 命名空间的引用：
            
            	using SuperMap.IS.Utility;
            
            缓冲区查询分析示例代码如下：
            
            QueryLayer queryLayer = new QueryLayer();
            queryLayer.Name = "Hospital@changchun";//设置制作缓冲区的几何对象对应的图层
            queryLayer.WhereClause = "SmID=24";//设置对SMID为24的几何对象制作缓冲区
            
            BufferQueryParam bufferQueryParam = new BufferQueryParam();
            bufferQueryParam.BufferDistance = 500;//设置缓冲半径
            bufferQueryParam.BufferSmoothness = 12;//设置缓冲平滑度
            bufferQueryParam.BufferSourceHighlight = new Highlight();
            bufferQueryParam.BufferSourceHighlight.HighlightResult = true;//设置对查询的结果在地图上高亮显示
            bufferQueryParam.QueryMode = SpatialQueryMode.AreaIntersect;//设置空间关系模式——部分包含或者全部包含
            bufferQueryParam.ReturnBufferResult = true;
            
            QueryParam queryParam = new QueryParam();
            queryParam.Layers = new QueryLayer[1];
            queryParam.Layers[0] = new QueryLayer();
            queryParam.Layers[0].Name = "ResidentialArea@changchun";//设置查询图层（对居民区图层进行查询）
            queryParam.Highlight = new Highlight();
            queryParam.Highlight.HighlightQueryArea = true;//高亮查询区域
            queryParam.Highlight.HighlightResult = true;//高亮查询结果对象
            
            bufferQueryParam.QueryParam = queryParam;
            
            BufferQueryResult result = MapControl1.SpatialAnalystOperator.BufferQuery(queryLayer, bufferQueryParam);//执行缓冲区查询分析，获取结果
            </code>
            </example>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetMapParamToSubmitEx(SuperMap.IS.Utility.QueryParam,SuperMap.IS.Utility.MapParam@)">
            <summary>
            
            </summary>
            <param name="queryParam"></param>
            <param name="mapParamForBackup"></param>
            <returns></returns>
            <remarks>QueryLayer中增加HighLight接口后根据以下规则进行判断是否需要设置returnImage = true;
            a)	QuyerLayer.HighLight == null时 使用QueryParam中设置的HighLight；
            b)	QueryLayer.HighLight != null时，使用当前QueryLayer中的参数设置当前图层的高亮风格；
            c)	当QueryParam中设置queryAllLayer  = true时，都将使用QueryParam中定义的HighLight设置高亮风格；
            d)  空间查询时存在是否高亮查询区域(highLightQueryArea)设置，
            此设置都将以QueryParam中参数进行设置，QueryLaye中对应的设置将被无视。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.FuzzyFindStop(System.String)">
            <summary>
            根据站点名称模糊查询符合条件的站点集合。
            </summary>
            <param name="fuzzyStopName">站点名称，可以为空字符串。</param>
            <returns>站点集合</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.FuzzyFindBusLine(System.String)">
            <summary>
            根据线路名称模糊查询符合条件的线路集合。
            </summary>
            <param name="fuzzyBusLineName">线路名称。可以为空字符串。</param>
            <returns>线路集合</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetBusLinesByStopID(System.Int32)">
            <summary>
            查询经过指定的某个公交站点的所有公交线路的集合。
            </summary>
            <param name="interchangeID">公交站点数据集中待查站点的SmUserID的值。</param>
            <returns>返回经过指定的公交站点的所有公交线路的集合。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetBusLinesByStopName(System.String)">
            <summary>
            查询经过指定站名的线路集合,站点名称精确匹配。
            </summary>
            <param name="stopName">站点名称</param>
            <returns>返回经过该站点的所有的线路集合。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetBusLine(System.Int32)">
            <summary>
            根据线路SMID查找线路。
            </summary>
            <param name="buslineID">待查公交线路的SMID的值。</param>
            <returns>返回SmID为指定值的公交线路对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetBusStop(System.Int32)">
            <summary>
            根据站点SMID查找站点
            </summary>
            <param name="busStopID">待查公交站点的SMID的值。</param>
            <returns>返回SmID为指定值的公交站点对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetFollowingStops(System.Int32,System.Boolean)">
            <summary>
            查询指定公交线路的所有站点集合。
            </summary>
            <param name="buslineID">公交线路的SmUserId。</param>
            <param name="bForward">设置一个值,该值表示是否该线路为上行/内环/小环线路。
            对于往返线路相同的公交来说，该参数设置为true或者false都可以。
            </param>
            <returns>返回指定的公交线路的所有的站点集合。</returns>
            <remarks>
            使用该方法可以获取某条公交线路途径的所有站点。由于有些公交线路往返路线不相同，因此公交线路的数据中有
            一个专门的字段用来描述线路的特性的，如上行/下行，内环/外环，大环/小环。通常规定上行/内环/小环线路为forward
            方向。下行/外环/大环为backward方向。因此使用该方法时需要指明查询的公交线路的方向是否是forward方向，即
            使用该方法的第二个参数进行设置。对于往返线路相同的公交来说，该方法的第二个参数设置为true或者false都可以。
            </remarks> 
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetBusSolution(System.Int32[],SuperMap.IS.Utility.BusSolutionParam)">
            <summary>
            根据站点的SmUserID数组查询公交换乘方案。
            </summary>
            <param name="ids">站点的换乘点ID数组，即站点的SmUserId数组。其长度必须大于等于2。</param>
            <param name="busSolutionParam">公交换乘参数</param>
            <returns>
            <para>返回<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>数组。</para>
            </returns>
            <remarks>
            <para>
            1、公交换乘分析需要使用已经进行公交建模处理的空间数据。在进行公交建模处理时会将公交站点的SmUserId值作为换乘分析关键值。
            对其进行相应的赋值，如在一个十字交叉路口的四个方向都有相同站点名的公交站点，而且相距很近，进行公交建模后，这四个公交站点
            的SmUserId值都将会被赋予相同的数值，如SmUserID = 5，这表明进行公交换乘分析时这四个站点可以最为一个公交站点处理，可以进行转车。因此使用该
            方法进行公交换乘分析需要明确起始站和终点站的SmUserId的值。
            </para>
            <para>
            2、公交换乘分析会对站点数组中每两个相邻的站点进行换乘分析，最终将所有相邻站点的换乘方案集合<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>组成数组返回。例如要获取从A站途径B站最终到达C
            站的公交换乘方案集合，那么通过该方法最终会得到A、B两个站点的换乘方案集合和B、C两个站点的换乘方案集合。
            </para>
            <para>
            3、对于返回的每一个换乘方案集合对象<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>来说，如果有符合条件的换乘方案，可以通过<see cref="F:SuperMap.IS.Utility.BusSolutionItem.RoutingItems"/>
            获取所有公交换乘方案；如果没有符合条件的换乘方案，那么<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>值为null。
            </para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetBusSolution(System.String[],SuperMap.IS.Utility.BusSolutionParam)">
            <summary>
            根据站点名称数组查询公交换乘方案。
            </summary>
            <param name="texts">站点的站点名称数组,其数组的长度必须大于等于2。</param>
            <param name="busSolutionParam">公交换乘参数</param>
            <returns>
            返回一组公交换乘方案集合对象-<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>的数组。
            </returns>
            <remarks>
            <para>
            1、公交换乘分析会对站点数组中每两个相邻的站点进行换乘分析，最终将所有相邻站点的换乘方案集合<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>组成数组返回。例如要获取从A站途径B站最终到达C
            站的公交换乘方案集合，那么通过该方法最终会得到A、B两个站点的换乘方案集合和B、C两个站点的换乘方案集合。
            </para>
            <para>2、对于每一个返回的换乘方案集合对象-<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>都可能有三种返回结果，第一种结果就是地图服务返回符合条件的换乘方案，
            并通过<see cref="F:SuperMap.IS.Utility.BusSolutionItem.RoutingItems"/>获取方案；
            当起始站点和终点站点名称不唯一的时候，地图服务会返回第二种结果返回包含起始站点名称的所有车站对象和包含终点站名
            的所有车站对象，可以通过<see cref="F:SuperMap.IS.Utility.BusSolutionItem.StartStops"/>和<see cref="F:SuperMap.IS.Utility.BusSolutionItem.EndStops"/>分别获取包含起始站或者终点站名
            的所有公交站点对象，以供其选择一个唯一的起始和终点站进行第二次换乘方案的查询；第三种结果是没有符合条件的换乘方案，即返回的<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>为null。
            </para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetBusSolution(SuperMap.IS.Utility.MapCoord[],System.Double,SuperMap.IS.Utility.BusSolutionParam)">
            <summary>
            根据地理坐标数组查询公交换乘方案。
            </summary>
            <param name="points">地理坐标点数组，其数组长度必须大于等于2。</param>
            <param name="tolerance">距离容限。单位与地图单位一致。地图服务会查找地理坐标点数组（即points参数值）中的每一个坐标点附近的公交站点，即以坐标点
            为圆心，以该容限为半径，设置一个查询的圆形范围。在该范围内的公交站点即为待分析的站点。</param>
            <param name="busSolutionParam">busSolutionParam</param>
            <returns>返回一组公交方案集合-<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>的数组</returns>
            <remarks>
            <para>
            1、通过该方法获取公交换乘解决方案需要设置一个距离容限，地图服务根据这个容限首先查询地理坐标点数组（即points参数值）中的每一个坐标点附近的公交站点集合，
            这些站点集合分别作为起始站点集合、途径点站点集合和终止站点集合。然后分别分析并获取起始站点与途径站点之间的公交换乘方案集合（对所有可能的换乘解决方案进行排序，
            按照顺序返回指定个数的换乘方案。），相邻途径站点之间的公交换乘方案集合（对所有可能的换乘解决方案进行排序，
            按照顺序返回指定个数的换乘方案。），以及
            途径站点与终点之间的公交换乘方案集合（对所有可能的换乘解决方案进行排序，
            按照顺序返回指定个数的换乘方案。）。
            </para>
            <para>
            2、在设置距离容限时需要谨慎。如果距离容限过大，可能会导致分析时间延长，从而使系统性能下降。
            </para> 
            <para>3、对于返回的每一个换乘方案集合对象<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>来说，如果有符合条件的换乘方案，可以通过<see cref="F:SuperMap.IS.Utility.BusSolutionItem.RoutingItems"/>
            获取所有公交换乘方案；如果没有符合条件的换乘方案，那么<see cref="T:SuperMap.IS.Utility.BusSolutionItem"/>值为null。
            </para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ShowRouting(SuperMap.IS.Utility.BusRoutingItem,SuperMap.IS.Utility.Style,SuperMap.IS.Utility.Style)">
            <summary>
            在地图上高亮显示一套公交换乘方案的线路。
            </summary>
            <param name="routing">指定要高亮的某套公交换乘方案的线路。</param>
            <param name="stopStyle">公交站点的高亮风格</param>
            <param name="lineStyle">公交线路的高亮风格</param>
            <returns>
            <para>
            返回地图结果对象-<see cref="T:SuperMap.IS.Utility.MapImage">SuperMap.IS.Utility.MapImage</see>。
            </para>
            <para>
            通过<see cref="T:SuperMap.IS.Utility.MapImage">SuperMap.IS.Utility.MapImage</see>能够获得地图以及相关地图信息的描述。
            通过<see cref="F:SuperMap.IS.Utility.MapImage.ReturnMapParam">SuperMap.IS.Utility.MapImage.ReturnMapParam</see>可以得到当前地图的信息描述，例如地图的名称、
            地图的范围、中心点坐标等等。通过<see cref="F:SuperMap.IS.Utility.MapImage.MapUrl">SuperMap.IS.Utility.MapImage.MapUrl</see>可以获取地图的显示图片。     
            </para>
            </returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ShowBusLine(System.Int32,SuperMap.IS.Utility.Style)">
            <summary>
            在地图上高亮显示一条公交线路。
            </summary>
            <param name="lineSmID">公交线路的SmID</param>
            <param name="lineStyle">公交线路的高亮风格</param>
            <returns>
            <para>
            返回地图结果对象-<see cref="T:SuperMap.IS.Utility.MapImage">SuperMap.IS.Utility.MapImage</see>。
            </para>
            <para>
            通过<see cref="T:SuperMap.IS.Utility.MapImage">SuperMap.IS.Utility.MapImage</see>能够获得地图以及相关地图信息的描述。
            通过<see cref="F:SuperMap.IS.Utility.MapImage.ReturnMapParam">SuperMap.IS.Utility.MapImage.ReturnMapParam</see>可以得到当前地图的信息描述，例如地图的名称、
            地图的范围、中心点坐标等等。通过<see cref="F:SuperMap.IS.Utility.MapImage.MapUrl">SuperMap.IS.Utility.MapImage.MapUrl</see>可以获取地图的显示图片。     
            </para>
            </returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ShowBusStop(System.Int32,SuperMap.IS.Utility.Style)">
            <summary>
            在地图上高亮显示一个公交站点。
            </summary>
            <param name="stopSmID">公交站点的SmID</param>
            <param name="stopStyle">公交站点的高亮风格</param>
            <returns>
            <para>
            返回地图结果对象-<see cref="T:SuperMap.IS.Utility.MapImage">SuperMap.IS.Utility.MapImage</see>。
            </para>
            <para>
            通过<see cref="T:SuperMap.IS.Utility.MapImage">SuperMap.IS.Utility.MapImage</see>能够获得地图以及相关地图信息的描述。
            通过<see cref="F:SuperMap.IS.Utility.MapImage.ReturnMapParam">SuperMap.IS.Utility.MapImage.ReturnMapParam</see>可以得到当前地图的信息描述，例如地图的名称、
            地图的范围、中心点坐标等等。通过<see cref="F:SuperMap.IS.Utility.MapImage.MapUrl">SuperMap.IS.Utility.MapImage.MapUrl</see>可以获取地图的显示图片。     
            </para>
            </returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.UpdateBusLinePriority(System.Int32,System.Int32)">
             <summary>
             动态修改某些线路的优先级。
             </summary>
             <param name="buslineSmID">线路SmID</param>
             <param name="priority">线路优先级，默认值为0。</param>
             <returns>是否修改成功</returns>
             <remarks>
             <para>
             优先级值越大，优先级越高，其值越小，优先级越低。对于地铁，轻轨等线路可以设置较高的优先级（比如设为1），这样在公交换乘时的换乘结果会优先选择这些线路；
             对于某些比较涌挤的路线，可以设置较低的优先级（比如设-1），这样在公交换乘时的换乘结果将不会优先选择这些线路。
             </para>
            <para>
             优先级的修改也可以在BusNetwork Manager里进行设置，具体位置为：【公交网络】-> 【动态修改优先级】。
             </para>
             </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.UpdateBusLinesPriority(System.Int32[],System.Int32)">
             <summary>
             批量动态修改线路的优先级。
             </summary>
             <param name="buslineSmIDs">线路SmID数组</param>
             <param name="priority">优先级</param>
             <returns>是否修改成功</returns>
             <remarks>
             <para>
             优先级值越大，优先级越高，其值越小，优先级越低。对于地铁，轻轨等线路可以设置较高的优先级（比如设为1），这样在公交换乘时的换乘结果会优先选择这些线路；
             对于某些比较涌挤的路线，可以设置较低的优先级（比如设-1），这样在公交换乘时的换乘结果将不会优先选择这些线路。
             </para>
            <para>
             优先级的修改也可以在BusNetwork Manager里进行设置，具体位置为：【公交网络】-> 【动态修改优先级】。
             </para>
             </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.UpdateNodeWeight(System.String,SuperMap.IS.Utility.NetworkParams,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            更新网络结点权值。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="networkParams">网络分析参数设置</param>
            <param name="nodeID">结点ID</param>
            <param name="fromEdgeID">起始弧段ID</param>
            <param name="toEdgeID">终止弧段ID</param>
            <param name="weight">转弯权值</param>
            <returns>更新成功返回更新前的权值，失败返回一个负值-1000,原来不通的更新后返回-1。</returns>
            <remarks>
            <para>
            在内存转向表中更新一个结点的转向权值<see cref="F:SuperMap.IS.Utility.TurnTableSetting.TRNWeightField"/>，进行路径分析时，需要将弧段权值和节点权值相加，然后比较各个不同结果的
            值来获取最佳路径。起始弧段ID、终止弧段ID必须和弧段权值表中的“弧段ID”一致；转弯权值单位必须和弧段权值表中的正、逆向权值单位一致。
            </para>
            <para>
            该方法主要用于动态修改内存中转向表的一个结点的转向权值，方向从ID为fromEdgeID的弧段到ID为toEdgeID的弧段，权值为dWeight。
            </para>
            <para>
            需要说明的是，使用该方法动态设置网络结点的权值后，一旦地图服务重新启动，该权值将失效，重启后后网络分析依据的转向
            阻力值将来源于转向表。
            </para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.UpdateNodeWeight(System.String,SuperMap.IS.Utility.NetworkParams,System.Int32[],System.Int32[],System.Int32[],System.Double[])">
            <summary>
            批量更新网络结点权值。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="networkParams">网络分析参数设置</param>
            <param name="nodeIDs">结点ID</param>
            <param name="fromEdgeIDs">起始弧段ID</param>
            <param name="toEdgeIDs">终止弧段ID</param>
            <param name="weights">转弯权值</param>
            <returns>更新成功返回更新前的权值，失败返回一个负值-1000,原来不通的更新后返回-1。</returns>
            <remarks>
            <para>
            在内存转向表中更新一个结点的转向权值<see cref="F:SuperMap.IS.Utility.TurnTableSetting.TRNWeightField"/>，进行路径分析时，需要将弧段权值和节点权值相加，然后比较各个不同结果的
            值来获取最佳路径。起始弧段ID、终止弧段ID必须和弧段权值表中的“弧段ID”一致；转弯权值单位必须和弧段权值表中的正、逆向权值单位一致。
            </para>
            <para>
            该方法主要用于动态修改内存中转向表的一个结点的转向权值，方向从ID为fromEdgeID的弧段到ID为toEdgeID的弧段，权值为dWeight。
            </para>
            <para>
            需要说明的是，使用该方法动态设置网络结点的权值后，一旦地图服务重新启动，该权值将失效，重启后后网络分析依据的转向
            阻力值将来源于转向表。
            </para>
            <para>
            使用该方法时需注意，结点ID，起始弧段ID，终止弧段ID，转弯权值参数长度必须完全一致。
            </para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.UpdateEdgeWeight(System.String,SuperMap.IS.Utility.NetworkParams,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            更新网络弧段权值。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="networkParams">网络分析参数设置</param>
            <param name="edgeID">弧段ID</param>
            <param name="fromNodeID">起始结点ID</param>
            <param name="toNodeID">终止结点ID</param>
            <param name="weight">通行权值</param>
            <returns>更新成功返回更新前的权值，失败返回一个负值-1000,原来不通的边更新后返回-1。</returns>
            <remarks>
            <para>
            通常进行网络分析的时候，各个网络弧段的阻力值来源于空间数据的某个属性字段，也就是说这些阻力值是固定的。但是在一些特殊的
            应用里，一些弧段的阻力值可能是不断的变化的，这时可以使用该方法动态修改网络弧段的权值（阻力值）。
            </para>
            <para>
            需要说明的是，使用该方法动态设置网络弧段的权值后，一旦地图服务重新启动，该权值将失效，重启后后网络分析依据的各个网络弧段的
            阻力值将来源于空间数据的某个属性字段。
            </para>
            <para>
            弧段是有方向的，如果要设置弧段正向的权值（正阻力值），将该弧段的起始结点ID值赋予该方法的fromNodeID参数。
            如果要设置弧段反向的权值（反阻力值），将该弧段的终止结点ID值赋予该方法的fromNodeID参数。
            </para>
            <para>所有不通的弧段处理成权值-1。
            </para>
            <para>使用该方法时需注意，如果本来该弧段就是障碍边，则不能设置权值。
            </para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.UpdateEdgeWeight(System.String,SuperMap.IS.Utility.NetworkParams,System.Int32[],System.Int32[],System.Int32[],System.Double[])">
            <summary>
            批量更新网络弧段权值。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="networkParams">网络分析参数设置</param>
            <param name="edgeIDs">弧段ID</param>
            <param name="fromNodeIDs">起始结点ID</param>
            <param name="toNodeIDs">终止结点ID</param>
            <param name="weights">通行权值</param>
            <returns>更新成功返回更新前的权值，失败返回一个负值-1000,原来不通的边更新后返回-1。</returns>
            <remarks>
            <para>
            通常进行网络分析的时候，各个网络弧段的阻力值来源于空间数据的某个属性字段，也就是说这些阻力值是固定的。但是在一些特殊的
            应用里，一些弧段的阻力值可能是不断的变化的，这时可以使用该方法动态修改网络弧段的权值（阻力值）。
            </para>
            <para>
            需要说明的是，使用该方法动态设置网络弧段的权值后，一旦地图服务重新启动，该权值将失效，重启后后网络分析依据的各个网络弧段的
            阻力值将来源于空间数据的某个属性字段。
            </para>
            <para>
            弧段是有方向的，如果要设置弧段正向的权值（正阻力值），将该弧段的起始结点ID值赋予该方法的fromNodeID参数。
            如果要设置弧段反向的权值（反阻力值），将该弧段的终止结点ID值赋予该方法的fromNodeID参数。
            </para>
            <para>所有不通的弧段处理成权值-1。
            </para>
            <para>使用该方法时需注意，如果本来该弧段就是障碍边，则不能设置权值。
            </para>
            <para>
            使用该方法时需注意，弧段ID，起始结点ID，终止结点ID，通行权值参数长度必须完全一致。
            </para>
            </remarks> 
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.SpatialOperate(SuperMap.IS.Utility.Geometry,SuperMap.IS.Utility.Geometry,SuperMap.IS.Utility.SpatialOperationType)">
            <summary>
            使用几何对象param对几何对象source进行空间运算，如相交、相并、相减、对称差、裁减等运算。
            </summary>
            <remarks>
            <para>
            几何对象的空间运算是指对几何对象source进行相交、合并等操作。</para>
            <para>相交、合并、裁减等操作被称为运算因子（空间操作类型）。</para>
            <para>几何对象source称作被操作对象，几何对象param称作操作对象。</para>
            <para>用操作对象去对被操作对象进行空间运算，从而得到一个新的几何对象，这个新的几何对象
            就是对被操作对象的运算结果。</para>
            <para>
            具体空间运算的含义参见<see cref="T:SuperMap.IS.Utility.SpatialOperationType"/>中的各个枚举值的说明。
            </para>
            </remarks>
            <param name="source">进行空间运算的被操作的几何对象。</param>
            <param name="param">进行空间运算的操作的几何对象。</param>
            <param name="operation">空间运算因子，即要进行了空间操作类型，如裁减Clip，求并Union，等</param>
            <returns>返回对被操作对象进行空间运算后生成的运算结果，该结果是一个几何对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.OverlayAnalyst(SuperMap.IS.Utility.OverlayParam)">
            <summary>
            叠加分析。
            </summary>
            <remarks>
            <para>
            叠加分析是指在两个数据集之间进行的一系列集合运算，是GIS中的一项非常重要的空间分析功能。</para>
            <para>比如，我们需要了解某一个行政区内的土壤分布情况，我们就根据全国的土地利用图和行政区规划图这两个数据集进行叠加分析，
            然后得到我们需要的结果，从而进行各种分析评价。 </para>
            <para>叠加分析涉及到两个数据集，其中一个数据集为操作数据集，必须为面数据集，另一个数据集为被操作数据集，
            除合并运算和对称差运算必须是面数据集外，其他运算可以是点、线、面或者复合数据集。可以进行点与面的叠加、
            线与面的叠加、多边形与面的叠加。
            </para>
            <para>
            进行叠加分析之前，根据<see cref="T:SuperMap.IS.Utility.OverlayParam">OverlayParam</see>设置进行叠加分析的条件，
            包括操作图层的名称<see cref="F:SuperMap.IS.Utility.OverlayParam.OperateLayer"/>、叠加分析的类型<see cref="F:SuperMap.IS.Utility.OverlayParam.Operation"/>等。
            </para>
            <para>
            叠加分析的结果通过<see cref="T:SuperMap.IS.Utility.OverlayResult"/>获取，包括叠加分析结果数据集所对应的图层名称<see cref="F:SuperMap.IS.Utility.OverlayResult.ResultDataset"/>
            和叠加分析操作是否成功<see cref="F:SuperMap.IS.Utility.OverlayResult.Succeed"/>。
            </para>
            </remarks>
            <param name="param">叠加分析参数</param>
            <returns>叠加分析结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.LockLayer(System.String,System.String,System.String)">
            <summary>
            锁定图层。
            </summary>
            <remarks>
            <para>
            执行地图编辑需要通过三个步骤来实现，首先就是通过该属性锁定待编辑的图层，以便其他用户不能同时对该图层数据进行修改，保障数据编辑操作的可靠性。
            其次通过地图编辑方法（如AddEntity，AddLine等方法）对空间数据进行编辑，编辑完毕后通过UnlockLayer方法解除编辑图层的锁定，以便其他用户可以
            执行编辑的操作。
            </para>
            <para>
            使用该方法锁定地图图层的时候需要通过参数clientID指定要执行编辑操作的用户的客户端唯一标识（一个唯一的字符串），
            地图服务会为该用户返回一个地图编辑的唯一标识，在后续的编辑方法（比如 AddEntity)中
            需要用到这个地图编辑标识。编辑完毕之后， 使用UnlockLayer方法解锁图层的时候也需要传递这个地图编辑标识。
            </para>
            <para>
            使用该方法对地图图层锁定后，请在地图编辑结束后及时使用UnlockLayer方法对该地图图层进行解锁，否则其他用户将无法对该图层进行后续的编辑操作。
            </para>
            </remarks>
            <param name="mapName">地图名称</param>
            <param name="layerName">图层名称</param>
            <param name="clientID">客户端的唯一标识，一个唯一的字符串，以表明用户的唯一性。</param>
            <returns>返回地图编辑唯一标识。通过该标识可以执行后续的地图编辑和解除图层的操作。</returns>
            <seealso cref="M:SuperMap.IS.Web.TcpMap.UnlockLayer(System.String,System.String,System.String)"/>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.UnlockLayer(System.String,System.String,System.String)">
            <summary>
            解除对图层的锁定。 
            </summary>
            <param name="mapName">地图名称</param>
            <param name="layerName">图层名称</param>
            <param name="userID">地图编辑唯一标识。这个标识是从LockLayer方法中获取到的。</param>
            <returns>返回解除地图图层的锁定的操作是否成功的标示</returns>
            <remarks>
            <para>
            如果需要避免对同一个图层进行并发编辑，执行地图编辑需要通过三个步骤来实现，首先就是通过该属性锁定待编辑的图层，以便其他用户不能同时对该图层数据进行修改，保障数据编辑操作的可靠性。
            其次通过地图编辑方法（如AddEntity，AddLine等方法）对空间数据进行编辑，编辑完毕后通过UnlockLayer方法解除编辑图层的锁定，以便其他用户可以
            执行编辑的操作。
            </para>
            <para>
            通过UnlockLayer方法解除对图层的锁定的时候需要输入一个地图编辑的唯一标识，这个标识是从LockLayer方法中获取到的。
            </para>
            </remarks>
            <seealso cref="M:SuperMap.IS.Web.TcpMap.LockLayer(System.String,System.String,System.String)"/>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.AddEntity(System.String,System.String,SuperMap.IS.Utility.Entity[],System.String)">
            <summary>
            在一个图层上增加一组同类型的实体。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="layerName">图层名称</param>
            <param name="targetEntities">要添加的实体数组。</param>
            <param name="userID">编辑用户唯一标识。进行地图编辑的时候，可以首先通过<see cref="M:SuperMap.IS.Web.TcpMap.LockLayer(System.String,System.String,System.String)"/>来锁定要编辑的图层，此时会获得一个
            地图编辑的唯一标识。如果图层已经被锁定，则在使用AddEntity方法添加实体的时候需要输入该地图编辑的唯一标识，否则地图服务不会执行该操作。</param>
            <returns>编辑结果的信息，其中包含新增实体ID数组信息，添加实体的操作是否成功的信息，此次添加实体所影响到的地图范围。</returns>
            <remarks>
            要求在图层中添加相同类型的实体，例如在点图层中必须添加一组点类型的实体。目前该操作只支持点、线、面图层。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.UpdateEntity(System.String,System.String,SuperMap.IS.Utility.Entity[],System.String)">
            <summary>
            更新一组实体。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="layerName">图层名称</param>
            <param name="targetEntities">目标实体</param>
            <param name="userID">编辑用户唯一标识。进行地图编辑的时候，可以首先通过<see cref="M:SuperMap.IS.Web.TcpMap.LockLayer(System.String,System.String,System.String)"/>来锁定要编辑的图层，此时会获得一个
            地图编辑的唯一标识。如果图层已经被锁定，则在使用AddEntity方法添加实体的时候需要输入该地图编辑的唯一标识，否则地图服务不会执行该操作。</param>
            <returns>编辑结果的信息，其中包含更新的实体ID数组信息，更新实体的操作是否成功的信息，此次更新的实体所影响到的地图范围。</returns>
            <remarks>目前该操作只支持点、线、面图层。</remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.DeleteEntity(System.String,System.String,System.Int32[],System.String)">
            <summary>
            根据ID,删除一组实体。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="layerName">图层名称</param>
            <param name="IDs">实体的ID数组</param>
            <param name="userID">编辑用户唯一标识。进行地图编辑的时候，可以首先通过<see cref="M:SuperMap.IS.Web.TcpMap.LockLayer(System.String,System.String,System.String)"/>来锁定要编辑的图层，此时会获得一个
            地图编辑的唯一标识。如果图层已经被锁定，则在使用AddEntity方法添加实体的时候需要输入该地图编辑的唯一标识，否则地图服务不会执行该操作。</param>
            <returns>编辑结果的信息，其中包含删除的实体ID数组信息，删除实体的操作是否成功的信息，此次删除实体后影响到的地图范围。</returns>
            <remarks>目前该操作支持点、线、面图层。</remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.CopyDataset(SuperMap.IS.Utility.CopyDatasetParam,System.String)">
            <summary>
            复制数据集
            </summary>
            <param name="copyDatasetParam">数据集复制参数</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>数据集复制结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.CopyDataset(SuperMap.IS.Utility.CopyDatasetParam,SuperMap.IS.Utility.ResultDatasetCopyParam,System.String)">
            <summary>
            复制数据集。将源数据集复制成指定参数的结果数据集
            </summary>
            <param name="copyDatasetParam">设置要复制的源数据集信息以及结果数据集信息。包括数据存储格式类型，如果结果数据集已存在，是否覆盖该数据集，结果数据集标识等。</param>
            <param name="resultDatasetCopyParam">设置复制数据集需要的相关参数。例如结果数据集的编码方式，矢量数据集复制时是否复制原有的字段索引等。</param>
            <param name="userID">编辑用户唯一标识。</param>
            <returns>数据集复制结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.CreateDataset(SuperMap.IS.Utility.CreateDatasetParam,System.String)">
            <summary>
            创建数据集
            </summary>
            <param name="createDatasetParam">数据集创建参数</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>数据集创建结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.DeleteDataset(System.String,System.String)">
            <summary>
            删除数据集
            </summary>
            <param name="dataset">要删除的数据集标识，形如"数据集名称@数据源别名"，例如：Country@World。</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>数据集删除结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetExternalTableFieldInfos(System.String,System.String)">
            <summary>
            获取当前数据源所在的数据库表空间中某外挂表的字段信息。
            </summary>
            <param name="strTableName">外挂表的名称</param>
            <param name="datasourceName">数据源名称</param>
            <returns>获取字段信息结果对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetExternalTableNames(System.String)">
            <summary>
            获取当前数据源中的所有外挂表集合。
            </summary>
            <param name="datasourceName">当前数据源名</param>
            <returns>获取所有外挂表集合的结果对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.AddExternalTable(System.String,System.String,System.String,System.String)">
            <summary>
            打开数据库中非 SDX+ 管理的表（外挂表）。
            </summary>
            <param name="strTableName">数据库中已存在的外挂表名</param>
            <param name="strDTName ">外挂表数据集的名称</param>
            <param name="datasourceName">当前数据源名</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>外挂表操作结果对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.RemoveExternalTable(System.String,System.String,System.String)">
            <summary>
            从当前数据源中移除外挂表数据集。
            </summary>
            <param name="strDTName ">当前数据源中已存在的外挂表数据集的名称</param>
            <param name="datasourceName">当前数据源名</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>外挂表操作结果对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.RegisterExternalTable(System.String,System.String,System.Boolean,System.String)">
            <summary>
            注册外挂表数据集为 SDX+ 管理的 Tabular 数据集。
            </summary>
            <param name="strDTName">当前数据源中已存在的外挂表数据集的名称。</param>
            <param name="datasourceName">当前数据源名</param>
            <param name="bCreateSmID ">是否创建 SmID 字段</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>外挂表操作结果对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.UnRegisterExternalTable(System.String,System.String,System.String)">
            <summary>
            反注册数据源中的 Tabular 数据集，使之成为非 SDX+ 管理的表。
            </summary>
            <param name="strDTName ">纯属性表（Tabular）数据集的名称</param>
            <param name="datasourceName">当前数据源名</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>外挂表操作结果对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.CopyField(System.String,System.String,System.String,System.String)">
            <summary>
            复制字段。
            </summary>
            <param name="dataset">要复制字段的源数据集标识，形如"数据集名称@数据源别名"，例如：Country@World。</param>
            <param name="sourceFieldName">源字段名称。</param>
            <param name="targetFieldName">目标字段名称。</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>字段操作结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.CreateField(System.String,SuperMap.IS.Utility.Field,System.Boolean,System.String)">
            <summary>
            创建字段。
            </summary>
            <param name="dataset">要创建字段的源数据集标识，形如"数据集名称@数据源别名"，例如：Country@World。</param>
            <param name="field">要创建的字段信息对象</param>
            <param name="overwriteIfExists">是覆盖已存在的字段</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>字段操作结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.DeleteField(System.String,System.String,System.String)">
            <summary>
            删除字段。
            </summary>
            <param name="dataset">要删除字段的源数据集标识，形如"数据集名称@数据源别名"，例如：Country@World。</param>
            <param name="fieldName">要删除的字段名称</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>字段操作结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.SetField(System.String,System.String,SuperMap.IS.Utility.Field,System.String)">
            <summary>
            设置字段。对指定数据源里的某字段进行修改，支持字段类型和精度等的修改。
            </summary>
            <param name="dataset">要设置字段的源数据集标识，形如"数据集名称@数据源别名"，例如：Country@World。</param>
            <param name="fieldName">要设置的字段名称</param>
            <param name="field">要设置的字段信息对象</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>字段操作结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.UpdateFieldValues(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            更新字段。对指定数据集中的某字段值进行更新，但系统字段不能被更新。
            </summary>
            <param name="dataset">要更新字段的源数据集标识，形如"数据集名称@数据源别名"，例如：Country@World。</param>
            <param name="fieldName">要更新的字段名称</param>
            <param name="expression">目标字段值，可以传入一个合法的表达式。</param>
            <param name="filter">要更新记录的查询条件，相当于 SQL 语句中的 WHERE 子句，查询结果即为被更新的记录。如果 filter 为空字符串，则更新表中所有的记录。</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>字段操作结果</returns>
            <remarks>
            对 SDX for SQL Server 或 SDX+ for SQL Server 数据源，更新日期型字段时，expression 参数的格式示例："convert(datetime,'2006-01-17 16:50:22',120)"；
            对于SDX+ for Oracle 数据源，更新日期型字段时，expression  参数的格式示例："to_date('2006-01-17 16:45:22','YYYY-MM-DD HH24:MI:SS')"；
            其他引擎的数据源，如 SDX+ for SDBPlus，更新日期型字段，expression 参数的格式示例："#2006-01-17#"。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.EPSGToSuperMap(System.Int32)">
            <summary>
            转换 EPSG 坐标系的编码为 SuperMap 对应的编码。如果没有对应的坐标系编码，返回-1000。
            </summary>
            <param name="nEPSGCode">EPSG 坐标系的编码</param>
            <returns>SuperMap 坐标系的编码</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.SuperMapToEPSG(System.Int32)">
            <summary>
            转换 SuperMap 坐标系的编码为 EPSG 对应的编码。如果没有对应的坐标系编码，返回-1000。 
            </summary>
            <param name="nSuperMapCode">SuperMap 坐标系的编码</param>
            <returns>EPSG 坐标系的编码</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ConnectDatasources">
            <summary>
            连接工作空间中的所有数据源。
            </summary>
            <returns>返回是否连接成功。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetFieldInfo(System.String,System.String)">
            <summary>
            获取字段信息。
            </summary>
            <param name="dataset">要获取字段的源数据集标识，形如"数据集名称@数据源别名"，例如：Country@World。</param>
            <param name="fieldName">要获取的字段名称。</param>
            <returns>字段信息获取结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.StatisticsQuery(SuperMap.IS.Utility.StatisticsQueryParam)">
            <summary>
            统计查询。对指定的查询参数，如图层名、字段名、统计方法（求最大值、求最小值、求平均值等）等，进行参数值统计。
            </summary>
            <param name="statisticsQueryParam">统计查询参数</param>
            <returns>查询结果集对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.OpenDatasource(SuperMap.IS.Utility.DatasourceParam)">
            <summary>
            打开数据源
            </summary>
            <param name="datasourceParam">数据源参数</param>
            <returns>打开数据源是否成功</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.CloseDatasource(System.String)">
            <summary>
            关闭数据源
            </summary>
            <param name="alias">数据源别名</param>
            <returns>关闭数据源是否成功</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.RefreshDatasource">
             <summary>
            刷新数据源 
             </summary>
             <returns>刷新数据源是否成功</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ClearHighlight">
            <summary>
            清除高亮对象。
            </summary>
            <returns>返回清除高亮后的地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.MapCoordToLatLongCoord(SuperMap.IS.Utility.MapCoord[],SuperMap.IS.Utility.PJCoordSysType)">
            <summary>
            坐标对变化,从地图坐标变换成经纬度坐标。
            </summary>
            <param name="mapCoords">地图坐标数组</param>
            <param name="pjCoordSysType">地图投影类型</param>
            <returns>返回经纬度坐标数组</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.LatLongCoordToMapCoord(SuperMap.IS.Utility.LatLong[],SuperMap.IS.Utility.PJCoordSysType)">
            <summary>
            坐标对变化,从经纬度坐标变换成地图坐标。
            </summary>
            <param name="latLongs">经纬度坐标数组</param>
            <param name="pjCoordSysType">地图投影类型</param>
            <returns>返回地图坐标数组</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.CustomInvoke(SuperMap.IS.Utility.MapParam,System.Boolean,System.Boolean)">
            <summary>
            根据自定义的参数来执行自定义的操作。
            </summary>
            <param name="mapParam">自定义的地图参数。</param>
            <param name="addToHistory">是否添加到历史纪录中。</param>
            <param name="saveMapStatus">是否保存地图状态信息。</param>
            <returns>地图对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.CustomInvoke(SuperMap.IS.Utility.CustomParam,System.Boolean,System.Boolean)">
            <summary>
            根据自定义的参数来执行自定义的操作。
            </summary>
            <param name="customParam">自定义操作参数</param>
            <param name="addToHistory">是否添加到历史纪录中。</param>
            <param name="saveMapStatus">是否保存地图状态。</param>
            <returns>自定义操作结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ClearCache">
            <summary>
            清除所有地图的缓存。
            </summary>
            <returns>操作是否成功。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ClearCache(System.String)">
            <summary>
            清除缓存。
            </summary>
            <param name="mapName">要清除的缓存所在的地图名。如果为空（null或空字符串），则清除默认地图的缓存。</param>
            <returns>操作是否成功。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ClearCache(System.String,SuperMap.IS.Utility.MapRect)">
            <summary>
            清除某一指定范围的缓存。
            </summary>
            <param name="mapName">要清除的缓存所在的地图名。如果为空（null或空字符串），则清除默认地图的缓存。</param>
            <param name="clearBounds">要清除的缓存的地理范围。</param>
            <returns>操作是否成功。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetCachedReferBounds(System.String,System.Int32,System.Int32)">
            <summary>
            获取地图对应的缓存参考范围。
            </summary>
            <param name="mapName">地图名</param>
            <param name="tileWidth">缓存图片的宽度</param>
            <param name="tileHeight">缓存图片的高度</param>
            <returns>缓存参考范围</returns>
            <remarks>
            策略： 如果存在相应的 .sci 文件，就读取该文件中的范围，否则，
            如果在 SuperMapIS.config 文件中有设置，就读取该设置，否则，
            以当时实际取到的地图范围为准。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetCurrentMapParam">
            <summary>
            获取当前的 MapParam。
            </summary>
            <returns>返回当前的地图参数。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetCurrentMapImage">
            <summary>
            获取当前的 MapImage。
            </summary>
            <returns>返回MapImage。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.SetCurrentMapParam(SuperMap.IS.Utility.MapParam)">
            <summary>
            设置当前的 MapParam。
            </summary>
            <param name="mapParam">地图参数。</param>
            <remarks>
            <see cref="T:SuperMap.IS.Web.TcpMap"/>的地图相关操作均是以当前地图参数为基础，操作返回的地图参数也保存在当前地图参数中。
            因此，在调用这类方法（例如<see cref="M:SuperMap.IS.Web.TcpMap.Zoom(SuperMap.IS.Utility.MapCoord,System.Double)"/>、<see cref="M:SuperMap.IS.Web.TcpMap.Pan(System.Double,System.Double)"/>等）之前，请先设置<see cref="T:SuperMap.IS.Web.TcpMap"/>的当前地图参数。
            <para><see cref="T:SuperMap.IS.Web.TcpMap"/>的当前地图参数可以通过调用本方法来手动设置，也可以通过调用地图操作（例如<see cref="M:SuperMap.IS.Web.TcpMap.GetDefaultMapImage"/>、<see cref="M:SuperMap.IS.Web.TcpMap.GetMapImage(SuperMap.IS.Utility.MapParam)"/>等）来将返回的地图参数自动保存到当前地图参数中。</para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetLastMapParam(System.String)">
            <summary>
            在历史中寻找最新的同名地图。
            </summary>
            <param name="mapName">地图名称</param>
            <returns>返回该同名地图的地图参数</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.SaveMapParamToSession(SuperMap.IS.Utility.MapParam)">
            <summary>
            把 MapParam 保存至当前的 Session 中。
            </summary>
            <param name="mapParam">地图参数</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetMapParamFromSession">
            <summary>
            从当前的 Session 中获取 MapParam 。
            </summary>
            <returns>返回该MapParam</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetMapParam">
            <summary>
            获取当前对象的 MapParam 。
            </summary>
            <returns>返回该MapParam</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetMapImageFromSession">
            <summary>
            从当前的 Session 中获取 MapImage。
            </summary>
            <returns>返回该MapImage</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.InvokingMapService(SuperMap.IS.Utility.MapParam@)">
            <summary>
            调用 MapService 之前的操作。在这里对将要传给 MapService 的 mapParam 进行设置。
            </summary>
            <param name="mapParam">传给MapService的地图参数mapParam.</param>
            <returns>是否需要继续调用。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.InvokingMapService(SuperMap.IS.Utility.MapParam[]@)">
            <summary>
            调用 MapService 之前的操作。在这里对将要传给 MapService 的 mapParams 进行设置。
            </summary>
            <param name="mapParams">传给MapService的地图参数mapParam.</param>
            <returns>是否需要继续调用。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.InvokedMapService(SuperMap.IS.Utility.MapImage@,System.Boolean)">
            <summary>
            调用 MapService 之后的操作。在这里对 MapService 传回的 mapImage 进行设置。
            </summary>
            <param name="mapImage">传给MapService的地图参数mapParam.</param>
            <param name="invokingCancelled">InvokingMapService 操作是否被取消。</param>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.InvokedMapService(SuperMap.IS.Utility.MapImage[]@,System.Boolean)">
            <summary>
            调用 MapService 之后的操作。在这里对 MapService 传回的 mapImages 进行设置。
            </summary>
            <param name="mapImages">mapImage集合。</param>
            <param name="invokingCancelled">InvokingMapService 操作是否被取消。</param>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Interpolate(SuperMap.IS.Utility.InterpolateParam)">
            <summary>
            使用内插方法估算单元格的值，生成Grid数据集。
            </summary>
            <param name="param">表面内插参数。</param>
            <returns>返回表面内插的结果。</returns>
            <remarks>
            对于一个区域，如果只有部分离散点数据已知，要想创建或者模拟一个表面或者场，需要对未知点的值进行估计，
            通常采用的是内插表面的方法。这里提供多种内插方法，用于模拟或者创建一个表面，分别是：距离反比权重法（IDW）、普通克吕金插值方法、普通克吕金插值方法（利用四叉树方法搜索插值点）、
            普通径向基函数RBF插值法，径向基函数RBF插值法（利用四叉树方法搜索插值点）。选用何种方法进行内插，通常取决于样点数据的分布和要创建表面的类型。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Aggregate(SuperMap.IS.Utility.AggregateParam)">
            <summary>
            栅格聚合操作。
            </summary>
            <param name="param">设置栅格聚合操作需要的参数。</param>
            <returns>返回栅格聚合操作结果。</returns>
            <remarks>
            栅格聚合操作是以整数倍缩小栅格分辩率，生成一个新的栅格的过程，每个栅格的值由其包含的原栅格的值共同决定，可以取包含栅格的和、最大值、最小值、平均值、中数。
            </remarks>
            <example>
            <code>
                    AggregateParam aggregateParam = new AggregateParam();
                    aggregateParam.Dataset = "DEM@dem";
                    aggregateParam.CellFactor = 4;
                    aggregateParam.AggregationType = AggregationType.Sum;
                    aggregateParam.Expand = true;
                    aggregateParam.Nodata = true;
                    aggregateParam.ResultDataset = "result@dem";
                    aggregateParam.OverwriteIfExists = true;
                    GeneralizeResult generalizeResult = m_Map.Aggregate(aggregateParam);  // m_Map 为TcpMap对象。
                    if (!generalizeResult.Succeed)
                        MessageBox.Show("聚合失败！");
                    MessageBox.Show(generalizeResult.ResultDataset);
            </code>
            </example> 
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Reclass(SuperMap.IS.Utility.ReclassParam)">
            <summary>
            栅格重分级操作。
            </summary>
            <param name="param">设置栅格重分级操作需要的参数。</param>
            <returns>栅格重分级操作结果。</returns>
            <remarks>
            栅格重分级操作就是重新定义栅格数据集中每个格网的数值。
            </remarks>
            <example>
            示例一：使用单值映射关系重分级。
            <code>
            ReclassParam reclassParam = new ReclassParam();
            reclassParam.Dataset = "DEM@dem";
            reclassParam.OutputGridFormat = PixelFormat.Float;
            reclassParam.OverwriteIfExists = true;
            reclassParam.RemapTable = new RemapTable();
            reclassParam.RemapTable.BreakValues = new double[4] { 1,350,700,1200};
            reclassParam.RemapTable.ChangeMissingValueTo = 20.00;
            reclassParam.RemapTable.ChangeMissingValueToNoData = false;
            reclassParam.RemapTable.ChangeNoDataTo = 10 ;
            reclassParam.RemapTable.MappingType = RemapType.Unique;
            reclassParam.RemapTable.NewValues = new double[4] { 100,200,300,400};
            reclassParam.RemapTable.NewValuesCount = 4;
            reclassParam.RemapTable.RetainMissingValue = false;
            reclassParam.RemapTable.RetainNoData = false;
            reclassParam.ResultDataset = "result@dem";
            
            GeneralizeResult result = m_map.Reclass(reclassParam);  // m_map为tcpmap对象。
            if (!result.Succeed)
            {
                MessageBox.Show("计算失败！" + result.Message);
             }
              MessageBox.Show( result.ResultDataset); 
            </code>
            <para>示例二：使用区间映射关系重分级。</para>
            <code>
            ReclassParam reclassParam = new ReclassParam();
            reclassParam.Dataset = "DEM@dem";
            reclassParam.OutputGridFormat = PixelFormat.Float;
            reclassParam.OverwriteIfExists = true;
            reclassParam.RemapTable = new RemapTable();
            reclassParam.RemapTable.BreakValues = new double[] { 260, 540, 541,827,828,1111,1112, 1395 };
            reclassParam.RemapTable.ChangeMissingValueTo = 20.00;
            reclassParam.RemapTable.ChangeMissingValueToNoData = false;
            reclassParam.RemapTable.ChangeNoDataTo = 10;
            reclassParam.RemapTable.MappingType = RemapType.Unique;
            reclassParam.RemapTable.NewValues = new double[4] { 100, 200, 300, 400 };
            reclassParam.RemapTable.NewValuesCount = 4;
            reclassParam.RemapTable.RetainMissingValue = false;
            reclassParam.RemapTable.RetainNoData = false;
            reclassParam.ResultDataset = "result@dem";
            
            GeneralizeResult result = m_map.Reclass(reclassParam);   // m_map为tcpmap对象。
            if (!result.Succeed)
            {
                MessageBox.Show("计算失败！" + result.Message);
             }
              MessageBox.Show(result.ResultDataset); 
            </code>
            </example>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Replace(SuperMap.IS.Utility.ReplaceParam)">
            <summary>
            栅格数据查找替换操作。
            </summary>
            <param name="param">设置栅格数据查找替换操作参数。</param>
            <returns>返回栅格数据查找与替换操作的结果。</returns>
            <remarks>
            该方法主要通过一个属性表数据集来设置要查找的栅格数据，以及要替换的数据。使用该方法可以实现查找并替换原栅格数据集中栅格数据的目标。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Resample(SuperMap.IS.Utility.ResampleParam)">
            <summary>
            栅格重采样操作。
            </summary>
            <param name="param">栅格重采样操作参数。</param>
            <returns>栅格重采样操作结果。</returns>
            <remarks>
            <para>栅格数据进行配准或纠正、投影等几何变换后，栅格的每个格子中心位置通常会发生变化，其在输入栅格中的位置不一定是整数的行列号，因此需要根据输出栅格上每个格子在输入栅格中的位置，对输入栅格按一定规则进行重采样，进行栅格值的插值计算，建立新的栅格矩阵。</para>
            <para>重采样方法同样会应用在不同分辩率的栅格数据之间进行代数运算时，需要将栅格大小统一到一个指定的分辩率上，此时就需要对栅格进行重采样。</para>
            <para>栅格重采样的方法通常有三种：最邻近法、双线性内插法和三次卷积内插法；关于此三种方法的差异和适用范围，请参阅<see cref="T:SuperMap.IS.Utility.ResampleType"/>。</para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.IsoLine(System.String,SuperMap.IS.Utility.IsoLineParam)">
            <summary>
            根据栅格数据集进行提取等值线操作。
            </summary>
            <param name="gridDataset">要进行提取等值线操作的栅格数据集标识，可以是 Grid 或 DEM 数据集。</param>
            <param name="param"> 提取等值线操作参数。</param>
            <returns>提取等值线操作结果。</returns>
            <remarks>由栅格数据提取等值线的计算结果和栅格数据本身的特性密切相关。
            不能期望从一个低精度的栅格数据得出一个高精度的等值线模型。</remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.IsoLine(System.String,System.String,SuperMap.IS.Utility.InterpolateType,System.Double,SuperMap.IS.Utility.IsoLineParam)">
            <summary>
            根据离散点数据集进行提取等值线操作。
            </summary>
            <param name="pointDataset">离散点数据集标识，形如“point@changchun”。该数据集的属性表中存储了要生成等值线的值字段。</param>
            <param name="pointValueField">离散点数据集中的值字段名称。 </param>
            <param name="interpolateType">使用的插值方法。可以选择 TIN，IDW，Krig 或样条等方法进行插值。使用 Krig 方法插值时，点数据集中的采样点至少应大于8个。 </param>
            <param name="gridResolution">使用IDW、Krig 或样条曲面的方法进行插值时，中间结果 DEM 的分辩率，通常为 20。</param>
            <param name="param"> 提取等值线操作参数。</param>
            <returns>提取等值线操作结果。</returns>
            <seealso cref="T:SuperMap.IS.Utility.InterpolateType"/>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.IsoLine(SuperMap.IS.Utility.MapCoord[],System.Double[],SuperMap.IS.Utility.InterpolateType,System.Double,SuperMap.IS.Utility.IsoLineParam)">
            <summary>
            根据离散点对象数组进行提取等值线操作。
            </summary>
            <param name="pointPositions">离散点坐标数组。</param>
            <param name="pointValues">离散点的值数组。</param>
            <param name="interpolateType">使用的插值方法。可以选择 TIN，IDW，Krig 或样条等方法进行插值。使用 Krig 方法插值时，离散点至少应大于8个。</param>
            <param name="gridResolution">使用IDW、Krig 或样条曲面的方法进行插值时，中间结果 DEM 的分辩率，通常为20。</param>
            <param name="param">提取等值线操作参数。</param>
            <returns>提取等值线操作结果。</returns>
            <seealso cref="T:SuperMap.IS.Utility.InterpolateType"/>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GridClip(SuperMap.IS.Utility.GridClipParam)">
            <summary>
            栅格裁剪操作。
            </summary>
            <param name="clipParam"> 栅格裁剪操作参数。</param>
            <returns>栅格裁剪操作结果。</returns>
            <remarks>栅格区域裁剪对Image、Grid/DEM 数据集进行真正裁剪，而对打开的 ECW 以及 MrSID 影像进行显示裁剪，并不裁剪原数据。此方法不支持裁剪 SIT 和影像插件 数据。</remarks>
            <example>
            <code>
                        GridClipParam gridClipParam = new GridClipParam();
                        gridClipParam.Dataset = "DEM@dem";
                        gridClipParam.ClipRegion = new Geometry();
                        gridClipParam.ClipRegion.Feature = FeatureType.Polygon;
                        gridClipParam.ClipRegion.Parts = new int[1] { 4 };
                        gridClipParam.ClipRegion.Points = new MapCoord[4];
                        gridClipParam.ClipRegion.Points[0] = new MapCoord(36379000,2782250);
                        gridClipParam.ClipRegion.Points[1] = new MapCoord(36380970, 2782317);
                        gridClipParam.ClipRegion.Points[2] = new MapCoord(36380925, 2781012);
                        gridClipParam.ClipRegion.Points[3] = new MapCoord(36378909, 2781012);
                        
                         gridClipParam.ClipInRegion = true;
                         gridClipParam.ResultDataset = "Result@dem";
                         gridClipParam.OverwriteIfExists = true;
            
                         GridClipResult gridClipResult = m_map.GridClip(gridClipParam);
                         if(!gridClipResult.Succeed)
                            MessageBox.Show("裁剪失败！");
                         MessageBox.Show(gridClipResult.ResultDataset); 
            </code>
            </example>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.IsoRegion(SuperMap.IS.Utility.IsoRegionParam)">
            <summary>
            根据Grid或者DEM提取等值面。
            </summary>
            <param name="param"> 提取等值面操作参数。</param>
            <returns>提取等值面操作结果。</returns>
            <remarks>由栅格数据提取等值面的计算结果和栅格数据本身的特性密切相关。
            不能期望从一个低精度的栅格数据得出一个高精度的等值面模型。</remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.IsoRegion(System.String,System.String,SuperMap.IS.Utility.InterpolateParam,SuperMap.IS.Utility.IsoRegionParam)">
            <summary>
            根据离散点数据集进行提取等值面操作。
            </summary>
            <param name="pointDataset">离散点数据集标识，形如“point@changchun”。该数据集的属性表中存储了要生成等值面的值字段。</param>
            <param name="pointValueField">离散点数据集中的值字段名称。 </param>
            <param name="interpolateParam">离散点数据集进行插值操作参数</param>
            <param name="param">提取等值面操作参数。</param>
            <returns>提取等值面操作结果。</returns>
            <remarks>
            在使用离散点数据集进行提取等值面的方法中，方法中存在一个内插值参数interpolateParam，内插值参数的中间结果Dataset、FieldName、OverwriteIfExists、ResultDataset、Bounds由内部决定，
            方法中参数interpolateParam不必对其进行任何设置。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.IsoRegion(SuperMap.IS.Utility.MapCoord[],System.Double[],SuperMap.IS.Utility.InterpolateParam,SuperMap.IS.Utility.IsoRegionParam)">
            <summary>
            根据离散点对象数组进行提取等值面操作。
            </summary>
            <param name="pointPositions">离散点坐标数组。</param>
            <param name="pointValues">离散点的值数组。</param>
            <param name="interpolateParam">离散点进行插值操作参数</param>
            <param name="param">提取等值面操作参数。</param>
            <returns></returns>
            <remarks>
            在使用离散点进行提取等值面的方法中，方法中存在一个内插值参数interpolateParam，内插值参数的中间结果Dataset、FieldName、OverwriteIfExists、ResultDataset、Bounds由内部决定，
            方法中参数interpolateParam不必对其进行任何设置。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GridCompare(SuperMap.IS.Utility.GridCompareParam)">
            <summary>
            栅格比较。该方法用于对一个栅格数据集逐行逐列与另一栅格数据集或者一个常数比较，判断他们是否满足一定的关系，如相等，大于，小于等。
            </summary>
            <param name="gridCompareParam">栅格比较参数。通过该参数设置用于比较的栅格数据集，常数，以及对比的关系（大于、等于、小于等）。</param>
            <returns>栅格比较结果。返回栅格比较操作是否成功，生成的结果数据集的名称等。</returns>
            <remarks>
            进行比较的两个栅格数据集或者栅格数据集与常量，如果两者符合对比关系（相等，大于、小于等），则结果栅格数据集中相应像元值为1，不符合对比关系则为0。
            当指定了源栅格数据集时会使用源栅格数据集和目标栅格数据集进行栅格比较,只有在没有指定源栅格数据集的情况下才会使用常数和目标栅格数据集进行比较。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.NeighbourStatistics(SuperMap.IS.Utility.NeighbourStatisticsParam)">
            <summary>
            邻域统计分析。
            </summary>
            <param name="neighbourStatisticsParam">邻域统计分析参数。</param>
            <returns>邻域统计分析较结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.OverlayStatistics(SuperMap.IS.Utility.OverlayStatisticsParam)">
            <summary>
            栅格分带统计分析。
            </summary>
            <param name="overlayStatisticsParam">分带统计分析参数。</param>
            <returns>分带统计分析结果。</returns>
            <remarks>注意：对于带状栅格数据，如果栅格值很多，进行分带统计时运算量会比较大。</remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GridExecute(SuperMap.IS.Utility.GridExecuteParam)">
            <summary>
            栅格表达式运算。
            </summary>
            <param name="gridExecuteParam">栅格表达式运算参数。</param>
            <returns>栅格表达式运算结果。</returns>
            <remarks><para>（1）数学表达式应为一个形如下式的字符串：</para>
            <para>[DatasourceAlias1.Raster1] + [DatasourceAlias2.Raster2] </para>
            <para>使用“ [数据源别名.数据集名] ”来指定参加运算的栅格数据集；注意要使用方括号把名字括起来。如果栅格计算中有小于零的负值，注意要加小括号，如：</para>
            <para>[DatasourceAlias1.Raster1] - ([DatasourceAlias2.Raster2])</para>
            <para>（2）SuperMap中的栅格代数计算支持四则运算符（"+" 、"-" 、"*" 、"/" ）、条件运算符（"&gt;" 、"&gt;=" 、"&lt;" 、"&gt;=" 、"&lt;&gt;" 、"==" ）、逻辑运算符（"|" 、"&amp;" 、"Not()" 、"^" ）
            和一些常用数学函数（"abs()" 、"acos()" 、"asin()" 、"atan()" 、"acot()" 、"cos()" 、"cosh()" 、"cot()" 、"exp()" 、"floor()" 、"mod(,)" 、"ln()" 、"log()" 、"pow(,)" 、
            "sin()" 、"sinh()" 、"sqrt()" 、"tan()" 、"tanh()" 、"Isnull()" 、"Con(,,)" ）。</para>
            <para>（3）代数运算的表达式各个函数之间可以嵌套使用，直接用条件运算符计算的栅格结果都为二值（如大于、小于等），即满足条件的用1代替，不满足的用0代替，
            若想使用其他值来表示满足条件和不满足条件的取值，可以使用条件提取函数Con(,,)。
            例如："Con(IsNull([SURFACE_ANALYST.Dem3] ) ,100,Con([SURFACE_ANALYST.Dem3] > 100,[SURFACE_ANALYST.Dem3] ,-9999) ) " ，
            该表达式的含义是：栅格数据集 Dem3 在别名为 SURFACE_ANALYST 的数据源中，将其中无值栅格变为 100，剩余栅格中，大于100 的，值保持不变，小于等于 100 的，值改成 -9999。</para>
            </remarks>
            <example><code>
                    GridExecuteParam excuteParam = new GridExecuteParam();
                    excuteParam.MathExpression = "[gridcompute.cda51_2]+[gridcompute.gda51_2]"; // cda51_2 和 gda51_2 是gridcompute数据源中的DEM数据集
                    excuteParam.ResultDataset = "result@gridcompute";
                    excuteParam.OverwriteIfExists = true;
                    
                    GridExecuteResult result = m_map.GridAnalystOperator.GridExecute(excuteParam);  // m_map 是TcpMap对象
                    GridExecuteResult result = m_map.GridExecute(excuteParam);
                    if (!result.Succeed)
                    {
                        MessageBox.Show("计算失败！" + result.Message);
                    }
                    MessageBox.Show(result.ResultDataset); 
            </code></example>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetGridPixelValue(System.String,System.String,SuperMap.IS.Utility.MapCoord)">
            <summary>
            获取栅格图层的某一指定地理位置的像素值。
            </summary>
            <param name="mapName">删格图层所在的地图名称。</param>
            <param name="layerName">栅格图层的名称。</param>
            <param name="position">指定的地理位置，投影坐标系上的坐标对。</param>
            <returns>返回像素值，int类型。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.SetGridPixelValue(System.String,System.String,SuperMap.IS.Utility.MapCoord,System.Int32)">
            <summary>
            设置栅格图层的某一指定地理位置的像素值。
            </summary>
            <param name="mapName">删格图层所在的地图名称。</param>
            <param name="layerName">栅格图层的名称。</param>
            <param name="position">指定的地理位置，投影坐标系上的坐标对。</param>
            <param name="value">设置的像素值。</param>
            <returns>设置的像素值。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetGridValue(System.String,System.String,SuperMap.IS.Utility.MapCoord)">
            <summary>
            获取栅格图层的某一指定地理位置的栅格值。
            </summary>
            <param name="mapName">地图名称。</param>
            <param name="layerName">栅格图层的名称。</param>
            <param name="position">图层中的指定位置。</param>
            <returns>返回该指定位置的栅格值，double类型。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.SetGridValue(System.String,System.String,SuperMap.IS.Utility.MapCoord,System.Double)">
            <summary>
            设置栅格图层的某一指定地理位置的栅格值。
            </summary>
            <param name="mapName">地图名称。</param>
            <param name="layerName">栅格图层的名称。</param>
            <param name="position">指定的地理位置，投影坐标系上面的坐标对。</param>
            <param name="value">设定的栅格值。</param>
            <returns>返回双精度型的栅格值。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.RasterToVector(SuperMap.IS.Utility.RasterToVectorParam)">
            <summary>
            栅格数据集转换成矢量数据集。
            </summary>
            <param name="rasterToVectorParam">栅格数据集转换成矢量数据集操作参数。</param>
            <returns>栅格数据集转换成矢量数据集操作结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ServiceArea(SuperMap.IS.Utility.MapCoord[],System.Double[],System.Boolean,System.Boolean,System.String,System.String,SuperMap.IS.Utility.NetworkParams)">
            <summary>
            根据坐标进行服务区分析。
            </summary>
            <param name="centerPoints">分析区域的中心点坐标。</param>
            <param name="serviceRanges">服务区半径，单位与路线上的耗费有关，即与网络分析设置的正向、方向阻力字段的单位一致。</param>
            <param name="isFromSite">是否从中心开始查找。</param>
            <param name="notOverlap">是否不叠加。</param>
            <param name="resultRouteName">结果集名称。</param>
            <param name="serviceAreaName">服务区名称。</param>
            <param name="networkParams">网络分析参数。</param>
            <returns>返回布尔值表示是否分析成功。</returns>
            <remarks>
            <para>
            服务区是以指定点为中心，在一定阻力范围内，包含所有可通达边的一个区域。服务区分析为网络上指定的位置点计算服务范围。
            </para>
            <para>
            分析成功之后，通过参数返回两个数据集，一个表示各个服务中心点的服务路径，另一个表示各个服务中心点的服务区域。在服务区域数据集中，有该服务区的总耗费和总距离。
            </para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.ServiceArea(System.Int32[],System.Double[],System.Boolean,System.Boolean,System.String,System.String,SuperMap.IS.Utility.NetworkParams)">
            <summary>
            根据节点ID进行服务区分析。
            </summary>
            <param name="centerIDs">中心点ID数组。</param>
            <param name="serviceRanges">服务区半径，单位与路线上的耗费有关，即与网络分析设置的正向、方向阻力字段的单位一致。</param>
            <param name="isFromSite">是否从中心开始查找。</param>
            <param name="notOverlap">是否不叠加。</param>
            <param name="resultRouteName">结果集名称。</param>
            <param name="serviceAreaName">服务区名称。</param>
            <param name="networkParams">网络分析参数。</param>
            <returns>返回布尔值表示是否分析成功。</returns>
            <remarks>
            <para>
            服务区是以指定点为中心，在一定阻力范围内，包含所有可通达边的一个区域。服务区分析为网络上指定的位置点计算服务范围。
            </para>
            <para>
            分析成功之后，通过参数返回两个数据集，一个表示各个服务中心点的服务路径，另一个表示各个服务中心点的服务区域。在服务区域数据集中，有该服务区的总耗费和总距离。
            </para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.UpStream(SuperMap.IS.Utility.StreamParam)">
            <summary>
            上游追踪。
            </summary>
            <param name="streamParam">追踪参数，包括分析起点、流向字段、网络参数、返回结果设置等。</param>
            <returns>追踪结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.DownStream(SuperMap.IS.Utility.StreamParam)">
            <summary>
            下游追踪。
            </summary>
            <param name="streamParam">追踪参数，包括分析起点、流向字段、网络参数、返回结果设置等。</param>
            <returns>追踪结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GenerateGeometryByEventTable(SuperMap.IS.Utility.GenerateGeometryByEventTableParam)">
            <summary>
            通过事件表生成空间数据集。成功则返回定位后的点或者线数据集的标识（形如"数据集名称@数据源别名"，例如：Country@World。），如果是线事件表，生成的是路由数据集的标识（形如"数据集名称@数据源别名"，例如：Country@World。）。
            </summary>
            <returns>生成的空间数据集的标识（形如"数据集名称@数据源别名"，例如：Country@World。）。</returns>
            <remarks><para>
            （1）事件表：事件表是用属性表的方式记录点或者线事件发生所在的道路、刻度、点事件的信息（如交通事故发生地的天气状况、驾驶者的酒精含量、当时的车速等）、
            道路的路况（路面宽度、铺设材料等）属性，根据已有的路由数据，事件表可以被定位到空间上，生成相应的点或者线图层。</para>
            <para>（2）点事件表参考道路数据可以生成点数据；线事件表参考道路数据可以生成线数据（路由数据集）。</para>
            <para>（3）并非所有的事件都可以成功生成空间数据，在生成空间数据时，通常有几种未能成功定位的错误类型，该信息在事件表生成空间数据之后，会被写到事件表数据集中。
            点事件的错误信息字段有三类描述：定位成功、无对应路由、无对应刻度；线事件的错误信息字段有五类描述：定位成功、无对应路由、部分匹配、完全不匹配、首尾刻度相同。</para>
            </remarks>
            <param name="param">事件表生成空间数据集的参数设置对象。</param>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Logistics(System.Int32[],System.Int32[],System.Boolean,SuperMap.IS.Utility.RouteParam)">
            <summary>
            物流配送，根据ID
            </summary>
            <param name="centerIDs">配送中心点SmNodeID数组</param>
            <param name="targetIDs">配送目的地SmNodeID数组</param>
            <param name="totalMinCost">配送模式是否是总和最小</param>
            <param name="routeParam">路径分析参数</param>
            <returns>返回的物流配送的结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Logistics(SuperMap.IS.Utility.MapCoord[],SuperMap.IS.Utility.MapCoord[],System.Boolean,SuperMap.IS.Utility.RouteParam)">
            <summary>
             物流配送，根据路由节点的坐标数组
            </summary>
            <param name="centerPoints">配送中心点坐标数组</param>
            <param name="targetPoints">配送目的地坐标数组</param>
            <param name="totalMinCost">配送模式是否是总和最小</param>
            <param name="routeParam">路径分析参数</param>
            <returns>返回的物流配送的结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Allocate(SuperMap.IS.Utility.AllocateParam)">
            <summary>
            资源分配。
            </summary>
            <param name="allocateParam">资源分配参数。</param>
            <returns>资源分配结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.LocationsAllocate(SuperMap.IS.Utility.LocationsAllocateParam)">
            <summary>
            选址分区。
            </summary>
            <param name="locationsAllocateParam">选址分区参数。</param>
            <returns>选址分区结果。</returns>
            <remarks>
            为一个或多个待建的设施选定最佳或最优的地址以使需求方以一种最高效的方式获取服务或者商品。这个模型
            不仅要决定设施的分布状况，还要将需求点的需求分配到相应的设施中去，因而称之为选址分区。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetWorkspaceInfo">
            <summary>
            获取工作空间的相关信息。如地图、数据源、数据集等，但不包括具体的图幅信息。
            </summary>
            <returns>工作空间的相关信息。</returns>
            <remarks>异构集群时，只能获取其中一个工作空间的信息。</remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.GetDatasetInfo(SuperMap.IS.Utility.Datasource,SuperMap.IS.Utility.Dataset)">
            <summary>
            获取数据集及其图幅信息。
            </summary>
            <param name="datasource">数据源信息。如 ID 或名字。</param>
            <param name="dataset">数据集信息。如 ID 或名字。</param>
            <returns>数据集及其相关信息。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Flood(SuperMap.IS.Utility.FloodParam)">
            <summary>
            根据三维地形和水位高度，计算淹没的区域。
            </summary>
            <param name="floodParam">淹没范围分析参数。
            <para>通过该对象设置淹没分析所需要的参数，如淹没高度（<see cref="F:SuperMap.IS.Utility.FloodParam.Height"/>），要计算的三维地形的数据集标识（<see cref="F:SuperMap.IS.Utility.FloodParam.Dataset"/>），形如 数据集名@数据源名 。</para>
            <para>如果只需要计算三维地形某个区域内的淹没范围，可以通过<see cref="F:SuperMap.IS.Utility.FloodParam.Region"/>指定。</para>
            </param>
            <returns>淹没范围分析结果。</returns>
            <example>
            <code>
            FloodParam floodParam = new FloodParam();
            floodParam.Dataset = "DEM@dem";
            floodParam.Height = 600;
            floodParam.Highlight = new Highlight();
            floodParam.Highlight.HighlightResult = true;
            floodParam.Region = null;
            floodParam.ReturnFloodRegion = true;
            
            FloodResult floodResult = m_map.Flood(floodParam);  // m_map 是 TcpMap对象
            if (!floodResult.Succeed)
                MessageBox.Show("淹没分析失败！");
            
            string mapUrl = floodResult.MapResult.MapUrl;
            this.pictureBox1.InitialImage = null;
            this.pictureBox1.ImageLocation = mapUrl;
            this.pictureBox1.Refresh();
            </code>
            </example>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.CutFill(SuperMap.IS.Utility.CutFillParam)">
            <summary>
            填方和挖方计算。
            </summary>
            <param name="cutFillParam">填方和挖方计算参数。</param>
            <returns>填方和挖方计算结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.CalculateViewShed(SuperMap.IS.Utility.CalculateViewShedParam)">
            <summary>
            计算可视域。
            </summary>
            <param name="calculateViewShedParam">视域分析参数。</param>
            <returns>视域分析结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Aspect(SuperMap.IS.Utility.AspectParam)">
            <summary>
            坡向计算。
            </summary>
            <param name="aspectParam">坡向计算参数。</param>
            <returns>坡向计算结果。如果坡向计算成功，将返回生成的坡向图的数据集名称。</returns>
            <remarks>坡向是指坡面的朝向，它表示地形表面某处最陡的下坡方向。坡向以度为单位，按顺时针方向从0度（正北方向）到360度来度量。通常被计
            算坡度的栅格，用周围的邻域单元的栅格值来参与运算。水平的坡没有方向，被赋值为-1。</remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Slope(SuperMap.IS.Utility.SlopeParam)">
            <summary>
            坡度计算。
            </summary>
            <param name="slopeParam">坡度计算参数。</param>
            <returns>坡度计算结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.SurfaceArea(SuperMap.IS.Utility.SurfaceAreaParam)">
            <summary>
            计算指定区域在 DEM 上的表面积。 
            </summary>
            <param name="surfaceAreaParam">三维表面积计算参数。</param>
            <returns>三维表面积。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.SurfaceLength(SuperMap.IS.Utility.SurfaceLengthParam)">
            <summary>
            计算指定二维线在 DEM 上的表面长度。 
            </summary>
            <param name="surfaceLengthParam">栅格表面长度计算参数。</param>
            <returns>表面长度。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.IsVisible(SuperMap.IS.Utility.IsVisibleParam)">
            <summary>
            判断 DEM 上两点之间的通视性。返回true，表示两点通视；否则表示两点不通视。
            </summary>
            <remarks>该方法可以同时判断多个点之间的通视情况。设置方法如下：
            <para>1、通过<see cref="F:SuperMap.IS.Utility.IsVisibleParam.Points"/>设置要分析的点对象，如point1，point2，point3。</para>
            <para>2、设置DEM数据集名称-<see cref="F:SuperMap.IS.Utility.IsVisibleParam.Dataset"/>。</para>
            <para>通过该方法获取的结果为<see cref="T:SuperMap.IS.Utility.IsVisibleResult"/>对象，两点间的通视性可以通过<see cref="F:SuperMap.IS.Utility.IsVisibleResult.Succeeds"/>获取。</para>
            <para>如：<see cref="F:SuperMap.IS.Utility.IsVisibleResult.Succeeds"/>[0] 代表 point1和point2之间的通视性。</para>
            <para>    <see cref="F:SuperMap.IS.Utility.IsVisibleResult.Succeeds"/>[1] 代表 point2和point3之间的通视性。</para>
            <para>    <see cref="F:SuperMap.IS.Utility.IsVisibleResult.Succeeds"/>[2] 代表 point1和point3之间的通视性。</para>
            </remarks>
            <param name="isVisibleParam">通视分析参数。</param>
            <returns>通视分析结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.SurfaceProfile(SuperMap.IS.Utility.SurfaceProfileParam)">
            <summary>
            栅格表面剖面线计算。
            </summary>
            <param name="surfaceProfileParam">栅格表面剖面线计算参数。</param>
            <returns>栅格表面剖面线计算结果。</returns>
            <remarks>剖面线：平面上的折线在地形表面上的投影线，即剖面图表达的是给定线要素上每一点距起点的距离（作为横坐标）及其高程（作为纵坐
            标）构成的剖面线。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.Basin(SuperMap.IS.Utility.BasinParam)">
            <summary>
            划分流域盆地计算，输入栅格的每个像素都会被分配一个唯一的盆地。结果保存在数据集中。
            </summary>
            <param name="basinParam">划分流域盆地计算参数。</param>
            <returns>划分流域盆地计算结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.WaterShed(SuperMap.IS.Utility.WaterShedParam)">
            <summary>
            按照指定条件计算流域汇水盆地。
            </summary>
            <param name="waterShedParam">按照指定条件计算流域汇水盆地参数。</param>
            <returns>按照指定条件计算流域汇水盆地结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.FillSink(SuperMap.IS.Utility.FillSinkParam)">
            <summary>
            填充伪洼地。
            </summary>
            <param name="fillSinkParam">填充伪洼地计算参数。</param>
            <returns>填充伪洼地计算结果</returns>
            <remarks>1.洼地区域是水流方向不合理的地方，可以通过流向来判断洼地，并进行填充。一般，洼地分为两种情况，一种是地表真实形态的反映，
            如冰川或喀斯特地貌，另外一种是数据处理造成的误差。在填充之前计算洼地，有助于了解哪些区域将被填充。
            <para>2.填充洼地通常是进行合理流向计算的前提，如果地形数据中存在一些类似“深沟”的像元，周围的高程值都高于该像元的值，那么它的流向将不易被确定。</para>
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.FlowDirection(SuperMap.IS.Utility.FlowDirectionParam)">
            <summary>
            流向分析。
            </summary>
            <param name="flowDirectionParam">流向分析计算参数。</param>
            <returns>流向分析计算结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.FlowAccumulation(SuperMap.IS.Utility.FlowAccumulationParam)">
            <summary>
            累积汇水量。
            </summary>
            <param name="flowAccumulationParam">累积汇水量计算参数。</param>
            <returns>累积汇水量计算结果。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.CoordTransformate(SuperMap.IS.Utility.MapCoord[],SuperMap.IS.Utility.PJCoordSys,SuperMap.IS.Utility.PJCoordSys)">
            <summary>
            坐标转换。
            </summary>
            <param name="coords">要进行转换的坐标数组。</param>
            <param name="sourceCoordSys">源坐标系。</param>
            <param name="targetCoordSys">目标坐标系。</param>
            <returns>转换后的坐标数组。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.MakeDefaultDotDensityTheme(System.String,System.String,SuperMap.IS.Utility.ColorGradientType)">
            <summary>
            制作默认点密度专题图
            </summary>
            <param name="layerName">制作专题图图层名</param>
            <param name="expression">专题图表达式</param>
            <param name="colorSet">配色方案</param>
            <returns>点密度专题图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.MakeDefaultGraduatedSymbolTheme(System.String,System.String,SuperMap.IS.Utility.ColorGradientType)">
            <summary>
            制作默认等级符号专题图
            </summary>
            <param name="layerName">制作专题图图层名</param>
            <param name="expression">专题图表达式</param>
            <param name="colorSet">配色方案</param>
            <returns>等级符号专题图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.MakeDefaultGraphTheme(System.String,System.String[],SuperMap.IS.Utility.ColorGradientType)">
            <summary>
            制作默认统计专题图
            </summary>
            <param name="layerName">制作专题图图层名</param>
            <param name="expressions">专题图表达式</param>
            <param name="colorSet">配色方案</param>
            <returns>统计专题图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.MakeDefaultRangeTheme(System.String,System.String,System.Int32,SuperMap.IS.Utility.ColorGradientType)">
            <summary>
            制作默认分段专题图
            </summary>
            <param name="layerName">制作专题图图层名</param>
            <param name="expression">专题图表达式</param>
            <param name="breakCount">分级统计专题图的分段点的总数</param>
            <param name="colorSet">配色方案</param>
            <returns>分段专题图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.MakeDefaultUniqueTheme(System.String,System.String,SuperMap.IS.Utility.ColorGradientType,System.Int32,System.Int32)">
            <summary>
            制作默认单值专题图
            </summary>
            <param name="layerName">图层名</param>
            <param name="expression">字段表达式</param>
            <param name="colorSet">配色方案</param>
            <param name="startSmID">分类类别起始ID</param>
            <param name="expectCount">单值专题图中所包括的分类类别的数目</param>
            <returns>单值专题图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.MakeDefaultGridRangeTheme(System.String,System.Int32,SuperMap.IS.Utility.ColorGradientType)">
            <summary>
            制作默认栅格分段专题图
            </summary>
            <param name="layerName">制作专题图图层名</param>
            <param name="breakCount">分级统计专题图的分段点的总数</param>
            <param name="colorSet">配色方案</param>
            <returns>栅格分段专题图对象</returns>
        </member>
        <member name="P:SuperMap.IS.Web.TcpMap.AutoSaveHistory">
            <summary>
            是否自动保存历史记录。
            </summary>
            <remarks>
            一般情况下，该属性值为true，表示每完成一次地图操作，
            都会把当前地图的信息放在历史记录中以便进行历史回溯。但是有些时候，往往一个地图的功能需要进行多次的地图操作，
            而实际上需要放入历史记录中的仅仅是最后一次操作的地图信息，因此，将何种地图信息放入历史记录就需要进行人工干预，
            人为判断并且手动将合适的地图信息加入历史中，在这种情况，该属性值应该设为false，同时使用<see cref="M:SuperMap.IS.Web.TcpMap.SaveStatusToHistory"/>
            方法将地图信息手动加入历史。
            默认情况下，AutoSaveHistory 值为 true。
            </remarks>
        </member>
        <member name="P:SuperMap.IS.Web.TcpMap.SessionContainer">
            <summary>
            会话状态容器。IMap 使用该属性来保存会话状态相关的信息。
            </summary>
            <remarks>
            IMap 需要通过 <see cref="P:SuperMap.IS.Web.TcpMap.SessionContainer"/> 以及 <see cref="P:SuperMap.IS.Web.TcpMap.SessionKey"/> 来唯一确定同一个会话。
            可以给不同的 IMap 提供不同的 <seealso cref="P:SuperMap.IS.Web.TcpMap.SessionContainer"/>，此时 <see cref="P:SuperMap.IS.Web.TcpMap.SessionKey"/> 可以相同也可以不同。
            也可以给不同的 IMap 提供同一个 <seealso cref="P:SuperMap.IS.Web.TcpMap.SessionContainer"/>，只需要设置不同的 <see cref="P:SuperMap.IS.Web.TcpMap.SessionKey"/> 即可。
            </remarks>
        </member>
        <member name="P:SuperMap.IS.Web.TcpMap.SessionKey">
            <summary>
            获取或设置 Session 关键字。IMap 使用该属性来进行唯一标识。
            </summary>
            <remarks>
            IMap 需要通过 <see cref="P:SuperMap.IS.Web.TcpMap.SessionContainer"/> 以及 <see cref="P:SuperMap.IS.Web.TcpMap.SessionKey"/> 来唯一确定同一个会话。
            可以给不同的 IMap 提供不同的 <seealso cref="P:SuperMap.IS.Web.TcpMap.SessionContainer"/>，此时 <see cref="P:SuperMap.IS.Web.TcpMap.SessionKey"/> 可以相同也可以不同。
            也可以给不同的 IMap 提供同一个 <seealso cref="P:SuperMap.IS.Web.TcpMap.SessionContainer"/>，只需要设置不同的 <see cref="P:SuperMap.IS.Web.TcpMap.SessionKey"/> 即可。
            </remarks>
        </member>
        <member name="P:SuperMap.IS.Web.TcpMap.HistoryLength">
            <summary>
            获取或设置地图历史的最大长度。
            </summary>
            <remarks>
            如果设置为 0，就表示不保存地图历史。
            </remarks>
        </member>
        <member name="P:SuperMap.IS.Web.TcpMap.Linkers">
            <summary>
            远程Tcp连接器列表
            </summary>
        </member>
        <member name="T:SuperMap.IS.Web.TcpMap.SerializableTcpLinkerDictionary`2">
            <summary>
            可序列化的TcpLinkerDictionary
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="F:SuperMap.IS.Web.TcpMap.SerializableTcpLinkerDictionary`2.dictionary">
            <summary>
            
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.SerializableTcpLinkerDictionary`2.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.TcpMap.SerializableTcpLinkerDictionary`2.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            实现自 ISerializable 接口。
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:SuperMap.IS.Web.MapFactory">
            <summary>
            地图类工厂。
            所有的地图对象都是通过MapFactory.CreateHttpMap or MapFactory.CreateTcpMap创建。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.MapFactory.CreateTcpMap(SuperMap.IS.Web.TcpLinker)">
            <summary>
            创建 TcpMap。
            </summary>
            <returns>TcpMap</returns>
            <remarks>
            未对返回的 TcpMap 对象的 SessionContainer, SessionKey 等属性进行设置，请自行设置这些属性。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.MapFactory.CreateTcpMap(SuperMap.IS.Web.TcpLinker,System.Int32)">
            <summary>
            创建 TcpMap。
            </summary>
            <param name="tcpLinker">后台连接器</param>
            <param name="historyLength">最大历史长度</param>
            <returns>TcpMap</returns>
            <remarks>
            未对返回的 TcpMap 对象的 SessionContainer, SessionKey 等属性进行设置，请自行设置这些属性。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.MapFactory.CreateCachedMap(SuperMap.IS.Web.TcpLinker)">
            <summary>
            创建 CachedMap。
            </summary>
            <param name="tcpLinker">后台连接器</param>
            <returns>CachedMap</returns>
            <remarks>
            未对返回的 CachedMap 对象的 SessionContainer, SessionKey 等属性进行设置，请自行设置这些属性。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.MapFactory.CreateCachedMap(SuperMap.IS.Web.TcpLinker,System.Int32)">
            <summary>
            创建 CachedMap。
            </summary>
            <param name="tcpLinker">后台连接器</param>
            <param name="historyLength">最大历史长度</param>
            <returns>CachedMap</returns>
            <remarks>
            未对返回的 CachedMap 对象的 SessionContainer, SessionKey 等属性进行设置，请自行设置这些属性。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.MapCacheManager.GetLeveledScale(SuperMap.IS.Utility.MapParam,SuperMap.IS.Utility.MapParam)">
            <summary>
            根据配置得到一个分级之后的比例尺。
            </summary>
            <param name="mapParam">地图参数。</param>
            <param name="defaultMapParam">默认的地图参数。</param>
            <returns>返回分级后的比例尺，double类型。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.MapCacheManager.GetCachedMapImage(SuperMap.IS.Utility.MapParam,SuperMap.IS.ServiceInterface.IMapService,System.Boolean)">
            <summary>
            返回的 MapUrls 以 "|" 符号隔开。图片从左上角开始，至右下角结束。顺序为先左后右，先上后下。
            </summary>
            <param name="mapParam">地图参数。</param>
            <param name="mapService">和地图服务器以Tcp方式进行通讯的对象。</param>
            <param name="levelEnabled">是否分级，布尔值。</param>
            <returns>返回地图以及地图相关描述信息。</returns>
            <remarks>
            目前不支持返回二进制数据形式。如果 mapParam.ImageReturnType 为 ImageReturnType.ReturnBinaryData，
            就不会进行缓存，也不会对 mapParam 进行缓存相关的设置，而是直接调用 mapService 取回地图。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.MapCacheHelper.GetLeveledScale(SuperMap.IS.Utility.MapParam,SuperMap.IS.Utility.MapParam,SuperMap.IS.Web.ScaleOption)">
            <summary>
            其中用到了 MinScale 和 MaxScale，所以需要注意 mapParam 中这两个属性的正确性。
            </summary>
            <param name="mapParam"></param>
            <param name="defaultMapParam"></param>
            <param name="scaleOption"></param>
            <returns></returns>
        </member>
        <member name="M:SuperMap.IS.Web.MapCacheHelper.GetCachedPicCellsCount(SuperMap.IS.Utility.MapRect,SuperMap.IS.Utility.MapParam,SuperMap.IS.Web.CachedMapOption,System.Int32)">
            <summary>
            计算所需要的总的地图单元数。
            </summary>
            <param name="mapBounds">地图范围。</param>
            <param name="param">一个正确的地图参数。</param>
            <param name="option">缓存Map选项，应当是一个校验过的合理值。</param>
            <param name="dpi">每英寸的点数。一般为 96。</param>
            <returns></returns>
            <remarks>没有考虑最大最小比例尺等一些例外情况。</remarks>
        </member>
        <member name="T:SuperMap.IS.Web.MulticastLinker">
            <summary>
            广播方式的连接。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.MulticastLinker.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.MulticastLinker.#ctor(System.String)">
            <summary>
            构造函数。
            </summary>
            <param name="url">URL地址</param>
        </member>
        <member name="T:SuperMap.IS.Web.CachedMap">
            <summary>
            内嵌缓存功能的，和地图服务器以 Tcp 的连接方式进行通讯的对象。继承自TcpMap。
            </summary>
            <remarks>
            地图服务器端必须实现 GetCachedMapImage 接口。否则，将不能正常使用 CachedMap 类的缓存功能。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.#ctor(System.String,System.Int32)">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.#ctor(System.String,System.Int32,System.Collections.IDictionary)">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.#ctor(System.String[],System.Int32)">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.#ctor(System.String[],System.Int32,System.Collections.IDictionary)">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.#ctor(SuperMap.IS.Web.TcpLinker)">
            <summary>
            构造函数。
            </summary>
            <param name="tcpLinker">Tcp协议后台应用的连接器</param>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.Create(System.String,System.Int32,System.Collections.IDictionary)">
            <summary>
            创建一个 CachedMap 对象的实例。
            </summary>
            <param name="address">服务器地址，如果启用了群集，则支持以逗号分隔的多地址访问，或者使用重载函数直接传入数组地址</param>
            <param name="port">服务端口</param>
            <param name="sessionContainer">会话状态容器</param>
            <returns>CachedMap 对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.Create(System.String,System.Int32)">
            <summary>
            创建一个 CachedMap 对象的实例。
            </summary>
            <param name="address">服务器地址，如果启用了群集，则支持以逗号分隔的多地址访问，或者使用重载函数直接传入数组地址</param>
            <param name="port">服务端口</param>
            <returns>CachedMap 对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.Create(System.String[],System.Int32,System.Collections.IDictionary)">
            <summary>
            创建一个 CachedMap 对象的实例。
            </summary>
            <param name="addresses">服务器地址</param>
            <param name="port">服务端口</param>
            <param name="sessionContainer">会话状态容器</param>
            <returns>CachedMap 对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.Create(System.String[],System.Int32)">
            <summary>
            创建一个 CachedMap 对象的实例。
            </summary>
            <param name="addresses">服务器地址数组</param>
            <param name="port">服务端口</param>
            <returns>CachedMap 对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.Create(SuperMap.IS.Web.TcpLinker)">
            <summary>
            创建一个 CachedMap 对象的实例。
            </summary>
            <param name="tcpLinker">Tcp 协议后台应用的连接器</param>
            <returns>CachedMap 对象。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.InvokingMapService(SuperMap.IS.Utility.MapParam@)">
            <summary>
            调用地图服务之前。重写自 TcpMap 类。
            </summary>
            <param name="mapParam">传给 MapService 的地图参数 mapParam 。</param>
            <returns>是否需要继续调用。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.InvokingMapService(SuperMap.IS.Utility.MapParam[]@)">
            <summary>
            调用地图服务之前。重写自 TcpMap 类。
            </summary>
            <param name="mapParams">传给 MapService 的地图参数 mapParam 。</param>
            <returns>是否需要继续调用。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.InvokedMapService(SuperMap.IS.Utility.MapImage@,System.Boolean)">
            <summary>
            调用地图服务之后。重写自 TcpMap 类。
            </summary>
            <param name="mapImage"> mapImage 对象</param>
            <param name="invokingCancelled">InvokingMapService 操作是否被取消。</param>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.InvokedMapService(SuperMap.IS.Utility.MapImage[]@,System.Boolean)">
            <summary>
            调用地图服务之后。重写自 TcpMap 类。
            </summary>
            <param name="mapImages"> mapImage 集合。</param>
            <param name="invokingCancelled">InvokingMapService 操作是否被取消。</param>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.SuperMap#IS#Web#IMap#GetDefaultMapImage(System.String,System.Int32,System.Int32)">
            <summary>
            根据指定的地图名、宽度、高度获取默认地图。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="mapWidth">地图宽度</param>
            <param name="mapHeight">地图高度</param>
            <returns>地图对象</returns>
            <remarks>
            如果启用了比例尺分级，则将会返回对默认地图进行比例尺分级之后的地图。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.SuperMap#IS#Web#IMap#ViewEntire(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            用指定的参数进行全幅显示。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="layerName">图层的名称</param>
            <param name="mapWidth">控件的宽度</param>
            <param name="mapHeight">控件的高度</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.SuperMap#IS#Web#IMap#ClearCache">
            <summary>
            清除所有地图的缓存。
            </summary>
            <returns>操作是否成功。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.SuperMap#IS#Web#IMap#ClearCache(System.String)">
            <summary>
            清除缓存。
            </summary>
            <param name="mapName">要清除的缓存所在的地图名。如果为空（null或空字符串），则清除默认地图的缓存。</param>
            <returns>操作是否成功。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.SuperMap#IS#Web#IMap#ClearCache(System.String,SuperMap.IS.Utility.MapRect)">
            <summary>
            清除某一指定范围的缓存。
            </summary>
            <param name="mapName">要清除的缓存所在的地图名。如果为空（null或空字符串），则清除默认地图的缓存。</param>
            <param name="clearBounds">要清除的缓存的地理范围。</param>
            <returns>操作是否成功。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.SuperMap#IS#Web#IMap#CopyDataset(SuperMap.IS.Utility.CopyDatasetParam,System.String)">
            <summary>
            复制数据集
            </summary>
            <param name="copyDatasetParam">数据集复制参数</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>数据集复制结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.SuperMap#IS#Web#IMap#CreateDataset(SuperMap.IS.Utility.CreateDatasetParam,System.String)">
            <summary>
            创建数据集
            </summary>
            <param name="createDatasetParam">数据集创建参数</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>数据集创建结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.SuperMap#IS#Web#IMap#DeleteDataset(System.String,System.String)">
            <summary>
            删除数据集
            </summary>
            <param name="dataset">要删除的源数据集标识，形如"数据集名称@数据源别名"，例如：Country@World。</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>数据集删除结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.SuperMap#IS#Web#IMap#CopyField(System.String,System.String,System.String,System.String)">
            <summary>
            复制字段。
            </summary>
            <param name="dataset">要复制字段的源数据集标识，形如"数据集名称@数据源别名"，例如：Country@World。</param>
            <param name="sourceFieldName">源字段名称。</param>
            <param name="targetFieldName">目标字段名称。</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>字段操作结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.SuperMap#IS#Web#IMap#CreateField(System.String,SuperMap.IS.Utility.Field,System.Boolean,System.String)">
            <summary>
            创建字段。
            </summary>
            <param name="dataset">要创建字段的源数据集标识，形如"数据集名称@数据源别名"，例如：Country@World。</param>
            <param name="field">要创建的字段信息对象</param>
            <param name="overwriteIfExists">是覆盖已存在的字段</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>字段操作结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.SuperMap#IS#Web#IMap#DeleteField(System.String,System.String,System.String)">
            <summary>
            删除字段。
            </summary>
            <param name="dataset">要删除字段的源数据集标识，形如"数据集名称@数据源别名"，例如：Country@World。</param>
            <param name="fieldName">要删除的字段名称</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>字段操作结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.SuperMap#IS#Web#IMap#SetField(System.String,System.String,SuperMap.IS.Utility.Field,System.String)">
            <summary>
            设置字段。
            </summary>
            <param name="dataset">要设置字段的源数据集标识，形如"数据集名称@数据源别名"，例如：Country@World。</param>
            <param name="fieldName">要设置的字段名称</param>
            <param name="field">要设置的字段信息对象</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>字段操作结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.SuperMap#IS#Web#IMap#UpdateFieldValues(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            更新字段。
            </summary>
            <param name="dataset">要更新字段的源数据集标识，形如"数据集名称@数据源别名"，例如：Country@World。</param>
            <param name="fieldName">要更新的字段名称</param>
            <param name="expression">指定的表达式</param>
            <param name="filter">要更新记录的查询条件，如果 strFilter 为空字符串，则更新表中所有的记录。</param>
            <param name="userID">编辑用户唯一标识</param>
            <returns>字段操作结果</returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.GetCachedMapImagePrivate(SuperMap.IS.Utility.MapParam)">
            <summary>
            返回的 MapUrls 以 "|" 符号隔开。图片从左上角开始，至右下角结束。顺序为先左后右，先上后下。
            </summary>
            <param name="mapParam"></param>
            <returns></returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.GetCachedMapImagePrivate(SuperMap.IS.Utility.MapParam,SuperMap.IS.Web.ScaleOption)">
            <summary>
            返回的 MapUrls 以 "|" 符号隔开。图片从左上角开始，至右下角结束。顺序为先左后右，先上后下。
            </summary>
            <param name="mapParam"></param>
            <param name="scaleOption"></param>
            <returns></returns>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMap.GetPicCellCount(System.Int32,System.Int32)">
            <summary>
            获取图片单元的总数。
            </summary>
            <param name="viewerWidth">视窗宽度</param>
            <param name="viewerHeight">视窗高度</param>
            <returns>返回图片单元的总数，int类型。</returns>
            <remarks>
            <para>本方法计算得到的总数是一个大约的数值，并非精确数值。</para>
            <para>如果将 viewerWidth 或 viewerHeight 设置为小于等于0的值，则将使用当前 MapParam 对应的视窗大小来进行计算。</para>
            </remarks>
        </member>
        <member name="P:SuperMap.IS.Web.CachedMap.Option">
            <summary>
            获取缓存选项。
            </summary>
        </member>
        <member name="P:SuperMap.IS.Web.CachedMap.Cache">
            <summary>
            缓存接口。
            </summary>
        </member>
        <member name="E:SuperMap.IS.Web.CachedMap.OnSettingMapParam">
            <summary>
            将要设置地图参数时的事件。
            </summary>
        </member>
        <member name="T:SuperMap.IS.Web.SettingMapParamEventArgs">
            <summary>
            用于 SettingMapParamEventHandler 的事件参数。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.SettingMapParamEventArgs.MapParam">
            <summary>
            传入的 MapParam，请勿修改此参数的值。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.SettingMapParamEventArgs.SkipScaleLevel">
            <summary>
            是否对当前 MapParam 忽略比例尺分级。
            </summary>
            <remarks>
            如果设置为 true，则当启用比例尺分级的时候，也不会对当前 MapParam 进行比例尺调整。
            </remarks>
        </member>
        <member name="M:SuperMap.IS.Web.SettingMapParamEventArgs.#ctor(SuperMap.IS.Utility.MapParam)">
            <summary>
            构造函数。
            </summary>
            <param name="mapParam">地图参数。</param>
        </member>
        <member name="M:SuperMap.IS.MapCache.CacheHelper.GetCachePreKey(SuperMap.IS.Utility.MapParam)">
            <summary>
            相当于调用 GetCachePreKey(mapParam, CachePreKeyOptions.SkipMapScale | CachePreKeyOptions.SkipImageFormat)。
            </summary>
            <param name="mapParam">地图参数信息。</param>
            <returns>返回 CachePreKey 。</returns>
        </member>
        <member name="M:SuperMap.IS.MapCache.CacheHelper.GetLegendCachePreKey(SuperMap.IS.Utility.MapParam)">
            <summary>
            相当于调用 GetCachePreKey(mapParam, CachePreKeyOptions.SkipMapScale | CachePreKeyOptions.SkipImageFormat | CachePreKeyOptions .SkipMinMaxScales)。
            </summary>
            <param name="mapParam">地图参数信息。</param>
            <returns>返回 CachePreKey 。</returns>
        </member>
        <member name="M:SuperMap.IS.MapCache.CacheHelper.GetCachePreKeyInCompatibleMode(SuperMap.IS.Utility.MapParam)">
            <summary>
            相当于调用 GetCachePreKeyInCompatibleMode(mapParam, false, false, true)。
            </summary>
            <param name="mapParam">地图参数信息</param>
            <returns></returns>
            <remarks>
            调用之前要确保 mapParam 已经过校验。(mapParam.Rectify)
            </remarks>
        </member>
        <member name="M:SuperMap.IS.MapCache.CacheHelper.GetCachePreKeyInCompatibleMode(SuperMap.IS.Utility.MapParam,System.Boolean,System.Boolean)">
            <summary>
            相当于调用 GetCachePreKeyInCompatibleMode(mapParam, skipMapScale, skipLayerMinMaxScale, true)。
            </summary>
            <param name="mapParam">地图参数信息</param>
            <param name="skipMapScale"></param>
            <param name="skipLayerMinMaxScale"></param>
            <returns></returns>
            <remarks>
            调用之前要确保 mapParam 已经过校验。(mapParam.Rectify)
            </remarks>
        </member>
        <member name="M:SuperMap.IS.MapCache.CacheHelper.GetCachePreKeyInCompatibleMode(SuperMap.IS.Utility.MapParam,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            相当于调用 GetCachePreKeyInCompatibleMode(mapParam, skipMapScale, skipLayerMinMaxScale, skipThemes, true)。
            </summary>
            <param name="mapParam"></param>
            <param name="skipMapScale"></param>
            <param name="skipLayerMinMaxScale"></param>
            <param name="skipThemes"></param>
            <returns></returns>
            <remarks>
            调用之前要确保 mapParam 已经过校验。(mapParam.Rectify)
            </remarks>
        </member>
        <member name="M:SuperMap.IS.MapCache.CacheHelper.GetCachePreKeyInCompatibleMode(SuperMap.IS.Utility.MapParam,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            获取与5.2.1兼容的缓存Key，调用之前要确保 mapParam 已经过校验。(mapParam.Rectify)
            </summary>
            <param name="mapParam"></param>
            <param name="skipMapScale"></param>
            <param name="skipLayerMinMaxScale"></param>
            <param name="skipThemes"></param>
            <param name="skipLayerStyles"></param>
            <returns></returns>
        </member>
        <member name="M:SuperMap.IS.MapCache.CacheHelper.ConvertNumberToCustomHex(System.UInt64,System.UInt32)">
            <summary>
            将一个 long 型整数转换成自定义进制的 string 形式。
            </summary>
            <param name="input"></param>
            <param name="customHex">自定义进制的长度，如 36 进制、62 进制等。应当在 2 到 62 之间。</param>
            <returns></returns>
        </member>
        <member name="M:SuperMap.IS.MapCache.CacheHelper.ConvertCustomHexToNumber(System.String,System.UInt32)">
            <summary>
            ConvertNumberToCustomHex 的反函数。
            </summary>
            <param name="input"></param>
            <param name="customHex"></param>
            <returns></returns>
        </member>
        <member name="T:SuperMap.IS.MapCache.CachePreKeyOptions">
            <summary>
            生成 CachePreKey 时的选项。
            <para>此枚举有一个 <see cref="T:System.FlagsAttribute"/> 属性，允许其成员值按位组合。</para>
            </summary>
        </member>
        <member name="F:SuperMap.IS.MapCache.CachePreKeyOptions.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:SuperMap.IS.MapCache.CachePreKeyOptions.SkipMapScale">
            <summary>
            忽略地图比例尺。
            </summary>
        </member>
        <member name="F:SuperMap.IS.MapCache.CachePreKeyOptions.SkipMinMaxScales">
            <summary>
            忽略地图和图层的最大最小比例尺。
            </summary>
        </member>
        <member name="F:SuperMap.IS.MapCache.CachePreKeyOptions.SkipThemes">
            <summary>
            忽略图层的专题图。
            </summary>
        </member>
        <member name="F:SuperMap.IS.MapCache.CachePreKeyOptions.SkipStyles">
            <summary>
            忽略图层的风格。
            </summary>
        </member>
        <member name="F:SuperMap.IS.MapCache.CachePreKeyOptions.SkipDisplayFilters">
            <summary>
            忽略图层的显示过滤条件。
            </summary>
        </member>
        <member name="F:SuperMap.IS.MapCache.CachePreKeyOptions.SkipImageFormat">
            <summary>
            忽略图片格式
            </summary>
        </member>
        <member name="F:SuperMap.IS.MapCache.CachePreKeyOptions.SkipRasterOpaqueRate">
            <summary>
             忽略栅格图层透明度
            </summary>
        </member>
        <member name="T:SuperMap.IS.Web.RestMap">
            <summary>
            用户访问SuperMap iServer 6R Rest服务的类，继承TcpMap。
            通过RestMap.Create(string mapServiceUrl, string dataServiceUrl, string spatialServiceUrl, string networkServiceUrl)静态方法创建RestMap对象。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.RestMap.Create(System.String,System.String,System.String,System.String)">
            <summary>
            创建一个用来访问iServer REST服务的对象实例。
            </summary>
            <param name="mapServiceUrl">地图服务地址。</param>
            <param name="dataServiceUrl">数据服务地址。</param>
            <param name="spatialServiceUrl">空间分析服务地址。</param>
            <param name="networkServiceUrl">网络分析服务地址。</param>
            <returns>RestMap 对象实例。</returns>
            <example>
            <code>
            RestMap restMap = RestMap.Create("http://localhost:8090/iserver/services/map-world",
            "http://localhost:8090/iserver/services/data-world",
            "http://localhost:8090/iserver/services/spatialanalyst-world",
            "http://localhost:8090/iserver/services/transportationanalyst-sample");
            </code>
            </example>
        </member>
        <member name="M:SuperMap.IS.Web.RestMap.Create(System.String,System.String[])">
            <summary>
            创建一个用来访问 iServer REST 服务的对象实例。
            </summary>
            <param name="baseUrl">SuperMap iServer 服务列表地址。</param>
            <param name="services">服务实例。</param>
            <returns>RestMap 对象实例。</returns>
            <remarks>
            services 参数分别传递不同的服务实例，第一个为地图服务实例，
            第二个为数据服务实例，第三个为空间分析服务实例，第四个参数为网络分析服务实例。
            </remarks>
            <example>
            <code>
            RestMap map = RestMap.Create("http://localhost:8090/iserver/services/", "map-world","data-world","spatialanalyst-world","transportationanalyst-sample");
            </code>
            </example>
        </member>
        <member name="M:SuperMap.IS.Web.RestMap.GetDefaultMapImage">
            <summary>
            获取默认地图。
            </summary>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.RestMap.GetDefaultMapImage(System.String,System.Int32,System.Int32)">
            <summary>
            根据地图名称、地图大小获取地图。
            </summary>
            <param name="mapName">地图名称</param>
            <param name="mapWidth">地图宽度</param>
            <param name="mapHeight">地图高度</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.RestMap.GetCachedMapImage(SuperMap.IS.Utility.MapParam)">
            <summary>
            根据地图参数的描述获取缓存过的地图。
            </summary>
            <param name="mapParam">地图参数</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.RestMap.GetMapImage(SuperMap.IS.Utility.MapParam)">
            <summary>
            根据客户端提交地图参数取得地图图片。
            </summary>
            <param name="mapParam">地图参数</param>
            <returns>地图对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.RestMap.GetOverview(SuperMap.IS.Utility.Overview)">
            <summary>
            取得鹰眼。
            </summary>
            <param name="overview">鹰眼参数</param>
            <returns>鹰眼对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.RestMap.GetMapNames">
            <summary>
            获取地图列表。
            </summary>
            <returns>返回地图列表。</returns>
        </member>
        <member name="M:SuperMap.IS.Web.RestMap.GetCachedReferBounds(System.String,System.Int32,System.Int32)">
            <summary>
            获取地图对应的缓存参考范围。
            </summary>
            <param name="mapName">地图名</param>
            <param name="tileWidth">缓存图片的宽度</param>
            <param name="tileHeight">缓存图片的高度</param>
            <returns>缓存参考范围</returns>
        </member>
        <member name="M:SuperMap.IS.Web.RestMap.GetResource(System.String,SuperMap.IS.Utility.ResourceParam)">
            <summary>
            获取资源图片
            </summary>
            <param name="mapName">地图名</param>
            <param name="resourceParam">资源参数</param>
            <returns>图片地址</returns>
        </member>
        <member name="M:SuperMap.IS.Web.RestMap.QueryBySql(SuperMap.IS.Utility.QueryParam)">
            <summary>
            Sql查询。
            </summary>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.RestMap.QueryByDistance(SuperMap.IS.Utility.PixelCoord,System.Int32,SuperMap.IS.Utility.QueryParam)">
            <summary>
            查找一定距离内（圆内）所有的对象，以像素坐标为单位。
            </summary>
            <param name="queryPoint">像素坐标中心点</param>
            <param name="pixelDistance">像素坐标距离容限</param>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.RestMap.QueryByDistance(SuperMap.IS.Utility.MapCoord,System.Double,SuperMap.IS.Utility.QueryParam)">
            <summary>
            查找一定距离内（圆内）所有的对象，以地理坐标为单位。
            </summary>
            <param name="queryPoint">地理坐标中心点</param>
            <param name="mapDistance">地图范围</param>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.RestMap.QueryByPoint(SuperMap.IS.Utility.MapCoord,System.Double,SuperMap.IS.Utility.QueryParam)">
            <summary>
            点选查询，以地理坐标为单位。
            </summary>
            <param name="mapCoord">地理坐标中心点</param>
            <param name="tolerance">地理坐标距离容限。不能小于0，建议取一个适中的值，比如5。</param>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.RestMap.QueryByLine(SuperMap.IS.Utility.MapCoord[],SuperMap.IS.Utility.QueryParam,SuperMap.IS.Utility.SpatialQueryMode)">
            <summary>
            沿线查询。
            </summary>
            <remarks>
            <para>
            沿线查询是沿着一条指定的线路对该线路附近的对象进行查询，并返回满足查询条件的记录。
            </para>
            <para>
            在进行沿线查询之前，首先需要对查询参数<see cref="T:SuperMap.IS.Utility.QueryParam">SuperMap.IS.Utility.QueryParam类</see>进行
            设置。返回的查询结果通过<see cref="T:SuperMap.IS.Utility.ResultSet">SuperMap.IS.Utility.ResultSet</see>来获取。
            </para>
            </remarks>
            <param name="mapCoords">地理坐标点集</param>
            <param name="queryParam">查询参数</param>
            <param name="mode">查询模式</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.RestMap.QueryByRect(SuperMap.IS.Utility.MapRect,SuperMap.IS.Utility.QueryParam)">
            <summary>
            矩形查询。
            </summary>
            <param name="mapRect">地理坐标范围</param>
            <param name="queryParam">查询参数</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.RestMap.QueryByRect(SuperMap.IS.Utility.MapRect,SuperMap.IS.Utility.QueryParam,SuperMap.IS.Utility.SpatialQueryMode)">
            <summary>
            矩形查询。
            </summary>
            <param name="mapRect">地理坐标范围</param>
            <param name="queryParam">查询参数</param>
            <param name="mode">空间查询模式</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.RestMap.QueryByPolygon(SuperMap.IS.Utility.MapCoord[],SuperMap.IS.Utility.QueryParam,SuperMap.IS.Utility.SpatialQueryMode)">
            <summary>
            多边形查询。
            </summary>
            <param name="mapCoords">地理坐标点集</param>
            <param name="queryParam">查询参数</param>
            <param name="mode">查询模式</param>
            <returns>查询结果对象</returns>
        </member>
        <member name="M:SuperMap.IS.Web.RestMap.QueryByGeometry(SuperMap.IS.Utility.Geometry,SuperMap.IS.Utility.QueryParam,SuperMap.IS.Utility.SpatialQueryMode)">
             <summary>
             空间几何对象查询。  
             </summary>
             <param name="geometry">空间对象</param>
             <param name="queryParam">查询参数</param>
             <param name="mode">空间查询模式</param>
             <returns>查询结果对象</returns>
             <remarks> 
             目前支持对点、线、多边形、文本、圆、位图等几何对象的空间查询。
            </remarks>
        </member>
        <member name="T:SuperMap.IS.Web.CachedMapOption">
            <summary>
            缓存选项设置类。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMapOption.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.CachedMapOption.#ctor(SuperMap.IS.Web.CachedMapOption)">
            <summary>
            拷贝构造函数。
            </summary>
            <param name="option">缓存选项设置对象</param>
        </member>
        <member name="P:SuperMap.IS.Web.CachedMapOption.Enabled">
            <summary>
            是否使用缓存。
            </summary>
        </member>
        <member name="P:SuperMap.IS.Web.CachedMapOption.PicCellWidth">
            <summary>
            将图片剪裁后每一块格子的宽度。
            </summary>
        </member>
        <member name="P:SuperMap.IS.Web.CachedMapOption.PicCellHeight">
            <summary>
            将图片剪裁后每一块格子的高度。
            </summary>
        </member>
        <member name="P:SuperMap.IS.Web.CachedMapOption.NeedMoreCell">
            <summary>
            是否多取某个小单元格的周围一圈地图。 
            </summary>
        </member>
        <member name="P:SuperMap.IS.Web.CachedMapOption.UseThreadPool">
            <summary>
            是否使用线程池。
            </summary>
        </member>
        <member name="P:SuperMap.IS.Web.CachedMapOption.LevelEnabled">
            <summary>
            是否启用比例尺分级。
            </summary>
            <remarks>
            如果启用，系统将按照设置只显示某些级别比例尺的地图，
            对于放大、缩小的比例尺，web应用将选取与某个级别相近的级别地图进行出图。
            </remarks>
        </member>
        <member name="P:SuperMap.IS.Web.CachedMapOption.ScaleLevel">
            <summary>
            比例尺分级级别数。
            </summary>
            <remarks>
            级别数应当是一个正整数。默认值为 9。
            </remarks>
        </member>
        <member name="P:SuperMap.IS.Web.CachedMapOption.ScaleProportion">
            <summary>
            比例尺分级序列的公比。
            </summary>
            <remarks>
            只支持整数型的公比。公比应当是一个大于 1 的整数。默认值为 2。
            </remarks>
        </member>
        <member name="P:SuperMap.IS.Web.CachedMapOption.SpacerUrl">
            <summary>
            背景图片的地址。
            </summary>
        </member>
        <member name="P:SuperMap.IS.Web.CachedMapOption.MinScaleReciprocal">
            <summary>
            比例尺分级序列的起始比例尺的倒数，如果起始比例尺为1:2500，就设置为2500。起始比例尺默认为全幅时的比例尺。
            </summary>
        </member>
        <member name="P:SuperMap.IS.Web.CachedMapOption.LeveledScaleReciprocals">
             <summary>
             比例尺分级序列的各级比例尺的倒数。如果需要 1:10000, 1:5000, 1:2000, 1:1000 等级别比例尺，就赋值为 "10000, 5000, 2000, 1000"。
            </summary>
             <remarks>
             如果 LeveledScaleReciprocals 赋了值并且是可用的值，就会自动忽略 “ScaleLevel”、“ScaleProportion”、
             “MinScaleReciprocal” 等设置。
             <para>LeveledScaleReciprocals 的设置应当满足以下条件：</para>
             个数不小于1；都是大于 0 的正数；都在地图的最大最小比例尺范围内。        
             </remarks>
        </member>
        <member name="P:SuperMap.IS.Web.CachedMapOption.ImageCacheDuration">
            <summary>
            地图图片缓存的过期时间间隔，以秒为单位，如果设置为0，则表示永不过期。默认为15分钟。
            </summary>
        </member>
        <member name="P:SuperMap.IS.Web.CachedMapOption.ParamCacheDuration">
            <summary>
            地图参数缓存的过期时间间隔，以秒为单位，如果设置为0，则表示永不过期。默认为60秒。
            </summary>
        </member>
        <member name="T:SuperMap.IS.Web.ImageHandler">
            <summary>
            用于处理客户端发送的获取图片的 Http 请求的 HttpHandler。
            </summary>
        </member>
        <member name="F:SuperMap.IS.Web.ImageHandler._queryStringImageUrl">
            <summary>
            定义代表图片URL地址的QueryString。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.ImageHandler.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.ImageHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            处理用户的Http请求
            </summary>
            <param name="context">Http上下文</param>
        </member>
        <member name="M:SuperMap.IS.Web.ImageHandler.Dispose">
            <summary>
            释放资源。
            </summary>
        </member>
        <member name="M:SuperMap.IS.Web.ImageHandler.Dispose(System.Boolean)">
            <summary>
            释放资源。
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:SuperMap.IS.Web.ImageHandler.MapImageBinaryDatas">
            <summary>
            获取MapImage的二进制数据。
            </summary>
        </member>
        <member name="P:SuperMap.IS.Web.ImageHandler.IsReusable">
            <summary>
            Http运行期能否复用一个Http处理程序实例来处理多个请求
            </summary>
        </member>
    </members>
</doc>
